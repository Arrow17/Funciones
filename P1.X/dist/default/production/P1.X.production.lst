

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri May 31 22:57:56 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  005D6A                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for SENO_GENERAR_3@F7369
    47  005D6A  0032               	dw	50
    48  005D6C  0046               	dw	70
    49  005D6E  0057               	dw	87
    50  005D70  0062               	dw	98
    51  005D72  0064               	dw	100
    52  005D74  005D               	dw	93
    53  005D76  004F               	dw	79
    54  005D78  003C               	dw	60
    55  005D7A  0028               	dw	40
    56  005D7C  0015               	dw	21
    57  005D7E  0007               	dw	7
    58  005D80  0000               	dw	0
    59  005D82  0002               	dw	2
    60  005D84  000D               	dw	13
    61  005D86  001E               	dw	30
    62                           
    63                           ;initializer for TRIAN_GENERAR_3@F7369
    64  005D88  000D               	dw	13
    65  005D8A  001B               	dw	27
    66  005D8C  0028               	dw	40
    67  005D8E  0035               	dw	53
    68  005D90  0043               	dw	67
    69  005D92  0050               	dw	80
    70  005D94  005D               	dw	93
    71  005D96  0064               	dw	100
    72  005D98  005D               	dw	93
    73  005D9A  0050               	dw	80
    74  005D9C  0043               	dw	67
    75  005D9E  0035               	dw	53
    76  005DA0  0028               	dw	40
    77  005DA2  001B               	dw	27
    78  005DA4  000D               	dw	13
    79                           
    80                           	psect	idataBANK1
    81  006330                     __pidataBANK1:
    82                           	opt stack 0
    83                           
    84                           ;initializer for SENO_GENERAR_1@F7362
    85  006330  0032               	dw	50
    86  006332  0023               	dw	35
    87  006334  0015               	dw	21
    88  006336  000A               	dw	10
    89  006338  0002               	dw	2
    90  00633A  0000               	dw	0
    91  00633C  0002               	dw	2
    92  00633E  000A               	dw	10
    93  006340  0015               	dw	21
    94  006342  0023               	dw	35
    95  006344  0032               	dw	50
    96  006346  0041               	dw	65
    97  006348  004F               	dw	79
    98  00634A  005A               	dw	90
    99  00634C  0062               	dw	98
   100  00634E  0064               	dw	100
   101  006350  0062               	dw	98
   102  006352  005A               	dw	90
   103  006354  004F               	dw	79
   104  006356  0041               	dw	65
   105                           
   106                           ;initializer for TRIAN_GENERAR_1@F7362
   107  006358  000A               	dw	10
   108  00635A  0014               	dw	20
   109  00635C  001E               	dw	30
   110  00635E  0028               	dw	40
   111  006360  0032               	dw	50
   112  006362  003C               	dw	60
   113  006364  0046               	dw	70
   114  006366  0050               	dw	80
   115  006368  005A               	dw	90
   116  00636A  0064               	dw	100
   117  00636C  005A               	dw	90
   118  00636E  0050               	dw	80
   119  006370  0046               	dw	70
   120  006372  003C               	dw	60
   121  006374  0032               	dw	50
   122  006376  0028               	dw	40
   123  006378  001E               	dw	30
   124  00637A  0014               	dw	20
   125  00637C  000A               	dw	10
   126  00637E  0000               	dw	0
   127                           
   128                           ;initializer for SENO_GENERAR_2@F7366
   129  006380  0032               	dw	50
   130  006382  0043               	dw	67
   131  006384  0052               	dw	82
   132  006386  005D               	dw	93
   133  006388  0063               	dw	99
   134  00638A  0063               	dw	99
   135  00638C  005D               	dw	93
   136  00638E  0052               	dw	82
   137  006390  0043               	dw	67
   138  006392  0032               	dw	50
   139  006394  0021               	dw	33
   140  006396  0012               	dw	18
   141  006398  0007               	dw	7
   142  00639A  0001               	dw	1
   143  00639C  0001               	dw	1
   144  00639E  0007               	dw	7
   145  0063A0  0012               	dw	18
   146  0063A2  0021               	dw	33
   147                           
   148                           ;initializer for TRIAN_GENERAR_2@F7366
   149  0063A4  000B               	dw	11
   150  0063A6  0016               	dw	22
   151  0063A8  0021               	dw	33
   152  0063AA  002C               	dw	44
   153  0063AC  0038               	dw	56
   154  0063AE  0043               	dw	67
   155  0063B0  004E               	dw	78
   156  0063B2  0059               	dw	89
   157  0063B4  0064               	dw	100
   158  0063B6  0059               	dw	89
   159  0063B8  004E               	dw	78
   160  0063BA  0043               	dw	67
   161  0063BC  0038               	dw	56
   162  0063BE  002C               	dw	44
   163  0063C0  0021               	dw	33
   164  0063C2  0016               	dw	22
   165  0063C4  000B               	dw	11
   166  0063C6  0000               	dw	0
   167  0000                     _ANSELA	set	3931
   168  0000                     _ANSELC	set	3933
   169  0000                     _ANSELD	set	3934
   170  0000                     _CCP1CONbits	set	4029
   171  0000                     _CCP2CON	set	3991
   172  0000                     _CCPR1L	set	4030
   173  0000                     _CCPR2L	set	3984
   174  0000                     _OSCCON	set	4051
   175  0000                     _PORTA	set	3968
   176  0000                     _PORTAbits	set	3968
   177  0000                     _PORTDbits	set	3971
   178  0000                     _PR2	set	4027
   179  0000                     _T2CON	set	4026
   180  0000                     _T2CONbits	set	4026
   181  0000                     _TMR2	set	4028
   182  0000                     _TRISA	set	3986
   183  0000                     _TRISCbits	set	3988
   184  0000                     _TRISDbits	set	3989
   185                           
   186                           	psect	mediumconst
   187  007E72                     __pmediumconst:
   188                           	opt stack 0
   189  007E72  00                 	db	0
   190  007E73                     __stringdata:
   191                           	opt stack 0
   192  007E73                     STR_2:
   193  007E73  50                 	db	80	;'P'
   194  007E74  72                 	db	114	;'r'
   195  007E75  6F                 	db	111	;'o'
   196  007E76  79                 	db	121	;'y'
   197  007E77  65                 	db	101	;'e'
   198  007E78  63                 	db	99	;'c'
   199  007E79  74                 	db	116	;'t'
   200  007E7A  6F                 	db	111	;'o'
   201  007E7B  20                 	db	32
   202  007E7C  46                 	db	70	;'F'
   203  007E7D  69                 	db	105	;'i'
   204  007E7E  6E                 	db	110	;'n'
   205  007E7F  61                 	db	97	;'a'
   206  007E80  6C                 	db	108	;'l'
   207  007E81  20                 	db	32
   208  007E82  00                 	db	0
   209  007E83                     STR_9:
   210  007E83  20                 	db	32
   211  007E84  20                 	db	32
   212  007E85  20                 	db	32
   213  007E86  46                 	db	70	;'F'
   214  007E87  72                 	db	114	;'r'
   215  007E88  65                 	db	101	;'e'
   216  007E89  63                 	db	99	;'c'
   217  007E8A  75                 	db	117	;'u'
   218  007E8B  65                 	db	101	;'e'
   219  007E8C  6E                 	db	110	;'n'
   220  007E8D  63                 	db	99	;'c'
   221  007E8E  69                 	db	105	;'i'
   222  007E8F  61                 	db	97	;'a'
   223  007E90  00                 	db	0
   224  007E91                     STR_11:
   225  007E91  3D                 	db	61	;'='
   226  007E92  3E                 	db	62	;'>'
   227  007E93  20                 	db	32
   228  007E94  46                 	db	70	;'F'
   229  007E95  72                 	db	114	;'r'
   230  007E96  65                 	db	101	;'e'
   231  007E97  63                 	db	99	;'c'
   232  007E98  75                 	db	117	;'u'
   233  007E99  65                 	db	101	;'e'
   234  007E9A  6E                 	db	110	;'n'
   235  007E9B  63                 	db	99	;'c'
   236  007E9C  69                 	db	105	;'i'
   237  007E9D  61                 	db	97	;'a'
   238  007E9E  00                 	db	0
   239  007E9F                     STR_83:
   240  007E9F  3D                 	db	61	;'='
   241  007EA0  3E                 	db	62	;'>'
   242  007EA1  20                 	db	32
   243  007EA2  54                 	db	84	;'T'
   244  007EA3  72                 	db	114	;'r'
   245  007EA4  69                 	db	105	;'i'
   246  007EA5  61                 	db	97	;'a'
   247  007EA6  6E                 	db	110	;'n'
   248  007EA7  67                 	db	103	;'g'
   249  007EA8  75                 	db	117	;'u'
   250  007EA9  6C                 	db	108	;'l'
   251  007EAA  61                 	db	97	;'a'
   252  007EAB  72                 	db	114	;'r'
   253  007EAC  00                 	db	0
   254  007EAD                     STR_4:
   255  007EAD  20                 	db	32
   256  007EAE  20                 	db	32
   257  007EAF  20                 	db	32
   258  007EB0  53                 	db	83	;'S'
   259  007EB1  65                 	db	101	;'e'
   260  007EB2  6E                 	db	110	;'n'
   261  007EB3  6F                 	db	111	;'o'
   262  007EB4  69                 	db	105	;'i'
   263  007EB5  64                 	db	100	;'d'
   264  007EB6  61                 	db	97	;'a'
   265  007EB7  6C                 	db	108	;'l'
   266  007EB8  00                 	db	0
   267  007EB9                     STR_74:
   268  007EB9  3D                 	db	61	;'='
   269  007EBA  3E                 	db	62	;'>'
   270  007EBB  20                 	db	32
   271  007EBC  53                 	db	83	;'S'
   272  007EBD  65                 	db	101	;'e'
   273  007EBE  6E                 	db	110	;'n'
   274  007EBF  6F                 	db	111	;'o'
   275  007EC0  69                 	db	105	;'i'
   276  007EC1  64                 	db	100	;'d'
   277  007EC2  61                 	db	97	;'a'
   278  007EC3  6C                 	db	108	;'l'
   279  007EC4  00                 	db	0
   280  007EC5                     STR_5:
   281  007EC5  20                 	db	32
   282  007EC6  20                 	db	32
   283  007EC7  20                 	db	32
   284  007EC8  49                 	db	73	;'I'
   285  007EC9  6E                 	db	110	;'n'
   286  007ECA  67                 	db	103	;'g'
   287  007ECB  72                 	db	114	;'r'
   288  007ECC  65                 	db	101	;'e'
   289  007ECD  73                 	db	115	;'s'
   290  007ECE  61                 	db	97	;'a'
   291  007ECF  72                 	db	114	;'r'
   292  007ED0  00                 	db	0
   293  007ED1                     STR_7:
   294  007ED1  3D                 	db	61	;'='
   295  007ED2  3E                 	db	62	;'>'
   296  007ED3  20                 	db	32
   297  007ED4  49                 	db	73	;'I'
   298  007ED5  6E                 	db	110	;'n'
   299  007ED6  67                 	db	103	;'g'
   300  007ED7  72                 	db	114	;'r'
   301  007ED8  65                 	db	101	;'e'
   302  007ED9  73                 	db	115	;'s'
   303  007EDA  61                 	db	97	;'a'
   304  007EDB  72                 	db	114	;'r'
   305  007EDC  00                 	db	0
   306  007EDD                     STR_6:
   307  007EDD  20                 	db	32
   308  007EDE  20                 	db	32
   309  007EDF  20                 	db	32
   310  007EE0  43                 	db	67	;'C'
   311  007EE1  6F                 	db	111	;'o'
   312  007EE2  6D                 	db	109	;'m'
   313  007EE3  65                 	db	101	;'e'
   314  007EE4  6E                 	db	110	;'n'
   315  007EE5  7A                 	db	122	;'z'
   316  007EE6  61                 	db	97	;'a'
   317  007EE7  72                 	db	114	;'r'
   318  007EE8  00                 	db	0
   319  007EE9                     STR_69:
   320  007EE9  3D                 	db	61	;'='
   321  007EEA  3E                 	db	62	;'>'
   322  007EEB  20                 	db	32
   323  007EEC  43                 	db	67	;'C'
   324  007EED  6F                 	db	111	;'o'
   325  007EEE  6D                 	db	109	;'m'
   326  007EEF  65                 	db	101	;'e'
   327  007EF0  6E                 	db	110	;'n'
   328  007EF1  7A                 	db	122	;'z'
   329  007EF2  61                 	db	97	;'a'
   330  007EF3  72                 	db	114	;'r'
   331  007EF4  00                 	db	0
   332  007EF5                     STR_1:
   333  007EF5  20                 	db	32
   334  007EF6  20                 	db	32
   335  007EF7  20                 	db	32
   336  007EF8  20                 	db	32
   337  007EF9  20                 	db	32
   338  007EFA  44                 	db	68	;'D'
   339  007EFB  49                 	db	73	;'I'
   340  007EFC  43                 	db	67	;'C'
   341  007EFD  49                 	db	73	;'I'
   342  007EFE  53                 	db	83	;'S'
   343  007EFF  00                 	db	0
   344  007F00                     STR_70:
   345  007F00  46                 	db	70	;'F'
   346  007F01  3A                 	db	58	;':'
   347  007F02  20                 	db	32
   348  007F03  20                 	db	32
   349  007F04  30                 	db	48	;'0'
   350  007F05  30                 	db	48	;'0'
   351  007F06  30                 	db	48	;'0'
   352  007F07  20                 	db	32
   353  007F08  68                 	db	104	;'h'
   354  007F09  7A                 	db	122	;'z'
   355  007F0A  00                 	db	0
   356  007F0B                     STR_87:
   357  007F0B  20                 	db	32
   358  007F0C  20                 	db	32
   359  007F0D  20                 	db	32
   360  007F0E  54                 	db	84	;'T'
   361  007F0F  72                 	db	114	;'r'
   362  007F10  69                 	db	105	;'i'
   363  007F11  6E                 	db	110	;'n'
   364  007F12  20                 	db	32
   365  007F13  31                 	db	49	;'1'
   366  007F14  00                 	db	0
   367  007F15                     STR_84:
   368  007F15  3D                 	db	61	;'='
   369  007F16  3E                 	db	62	;'>'
   370  007F17  20                 	db	32
   371  007F18  54                 	db	84	;'T'
   372  007F19  72                 	db	114	;'r'
   373  007F1A  69                 	db	105	;'i'
   374  007F1B  6E                 	db	110	;'n'
   375  007F1C  20                 	db	32
   376  007F1D  31                 	db	49	;'1'
   377  007F1E  00                 	db	0
   378  007F1F                     STR_85:
   379  007F1F  20                 	db	32
   380  007F20  20                 	db	32
   381  007F21  20                 	db	32
   382  007F22  54                 	db	84	;'T'
   383  007F23  72                 	db	114	;'r'
   384  007F24  69                 	db	105	;'i'
   385  007F25  6E                 	db	110	;'n'
   386  007F26  20                 	db	32
   387  007F27  32                 	db	50	;'2'
   388  007F28  00                 	db	0
   389  007F29                     STR_88:
   390  007F29  3D                 	db	61	;'='
   391  007F2A  3E                 	db	62	;'>'
   392  007F2B  20                 	db	32
   393  007F2C  54                 	db	84	;'T'
   394  007F2D  72                 	db	114	;'r'
   395  007F2E  69                 	db	105	;'i'
   396  007F2F  6E                 	db	110	;'n'
   397  007F30  20                 	db	32
   398  007F31  32                 	db	50	;'2'
   399  007F32  00                 	db	0
   400  007F33                     STR_90:
   401  007F33  3D                 	db	61	;'='
   402  007F34  3E                 	db	62	;'>'
   403  007F35  20                 	db	32
   404  007F36  54                 	db	84	;'T'
   405  007F37  72                 	db	114	;'r'
   406  007F38  69                 	db	105	;'i'
   407  007F39  6E                 	db	110	;'n'
   408  007F3A  20                 	db	32
   409  007F3B  33                 	db	51	;'3'
   410  007F3C  00                 	db	0
   411  007F3D                     STR_78:
   412  007F3D  20                 	db	32
   413  007F3E  20                 	db	32
   414  007F3F  20                 	db	32
   415  007F40  53                 	db	83	;'S'
   416  007F41  69                 	db	105	;'i'
   417  007F42  6E                 	db	110	;'n'
   418  007F43  20                 	db	32
   419  007F44  31                 	db	49	;'1'
   420  007F45  00                 	db	0
   421  007F46                     STR_75:
   422  007F46  3D                 	db	61	;'='
   423  007F47  3E                 	db	62	;'>'
   424  007F48  20                 	db	32
   425  007F49  53                 	db	83	;'S'
   426  007F4A  69                 	db	105	;'i'
   427  007F4B  6E                 	db	110	;'n'
   428  007F4C  20                 	db	32
   429  007F4D  31                 	db	49	;'1'
   430  007F4E  00                 	db	0
   431  007F4F                     STR_76:
   432  007F4F  20                 	db	32
   433  007F50  20                 	db	32
   434  007F51  20                 	db	32
   435  007F52  53                 	db	83	;'S'
   436  007F53  69                 	db	105	;'i'
   437  007F54  6E                 	db	110	;'n'
   438  007F55  20                 	db	32
   439  007F56  32                 	db	50	;'2'
   440  007F57  00                 	db	0
   441  007F58                     STR_79:
   442  007F58  3D                 	db	61	;'='
   443  007F59  3E                 	db	62	;'>'
   444  007F5A  20                 	db	32
   445  007F5B  53                 	db	83	;'S'
   446  007F5C  69                 	db	105	;'i'
   447  007F5D  6E                 	db	110	;'n'
   448  007F5E  20                 	db	32
   449  007F5F  32                 	db	50	;'2'
   450  007F60  00                 	db	0
   451  007F61                     STR_81:
   452  007F61  3D                 	db	61	;'='
   453  007F62  3E                 	db	62	;'>'
   454  007F63  20                 	db	32
   455  007F64  53                 	db	83	;'S'
   456  007F65  69                 	db	105	;'i'
   457  007F66  6E                 	db	110	;'n'
   458  007F67  20                 	db	32
   459  007F68  33                 	db	51	;'3'
   460  007F69  00                 	db	0
   461  007F6A                     STR_10:
   462  007F6A  20                 	db	32
   463  007F6B  20                 	db	32
   464  007F6C  20                 	db	32
   465  007F6D  43                 	db	67	;'C'
   466  007F6E  69                 	db	105	;'i'
   467  007F6F  63                 	db	99	;'c'
   468  007F70  6C                 	db	108	;'l'
   469  007F71  6F                 	db	111	;'o'
   470  007F72  00                 	db	0
   471  007F73                     STR_15:
   472  007F73  3D                 	db	61	;'='
   473  007F74  3E                 	db	62	;'>'
   474  007F75  20                 	db	32
   475  007F76  43                 	db	67	;'C'
   476  007F77  69                 	db	105	;'i'
   477  007F78  63                 	db	99	;'c'
   478  007F79  6C                 	db	108	;'l'
   479  007F7A  6F                 	db	111	;'o'
   480  007F7B  00                 	db	0
   481  007F7C                     STR_13:
   482  007F7C  20                 	db	32
   483  007F7D  20                 	db	32
   484  007F7E  30                 	db	48	;'0'
   485  007F7F  30                 	db	48	;'0'
   486  007F80  30                 	db	48	;'0'
   487  007F81  20                 	db	32
   488  007F82  48                 	db	72	;'H'
   489  007F83  7A                 	db	122	;'z'
   490  007F84  00                 	db	0
   491  007F85                     STR_73:
   492  007F85  20                 	db	32
   493  007F86  20                 	db	32
   494  007F87  20                 	db	32
   495  007F88  50                 	db	80	;'P'
   496  007F89  57                 	db	87	;'W'
   497  007F8A  4D                 	db	77	;'M'
   498  007F8B  00                 	db	0
   499  007F8C                     STR_3:
   500  007F8C  3D                 	db	61	;'='
   501  007F8D  3E                 	db	62	;'>'
   502  007F8E  20                 	db	32
   503  007F8F  50                 	db	80	;'P'
   504  007F90  57                 	db	87	;'W'
   505  007F91  4D                 	db	77	;'M'
   506  007F92  00                 	db	0
   507  007F93                     STR_55:
   508  007F93  20                 	db	32
   509  007F94  31                 	db	49	;'1'
   510  007F95  30                 	db	48	;'0'
   511  007F96  30                 	db	48	;'0'
   512  007F97  25                 	db	37
   513  007F98  00                 	db	0
   514  007F99                     STR_67:
   515  007F99  2A                 	db	42
   516  007F9A  31                 	db	49	;'1'
   517  007F9B  30                 	db	48	;'0'
   518  007F9C  30                 	db	48	;'0'
   519  007F9D  25                 	db	37
   520  007F9E  00                 	db	0
   521  007F9F                     STR_52:
   522  007F9F  20                 	db	32
   523  007FA0  2A                 	db	42
   524  007FA1  37                 	db	55	;'7'
   525  007FA2  30                 	db	48	;'0'
   526  007FA3  25                 	db	37
   527  007FA4  00                 	db	0
   528  007FA5                     STR_22:
   529  007FA5  20                 	db	32
   530  007FA6  31                 	db	49	;'1'
   531  007FA7  30                 	db	48	;'0'
   532  007FA8  25                 	db	37
   533  007FA9  00                 	db	0
   534  007FAA                     STR_16:
   535  007FAA  2A                 	db	42
   536  007FAB  31                 	db	49	;'1'
   537  007FAC  30                 	db	48	;'0'
   538  007FAD  25                 	db	37
   539  007FAE  00                 	db	0
   540  007FAF                     STR_17:
   541  007FAF  20                 	db	32
   542  007FB0  32                 	db	50	;'2'
   543  007FB1  30                 	db	48	;'0'
   544  007FB2  25                 	db	37
   545  007FB3  00                 	db	0
   546  007FB4                     STR_23:
   547  007FB4  2A                 	db	42
   548  007FB5  32                 	db	50	;'2'
   549  007FB6  30                 	db	48	;'0'
   550  007FB7  25                 	db	37
   551  007FB8  00                 	db	0
   552  007FB9                     STR_18:
   553  007FB9  20                 	db	32
   554  007FBA  33                 	db	51	;'3'
   555  007FBB  30                 	db	48	;'0'
   556  007FBC  25                 	db	37
   557  007FBD  00                 	db	0
   558  007FBE                     STR_30:
   559  007FBE  2A                 	db	42
   560  007FBF  33                 	db	51	;'3'
   561  007FC0  30                 	db	48	;'0'
   562  007FC1  25                 	db	37
   563  007FC2  00                 	db	0
   564  007FC3                     STR_19:
   565  007FC3  20                 	db	32
   566  007FC4  34                 	db	52	;'4'
   567  007FC5  30                 	db	48	;'0'
   568  007FC6  25                 	db	37
   569  007FC7  00                 	db	0
   570  007FC8                     STR_37:
   571  007FC8  2A                 	db	42
   572  007FC9  34                 	db	52	;'4'
   573  007FCA  30                 	db	48	;'0'
   574  007FCB  25                 	db	37
   575  007FCC  00                 	db	0
   576  007FCD                     STR_20:
   577  007FCD  20                 	db	32
   578  007FCE  35                 	db	53	;'5'
   579  007FCF  30                 	db	48	;'0'
   580  007FD0  25                 	db	37
   581  007FD1  00                 	db	0
   582  007FD2                     STR_44:
   583  007FD2  2A                 	db	42
   584  007FD3  35                 	db	53	;'5'
   585  007FD4  30                 	db	48	;'0'
   586  007FD5  25                 	db	37
   587  007FD6  00                 	db	0
   588  007FD7                     STR_21:
   589  007FD7  20                 	db	32
   590  007FD8  36                 	db	54	;'6'
   591  007FD9  30                 	db	48	;'0'
   592  007FDA  25                 	db	37
   593  007FDB  00                 	db	0
   594  007FDC                     STR_51:
   595  007FDC  2A                 	db	42
   596  007FDD  36                 	db	54	;'6'
   597  007FDE  30                 	db	48	;'0'
   598  007FDF  25                 	db	37
   599  007FE0  00                 	db	0
   600  007FE1                     STR_56:
   601  007FE1  20                 	db	32
   602  007FE2  37                 	db	55	;'7'
   603  007FE3  30                 	db	48	;'0'
   604  007FE4  25                 	db	37
   605  007FE5  00                 	db	0
   606  007FE6                     STR_53:
   607  007FE6  20                 	db	32
   608  007FE7  38                 	db	56	;'8'
   609  007FE8  30                 	db	48	;'0'
   610  007FE9  25                 	db	37
   611  007FEA  00                 	db	0
   612  007FEB                     STR_57:
   613  007FEB  2A                 	db	42
   614  007FEC  38                 	db	56	;'8'
   615  007FED  30                 	db	48	;'0'
   616  007FEE  25                 	db	37
   617  007FEF  00                 	db	0
   618  007FF0                     STR_54:
   619  007FF0  20                 	db	32
   620  007FF1  39                 	db	57	;'9'
   621  007FF2  30                 	db	48	;'0'
   622  007FF3  25                 	db	37
   623  007FF4  00                 	db	0
   624  007FF5                     STR_62:
   625  007FF5  2A                 	db	42
   626  007FF6  39                 	db	57	;'9'
   627  007FF7  30                 	db	48	;'0'
   628  007FF8  25                 	db	37
   629  007FF9  00                 	db	0
   630  007FFA                     STR_71:
   631  007FFA  43                 	db	67	;'C'
   632  007FFB  3A                 	db	58	;':'
   633  007FFC  20                 	db	32
   634  007FFD  00                 	db	0
   635  007FFE                     __end_of__stringdata:
   636                           	opt stack 0
   637                           
   638                           ; #config settings
   639  007FFE  00                 	db	0	; dummy byte at the end
   640  0000                     
   641                           	psect	cinit
   642  005EAC                     __pcinit:
   643                           	opt stack 0
   644  005EAC                     start_initialization:
   645                           	opt stack 0
   646  005EAC                     __initialization:
   647                           	opt stack 0
   648                           
   649                           ; Clear objects allocated to BANK0 (16 bytes)
   650  005EAC  EE00  F0CE         	lfsr	0,__pbssBANK0
   651  005EB0  0E10               	movlw	16
   652  005EB2                     clear_0:
   653  005EB2  6AEE               	clrf	postinc0,c
   654  005EB4  06E8               	decf	wreg,f,c
   655  005EB6  E1FD               	bnz	clear_0
   656                           
   657                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   658  005EB8  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   659                           
   660                           ; Clear objects allocated to COMRAM (6 bytes)
   661  005EBA  6A43               	clrf	(__pbssCOMRAM+5)& (0+255),c
   662  005EBC  6A42               	clrf	(__pbssCOMRAM+4)& (0+255),c
   663  005EBE  6A41               	clrf	(__pbssCOMRAM+3)& (0+255),c
   664  005EC0  6A40               	clrf	(__pbssCOMRAM+2)& (0+255),c
   665  005EC2  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   666  005EC4  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   667                           
   668                           ; Initialize objects allocated to BANK1 (152 bytes)
   669                           ; load TBLPTR registers with __pidataBANK1
   670  005EC6  0E30               	movlw	low __pidataBANK1
   671  005EC8  6EF6               	movwf	tblptrl,c
   672  005ECA  0E63               	movlw	high __pidataBANK1
   673  005ECC  6EF7               	movwf	tblptrh,c
   674  005ECE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   675  005ED0  6EF8               	movwf	tblptru,c
   676  005ED2  EE01  F000         	lfsr	0,__pdataBANK1
   677  005ED6  EE10 F098          	lfsr	1,152
   678  005EDA                     copy_data0:
   679  005EDA  0009               	tblrd		*+
   680  005EDC  CFF5 FFEE          	movff	tablat,postinc0
   681  005EE0  50E5               	movf	postdec1,w,c
   682  005EE2  50E1               	movf	fsr1l,w,c
   683  005EE4  E1FA               	bnz	copy_data0
   684                           
   685                           ; Initialize objects allocated to BANK0 (60 bytes)
   686                           ; load TBLPTR registers with __pidataBANK0
   687  005EE6  0E6A               	movlw	low __pidataBANK0
   688  005EE8  6EF6               	movwf	tblptrl,c
   689  005EEA  0E5D               	movlw	high __pidataBANK0
   690  005EEC  6EF7               	movwf	tblptrh,c
   691  005EEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   692  005EF0  6EF8               	movwf	tblptru,c
   693  005EF2  EE00  F060         	lfsr	0,__pdataBANK0
   694  005EF6  EE10 F03C          	lfsr	1,60
   695  005EFA                     copy_data1:
   696  005EFA  0009               	tblrd		*+
   697  005EFC  CFF5 FFEE          	movff	tablat,postinc0
   698  005F00  50E5               	movf	postdec1,w,c
   699  005F02  50E1               	movf	fsr1l,w,c
   700  005F04  E1FA               	bnz	copy_data1
   701  005F06                     end_of_initialization:
   702                           	opt stack 0
   703  005F06                     __end_of__initialization:
   704                           	opt stack 0
   705  005F06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   706  005F08  6EF8               	movwf	tblptru,c
   707  005F0A  0100               	movlb	0
   708  005F0C  EFE2  F036         	goto	_main	;jump to C main() function
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           
   718                           	psect	bitbssCOMRAM
   719  000220                     __pbitbssCOMRAM:
   720                           	opt stack 0
   721  000220                     PWM@BIT:
   722                           	opt stack 0
   723  000220                     	ds	1
   724  000221                     PWM_1@BIT:
   725                           	opt stack 0
   726  000221                     	ds	1
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736                           	psect	bssCOMRAM
   737  00003E                     __pbssCOMRAM:
   738                           	opt stack 0
   739  00003E                     _C:
   740                           	opt stack 0
   741  00003E                     	ds	2
   742  000040                     _D:
   743                           	opt stack 0
   744  000040                     	ds	2
   745  000042                     _frecuencia:
   746                           	opt stack 0
   747  000042                     	ds	2
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           postdec1	equ	0xFE5
   755                           fsr1l	equ	0xFE1
   756                           
   757                           	psect	bssBANK0
   758  0000CE                     __pbssBANK0:
   759                           	opt stack 0
   760  0000CE                     _B:
   761                           	opt stack 0
   762  0000CE                     	ds	2
   763  0000D0                     _M:
   764                           	opt stack 0
   765  0000D0                     	ds	2
   766  0000D2                     _e:
   767                           	opt stack 0
   768  0000D2                     	ds	2
   769  0000D4                     _p:
   770                           	opt stack 0
   771  0000D4                     	ds	2
   772  0000D6                     _q:
   773                           	opt stack 0
   774  0000D6                     	ds	2
   775  0000D8                     _r:
   776                           	opt stack 0
   777  0000D8                     	ds	2
   778  0000DA                     _t:
   779                           	opt stack 0
   780  0000DA                     	ds	2
   781  0000DC                     _w:
   782                           	opt stack 0
   783  0000DC                     	ds	2
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           postdec1	equ	0xFE5
   791                           fsr1l	equ	0xFE1
   792                           
   793                           	psect	dataBANK0
   794  000060                     __pdataBANK0:
   795                           	opt stack 0
   796  000060                     SENO_GENERAR_3@F7369:
   797                           	opt stack 0
   798  000060                     	ds	30
   799  00007E                     TRIAN_GENERAR_3@F7369:
   800                           	opt stack 0
   801  00007E                     	ds	30
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           
   811                           	psect	dataBANK1
   812  000100                     __pdataBANK1:
   813                           	opt stack 0
   814  000100                     SENO_GENERAR_1@F7362:
   815                           	opt stack 0
   816  000100                     	ds	40
   817  000128                     TRIAN_GENERAR_1@F7362:
   818                           	opt stack 0
   819  000128                     	ds	40
   820  000150                     SENO_GENERAR_2@F7366:
   821                           	opt stack 0
   822  000150                     	ds	36
   823  000174                     TRIAN_GENERAR_2@F7366:
   824                           	opt stack 0
   825  000174                     	ds	36
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           wreg	equ	0xFE8
   832                           postdec1	equ	0xFE5
   833                           fsr1l	equ	0xFE1
   834                           
   835                           	psect	cstackBANK0
   836  00009C                     __pcstackBANK0:
   837                           	opt stack 0
   838  00009C                     main@cad:
   839                           	opt stack 0
   840                           
   841                           ; 20 bytes @ 0x0
   842  00009C                     	ds	20
   843  0000B0                     main@cadena:
   844                           	opt stack 0
   845                           
   846                           ; 20 bytes @ 0x14
   847  0000B0                     	ds	20
   848  0000C4                     main@V:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x28
   852  0000C4                     	ds	2
   853  0000C6                     main@fre:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x2A
   857  0000C6                     	ds	1
   858  0000C7                     main@cantidad:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x2B
   862  0000C7                     	ds	1
   863  0000C8                     main@cant:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x2C
   867  0000C8                     	ds	1
   868  0000C9                     main@X:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x2D
   872  0000C9                     	ds	2
   873  0000CB                     main@Z:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x2F
   877  0000CB                     	ds	2
   878  0000CD                     main@A:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x31
   882  0000CD                     	ds	1
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892                           	psect	cstackCOMRAM
   893  000001                     __pcstackCOMRAM:
   894                           	opt stack 0
   895  000001                     ??_Lcd_Cmd:
   896  000001                     ??_Lcd_Chr_CP:
   897  000001                     ??_tm_1s:
   898  000001                     ?___wmul:
   899                           	opt stack 0
   900  000001                     ?___awdiv:
   901                           	opt stack 0
   902  000001                     ?___lmul:
   903                           	opt stack 0
   904  000001                     ?___aldiv:
   905                           	opt stack 0
   906  000001                     ?___almod:
   907                           	opt stack 0
   908  000001                     ?___lldiv:
   909                           	opt stack 0
   910  000001                     ___wmul@multiplier:
   911                           	opt stack 0
   912  000001                     ___awdiv@dividend:
   913                           	opt stack 0
   914  000001                     ___lmul@multiplier:
   915                           	opt stack 0
   916  000001                     ___aldiv@dividend:
   917                           	opt stack 0
   918  000001                     ___almod@dividend:
   919                           	opt stack 0
   920  000001                     ___lldiv@dividend:
   921                           	opt stack 0
   922                           
   923                           ; 4 bytes @ 0x0
   924  000001                     	ds	1
   925  000002                     tm_1s@i:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x1
   929  000002                     	ds	1
   930  000003                     Lcd_Chr_CP@data:
   931                           	opt stack 0
   932  000003                     Lcd_Cmd@data:
   933                           	opt stack 0
   934  000003                     ___wmul@multiplicand:
   935                           	opt stack 0
   936  000003                     ___awdiv@divisor:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x2
   940  000003                     	ds	1
   941  000004                     ??_Lcd_Init:
   942  000004                     Lcd_Out@x:
   943                           	opt stack 0
   944  000004                     Lcd_Out2@x:
   945                           	opt stack 0
   946  000004                     lcd_goto@x:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x3
   950  000004                     	ds	1
   951  000005                     Lcd_Init@data:
   952                           	opt stack 0
   953  000005                     ___awdiv@counter:
   954                           	opt stack 0
   955  000005                     Lcd_Out@buffer:
   956                           	opt stack 0
   957  000005                     Lcd_Out2@buffer:
   958                           	opt stack 0
   959  000005                     ___wmul@product:
   960                           	opt stack 0
   961  000005                     ___lmul@multiplicand:
   962                           	opt stack 0
   963  000005                     ___aldiv@divisor:
   964                           	opt stack 0
   965  000005                     ___almod@divisor:
   966                           	opt stack 0
   967  000005                     ___lldiv@divisor:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x4
   971  000005                     	ds	1
   972  000006                     ___awdiv@sign:
   973                           	opt stack 0
   974  000006                     lcd_goto@y:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x5
   978  000006                     	ds	1
   979  000007                     Lcd_Out@y:
   980                           	opt stack 0
   981  000007                     Lcd_Out2@y:
   982                           	opt stack 0
   983  000007                     ___awdiv@quotient:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x6
   987  000007                     	ds	1
   988  000008                     ??_lcd_goto:
   989  000008                     Lcd_Out@data:
   990                           	opt stack 0
   991  000008                     Lcd_Out2@data:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x7
   995  000008                     	ds	1
   996  000009                     ___aldiv@counter:
   997                           	opt stack 0
   998  000009                     ___almod@counter:
   999                           	opt stack 0
  1000  000009                     PWM@canal:
  1001                           	opt stack 0
  1002  000009                     PWM_1@canal:
  1003                           	opt stack 0
  1004  000009                     ___lmul@product:
  1005                           	opt stack 0
  1006  000009                     ___lldiv@quotient:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x8
  1010  000009                     	ds	1
  1011  00000A                     lcd_goto@data:
  1012                           	opt stack 0
  1013  00000A                     ___aldiv@sign:
  1014                           	opt stack 0
  1015  00000A                     ___almod@sign:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x9
  1019  00000A                     	ds	1
  1020  00000B                     PWM@duty:
  1021                           	opt stack 0
  1022  00000B                     PWM_1@duty:
  1023                           	opt stack 0
  1024  00000B                     ___aldiv@quotient:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0xA
  1028  00000B                     	ds	2
  1029  00000D                     ??_PWM:
  1030  00000D                     ??_PWM_1:
  1031  00000D                     ___lldiv@counter:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0xC
  1035  00000D                     	ds	1
  1036  00000E                     PWM_generar@duty:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0xD
  1040  00000E                     	ds	1
  1041  00000F                     ?_Conv_Entero:
  1042                           	opt stack 0
  1043  00000F                     PWM@calculos:
  1044                           	opt stack 0
  1045  00000F                     PWM_1@calculos:
  1046                           	opt stack 0
  1047  00000F                     Conv_Entero@numero:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0xE
  1051  00000F                     	ds	1
  1052  000010                     PWM_generar@fpwm:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0xF
  1056  000010                     	ds	1
  1057  000011                     ??_SENO_GENERAR_1:
  1058  000011                     ??_SENO_GENERAR_2:
  1059  000011                     ??_SENO_GENERAR_3:
  1060  000011                     ??_TRIAN_GENERAR_1:
  1061  000011                     ??_TRIAN_GENERAR_2:
  1062                           
  1063                           ; 0 bytes @ 0x10
  1064  000011                     	ds	1
  1065  000012                     ??_PWM_generar:
  1066                           
  1067                           ; 0 bytes @ 0x11
  1068  000012                     	ds	1
  1069  000013                     Conv_Entero@conv:
  1070                           	opt stack 0
  1071  000013                     SENO_GENERAR_3@seno:
  1072                           	opt stack 0
  1073  000013                     SENO_GENERAR_2@seno:
  1074                           	opt stack 0
  1075  000013                     TRIAN_GENERAR_2@seno:
  1076                           	opt stack 0
  1077  000013                     SENO_GENERAR_1@seno:
  1078                           	opt stack 0
  1079  000013                     TRIAN_GENERAR_1@seno:
  1080                           	opt stack 0
  1081                           
  1082                           ; 40 bytes @ 0x12
  1083  000013                     	ds	2
  1084  000015                     ??_Conv_Entero:
  1085                           
  1086                           ; 0 bytes @ 0x14
  1087  000015                     	ds	1
  1088  000016                     PWM_generar@prescalador:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x15
  1092  000016                     	ds	2
  1093  000018                     PWM_generar@AuxCCP2CON:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x17
  1097  000018                     	ds	2
  1098  00001A                     PWM_generar@PR2cal:
  1099                           	opt stack 0
  1100  00001A                     Conv_Entero@convTemp:
  1101                           	opt stack 0
  1102                           
  1103                           ; 21 bytes @ 0x19
  1104  00001A                     	ds	4
  1105  00001E                     PWM_generar@AuxCCPR2L:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x1D
  1109  00001E                     	ds	17
  1110  00002F                     Conv_Entero@num:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x2E
  1114  00002F                     	ds	2
  1115  000031                     Conv_Entero@i:
  1116                           	opt stack 0
  1117  000031                     SENO_GENERAR_3@i:
  1118                           	opt stack 0
  1119                           
  1120                           ; 2 bytes @ 0x30
  1121  000031                     	ds	1
  1122  000032                     Conv_Entero@punteroActual:
  1123                           	opt stack 0
  1124                           
  1125                           ; 2 bytes @ 0x31
  1126  000032                     	ds	2
  1127  000034                     Conv_Entero@numeroReg:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x33
  1131  000034                     	ds	3
  1132  000037                     SENO_GENERAR_2@i:
  1133                           	opt stack 0
  1134  000037                     TRIAN_GENERAR_2@i:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x36
  1138  000037                     	ds	4
  1139  00003B                     SENO_GENERAR_1@i:
  1140                           	opt stack 0
  1141  00003B                     TRIAN_GENERAR_1@i:
  1142                           	opt stack 0
  1143                           
  1144                           ; 2 bytes @ 0x3A
  1145  00003B                     	ds	2
  1146  00003D                     ??_main:
  1147                           
  1148                           ; 0 bytes @ 0x3C
  1149  00003D                     	ds	1
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1l	equ	0xFE1
  1158                           
  1159 ;;
  1160 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1161 ;;
  1162 ;; *************** function _main *****************
  1163 ;; Defined at:
  1164 ;;		line 27 in file "MAIN.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  fre             1   42[BANK0 ] unsigned char 
  1169 ;;  cadena         20   20[BANK0 ] unsigned char [20]
  1170 ;;  cad            20    0[BANK0 ] unsigned char [20]
  1171 ;;  Z               2   47[BANK0 ] unsigned int 
  1172 ;;  X               2   45[BANK0 ] unsigned int 
  1173 ;;  V               2   40[BANK0 ] unsigned int 
  1174 ;;  A               1   49[BANK0 ] unsigned char 
  1175 ;;  cant            1   44[BANK0 ] unsigned char 
  1176 ;;  cantidad        1   43[BANK0 ] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;		None               void
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1188 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         1      50       0       0       0       0       0       0       0
  1190 ;;Total ram usage:       51 bytes
  1191 ;; Hardware stack levels required when called:    3
  1192 ;; This function calls:
  1193 ;;		_Conv_Entero
  1194 ;;		_Lcd_Chr_CP
  1195 ;;		_Lcd_Cmd
  1196 ;;		_Lcd_Init
  1197 ;;		_Lcd_Out
  1198 ;;		_Lcd_Out2
  1199 ;;		_PWM_generar
  1200 ;;		_SENO_GENERAR_1
  1201 ;;		_SENO_GENERAR_2
  1202 ;;		_SENO_GENERAR_3
  1203 ;;		_TRIAN_GENERAR_1
  1204 ;;		_TRIAN_GENERAR_2
  1205 ;;		___wmul
  1206 ;;		_lcd_goto
  1207 ;;		_tm_1s
  1208 ;; This function is called by:
  1209 ;;		Startup code after reset
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text0
  1214  006DC4                     __ptext0:
  1215                           	opt stack 0
  1216  006DC4                     _main:
  1217                           	opt stack 28
  1218                           
  1219                           ;MAIN.c: 29: unsigned char A=47,cantidad=0,cant=0;
  1220                           
  1221                           ;incstack = 0
  1222  006DC4  0E2F               	movlw	47
  1223  006DC6  0100               	movlb	0	; () banked
  1224  006DC8  6FCD               	movwf	main@A& (0+255),b
  1225  006DCA  0E00               	movlw	0
  1226  006DCC  0100               	movlb	0	; () banked
  1227  006DCE  6FC7               	movwf	main@cantidad& (0+255),b
  1228  006DD0  0E00               	movlw	0
  1229  006DD2  0100               	movlb	0	; () banked
  1230  006DD4  6FC8               	movwf	main@cant& (0+255),b
  1231                           
  1232                           ;MAIN.c: 30: char cadena[20],cad[20];
  1233                           ;MAIN.c: 31: unsigned int Z=0,X=0,V=0;
  1234  006DD6  0E00               	movlw	0
  1235  006DD8  0100               	movlb	0	; () banked
  1236  006DDA  6FCC               	movwf	(main@Z+1)& (0+255),b
  1237  006DDC  0E00               	movlw	0
  1238  006DDE  0100               	movlb	0	; () banked
  1239  006DE0  6FCB               	movwf	main@Z& (0+255),b
  1240  006DE2  0E00               	movlw	0
  1241  006DE4  0100               	movlb	0	; () banked
  1242  006DE6  6FCA               	movwf	(main@X+1)& (0+255),b
  1243  006DE8  0E00               	movlw	0
  1244  006DEA  0100               	movlb	0	; () banked
  1245  006DEC  6FC9               	movwf	main@X& (0+255),b
  1246  006DEE  0E00               	movlw	0
  1247  006DF0  0100               	movlb	0	; () banked
  1248  006DF2  6FC5               	movwf	(main@V+1)& (0+255),b
  1249  006DF4  0E00               	movlw	0
  1250  006DF6  0100               	movlb	0	; () banked
  1251  006DF8  6FC4               	movwf	main@V& (0+255),b
  1252                           
  1253                           ;MAIN.c: 32: PORTA=0;
  1254  006DFA  0E00               	movlw	0
  1255  006DFC  6E80               	movwf	3968,c	;volatile
  1256                           
  1257                           ;MAIN.c: 33: OSCCON=0b01010111;
  1258  006DFE  0E57               	movlw	87
  1259  006E00  6ED3               	movwf	4051,c	;volatile
  1260                           
  1261                           ;MAIN.c: 34: ANSELD=0;
  1262  006E02  0E00               	movlw	0
  1263  006E04  010F               	movlb	15	; () banked
  1264  006E06  6F5E               	movwf	94,b	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;MAIN.c: 35: Lcd_Init();
  1268  006E08  EC22  F033         	call	_Lcd_Init	;wreg free
  1269                           
  1270                           ;MAIN.c: 37: TRISA=0;
  1271  006E0C  0E00               	movlw	0
  1272  006E0E  6E92               	movwf	3986,c	;volatile
  1273                           
  1274                           ;MAIN.c: 38: ANSELA=0;
  1275  006E10  0E00               	movlw	0
  1276  006E12  010F               	movlb	15	; () banked
  1277  006E14  6F5B               	movwf	91,b	;volatile
  1278  006E16                     l2810:
  1279                           
  1280                           ;MAIN.c: 41: if(PORTAbits.RA0==1)
  1281  006E16  A080               	btfss	3968,0,c	;volatile
  1282  006E18  D00B               	goto	l2816
  1283                           
  1284                           ;MAIN.c: 42: {
  1285                           ;MAIN.c: 43: B++;
  1286  006E1A  0100               	movlb	0	; () banked
  1287  006E1C  4BCE               	infsnz	_B& (0+255),f,b
  1288  006E1E  2BCF               	incf	(_B+1)& (0+255),f,b
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;MAIN.c: 44: _delay((unsigned long)((10)*(8000000/4000.0)));
  1292  006E20  0E1A               	movlw	26
  1293  006E22  6E3D               	movwf	??_main& (0+255),c
  1294  006E24  0EF8               	movlw	248
  1295  006E26                     u3317:
  1296  006E26  2EE8               	decfsz	wreg,f,c
  1297  006E28  D7FE               	goto	u3317
  1298  006E2A  2E3D               	decfsz	??_main& (0+255),f,c
  1299  006E2C  D7FC               	goto	u3317
  1300  006E2E  D000               	nop2	
  1301  006E30                     l2816:
  1302                           
  1303                           ;MAIN.c: 45: }
  1304                           ;MAIN.c: 47: if(PORTAbits.RA1==1)
  1305  006E30  A280               	btfss	3968,1,c	;volatile
  1306  006E32  D00C               	goto	l115
  1307                           
  1308                           ;MAIN.c: 48: {
  1309                           ;MAIN.c: 49: B--;
  1310  006E34  0100               	movlb	0	; () banked
  1311  006E36  07CE               	decf	_B& (0+255),f,b
  1312  006E38  A0D8               	btfss	status,0,c
  1313  006E3A  07CF               	decf	(_B+1)& (0+255),f,b
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;MAIN.c: 50: _delay((unsigned long)((10)*(8000000/4000.0)));
  1317  006E3C  0E1A               	movlw	26
  1318  006E3E  6E3D               	movwf	??_main& (0+255),c
  1319  006E40  0EF8               	movlw	248
  1320  006E42                     u3327:
  1321  006E42  2EE8               	decfsz	wreg,f,c
  1322  006E44  D7FE               	goto	u3327
  1323  006E46  2E3D               	decfsz	??_main& (0+255),f,c
  1324  006E48  D7FC               	goto	u3327
  1325  006E4A  D000               	nop2	
  1326  006E4C                     l115:
  1327                           
  1328                           ;MAIN.c: 51: }
  1329                           ;MAIN.c: 53: if(B==0){
  1330  006E4C  0100               	movlb	0	; () banked
  1331  006E4E  51CF               	movf	(_B+1)& (0+255),w,b
  1332  006E50  11CE               	iorwf	_B& (0+255),w,b
  1333  006E52  A4D8               	btfss	status,2,c
  1334  006E54  D01C               	goto	l2828
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;MAIN.c: 54: Lcd_Init();
  1338  006E56  EC22  F033         	call	_Lcd_Init	;wreg free
  1339                           
  1340                           ;MAIN.c: 55: Lcd_Cmd(1);
  1341  006E5A  0E01               	movlw	1
  1342  006E5C  ECB0  F033         	call	_Lcd_Cmd
  1343                           
  1344                           ;MAIN.c: 56: Lcd_Cmd(12);
  1345  006E60  0E0C               	movlw	12
  1346  006E62  ECB0  F033         	call	_Lcd_Cmd
  1347                           
  1348                           ;MAIN.c: 57: Lcd_Out2(1,1,"     DICIS");
  1349  006E66  0E01               	movlw	1
  1350  006E68  6E04               	movwf	Lcd_Out2@x,c
  1351  006E6A  0E7E               	movlw	high STR_1
  1352  006E6C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1353  006E6E  0EF5               	movlw	low STR_1
  1354  006E70  6E05               	movwf	Lcd_Out2@buffer,c
  1355  006E72  0E01               	movlw	1
  1356  006E74  EC88  F02F         	call	_Lcd_Out2
  1357                           
  1358                           ;MAIN.c: 58: Lcd_Out2(2,1,"Proyecto Final ");
  1359  006E78  0E01               	movlw	1
  1360  006E7A  6E04               	movwf	Lcd_Out2@x,c
  1361  006E7C  0E7E               	movlw	high STR_2
  1362  006E7E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1363  006E80  0E73               	movlw	low STR_2
  1364  006E82  6E05               	movwf	Lcd_Out2@buffer,c
  1365  006E84  0E02               	movlw	2
  1366  006E86  EC88  F02F         	call	_Lcd_Out2
  1367                           
  1368                           ;MAIN.c: 59: tm_1s();
  1369  006E8A  EC9F  F02E         	call	_tm_1s	;wreg free
  1370  006E8E                     l2828:
  1371                           
  1372                           ;MAIN.c: 62: }
  1373                           ;MAIN.c: 64: if(B==1){
  1374  006E8E  0100               	movlb	0	; () banked
  1375  006E90  05CE               	decf	_B& (0+255),w,b
  1376  006E92  11CF               	iorwf	(_B+1)& (0+255),w,b
  1377  006E94  A4D8               	btfss	status,2,c
  1378  006E96  EFC3  F03C         	goto	l3220
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;MAIN.c: 65: Lcd_Init();
  1382  006E9A  EC22  F033         	call	_Lcd_Init	;wreg free
  1383                           
  1384                           ;MAIN.c: 66: Lcd_Cmd(1);
  1385  006E9E  0E01               	movlw	1
  1386  006EA0  ECB0  F033         	call	_Lcd_Cmd
  1387                           
  1388                           ;MAIN.c: 67: Lcd_Cmd(12);
  1389  006EA4  0E0C               	movlw	12
  1390  006EA6  ECB0  F033         	call	_Lcd_Cmd
  1391                           
  1392                           ;MAIN.c: 68: Lcd_Out2(1,1,"=> PWM");
  1393  006EAA  0E01               	movlw	1
  1394  006EAC  6E04               	movwf	Lcd_Out2@x,c
  1395  006EAE  0E7F               	movlw	high STR_3
  1396  006EB0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1397  006EB2  0E8C               	movlw	low STR_3
  1398  006EB4  6E05               	movwf	Lcd_Out2@buffer,c
  1399  006EB6  0E01               	movlw	1
  1400  006EB8  EC88  F02F         	call	_Lcd_Out2
  1401                           
  1402                           ;MAIN.c: 69: Lcd_Out2(2,1,"   Senoidal");
  1403  006EBC  0E01               	movlw	1
  1404  006EBE  6E04               	movwf	Lcd_Out2@x,c
  1405  006EC0  0E7E               	movlw	high STR_4
  1406  006EC2  6E06               	movwf	Lcd_Out2@buffer+1,c
  1407  006EC4  0EAD               	movlw	low STR_4
  1408  006EC6  6E05               	movwf	Lcd_Out2@buffer,c
  1409  006EC8  0E02               	movlw	2
  1410  006ECA  EC88  F02F         	call	_Lcd_Out2
  1411                           
  1412                           ;MAIN.c: 70: tm_1s();
  1413  006ECE  EC9F  F02E         	call	_tm_1s	;wreg free
  1414                           
  1415                           ;MAIN.c: 73: if(PORTAbits.RA2==1){
  1416  006ED2  A480               	btfss	3968,2,c	;volatile
  1417  006ED4  EFC3  F03C         	goto	l3220
  1418  006ED8                     l2838:
  1419                           
  1420                           ;MAIN.c: 75: w=0;
  1421  006ED8  0E00               	movlw	0
  1422  006EDA  0100               	movlb	0	; () banked
  1423  006EDC  6FDD               	movwf	(_w+1)& (0+255),b
  1424  006EDE  0E00               	movlw	0
  1425  006EE0  0100               	movlb	0	; () banked
  1426  006EE2  6FDC               	movwf	_w& (0+255),b
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;MAIN.c: 76: if(B==0){
  1430  006EE4  0100               	movlb	0	; () banked
  1431  006EE6  51CF               	movf	(_B+1)& (0+255),w,b
  1432  006EE8  11CE               	iorwf	_B& (0+255),w,b
  1433  006EEA  A4D8               	btfss	status,2,c
  1434  006EEC  D01C               	goto	l2848
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;MAIN.c: 77: Lcd_Init();
  1438  006EEE  EC22  F033         	call	_Lcd_Init	;wreg free
  1439                           
  1440                           ;MAIN.c: 78: Lcd_Cmd(1);
  1441  006EF2  0E01               	movlw	1
  1442  006EF4  ECB0  F033         	call	_Lcd_Cmd
  1443                           
  1444                           ;MAIN.c: 79: Lcd_Cmd(12);
  1445  006EF8  0E0C               	movlw	12
  1446  006EFA  ECB0  F033         	call	_Lcd_Cmd
  1447                           
  1448                           ;MAIN.c: 80: Lcd_Out2(1,1,"   Ingresar");
  1449  006EFE  0E01               	movlw	1
  1450  006F00  6E04               	movwf	Lcd_Out2@x,c
  1451  006F02  0E7E               	movlw	high STR_5
  1452  006F04  6E06               	movwf	Lcd_Out2@buffer+1,c
  1453  006F06  0EC5               	movlw	low STR_5
  1454  006F08  6E05               	movwf	Lcd_Out2@buffer,c
  1455  006F0A  0E01               	movlw	1
  1456  006F0C  EC88  F02F         	call	_Lcd_Out2
  1457                           
  1458                           ;MAIN.c: 81: Lcd_Out2(2,1,"   Comenzar");
  1459  006F10  0E01               	movlw	1
  1460  006F12  6E04               	movwf	Lcd_Out2@x,c
  1461  006F14  0E7E               	movlw	high STR_6
  1462  006F16  6E06               	movwf	Lcd_Out2@buffer+1,c
  1463  006F18  0EDD               	movlw	low STR_6
  1464  006F1A  6E05               	movwf	Lcd_Out2@buffer,c
  1465  006F1C  0E02               	movlw	2
  1466  006F1E  EC88  F02F         	call	_Lcd_Out2
  1467                           
  1468                           ;MAIN.c: 82: tm_1s();
  1469  006F22  EC9F  F02E         	call	_tm_1s	;wreg free
  1470  006F26                     l2848:
  1471                           
  1472                           ;MAIN.c: 83: }
  1473                           ;MAIN.c: 84: if(B==1){
  1474  006F26  0100               	movlb	0	; () banked
  1475  006F28  05CE               	decf	_B& (0+255),w,b
  1476  006F2A  11CF               	iorwf	(_B+1)& (0+255),w,b
  1477  006F2C  A4D8               	btfss	status,2,c
  1478  006F2E  EFD7  F03B         	goto	l3152
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;MAIN.c: 85: Lcd_Init();
  1482  006F32  EC22  F033         	call	_Lcd_Init	;wreg free
  1483                           
  1484                           ;MAIN.c: 86: Lcd_Cmd(1);
  1485  006F36  0E01               	movlw	1
  1486  006F38  ECB0  F033         	call	_Lcd_Cmd
  1487                           
  1488                           ;MAIN.c: 87: Lcd_Cmd(12);
  1489  006F3C  0E0C               	movlw	12
  1490  006F3E  ECB0  F033         	call	_Lcd_Cmd
  1491                           
  1492                           ;MAIN.c: 88: Lcd_Out2(1,1,"=> Ingresar");
  1493  006F42  0E01               	movlw	1
  1494  006F44  6E04               	movwf	Lcd_Out2@x,c
  1495  006F46  0E7E               	movlw	high STR_7
  1496  006F48  6E06               	movwf	Lcd_Out2@buffer+1,c
  1497  006F4A  0ED1               	movlw	low STR_7
  1498  006F4C  6E05               	movwf	Lcd_Out2@buffer,c
  1499  006F4E  0E01               	movlw	1
  1500  006F50  EC88  F02F         	call	_Lcd_Out2
  1501                           
  1502                           ;MAIN.c: 89: Lcd_Out2(2,1,"   Comenzar");
  1503  006F54  0E01               	movlw	1
  1504  006F56  6E04               	movwf	Lcd_Out2@x,c
  1505  006F58  0E7E               	movlw	high STR_6
  1506  006F5A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1507  006F5C  0EDD               	movlw	low STR_6
  1508  006F5E  6E05               	movwf	Lcd_Out2@buffer,c
  1509  006F60  0E02               	movlw	2
  1510  006F62  EC88  F02F         	call	_Lcd_Out2
  1511                           
  1512                           ;MAIN.c: 90: tm_1s();
  1513  006F66  EC9F  F02E         	call	_tm_1s	;wreg free
  1514                           
  1515                           ;MAIN.c: 93: if(PORTAbits.RA2==1){
  1516  006F6A  A480               	btfss	3968,2,c	;volatile
  1517  006F6C  EFD7  F03B         	goto	l3152
  1518  006F70                     l2858:
  1519                           
  1520                           ;MAIN.c: 95: e=0;
  1521  006F70  0E00               	movlw	0
  1522  006F72  0100               	movlb	0	; () banked
  1523  006F74  6FD3               	movwf	(_e+1)& (0+255),b
  1524  006F76  0E00               	movlw	0
  1525  006F78  0100               	movlb	0	; () banked
  1526  006F7A  6FD2               	movwf	_e& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;MAIN.c: 96: if(B==0){
  1530  006F7C  0100               	movlb	0	; () banked
  1531  006F7E  51CF               	movf	(_B+1)& (0+255),w,b
  1532  006F80  11CE               	iorwf	_B& (0+255),w,b
  1533  006F82  A4D8               	btfss	status,2,c
  1534  006F84  D01C               	goto	l2868
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;MAIN.c: 97: Lcd_Init();
  1538  006F86  EC22  F033         	call	_Lcd_Init	;wreg free
  1539                           
  1540                           ;MAIN.c: 98: Lcd_Cmd(1);
  1541  006F8A  0E01               	movlw	1
  1542  006F8C  ECB0  F033         	call	_Lcd_Cmd
  1543                           
  1544                           ;MAIN.c: 99: Lcd_Cmd(12);
  1545  006F90  0E0C               	movlw	12
  1546  006F92  ECB0  F033         	call	_Lcd_Cmd
  1547                           
  1548                           ;MAIN.c: 100: Lcd_Out2(1,1,"   Frecuencia");
  1549  006F96  0E01               	movlw	1
  1550  006F98  6E04               	movwf	Lcd_Out2@x,c
  1551  006F9A  0E7E               	movlw	high STR_9
  1552  006F9C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1553  006F9E  0E83               	movlw	low STR_9
  1554  006FA0  6E05               	movwf	Lcd_Out2@buffer,c
  1555  006FA2  0E01               	movlw	1
  1556  006FA4  EC88  F02F         	call	_Lcd_Out2
  1557                           
  1558                           ;MAIN.c: 101: Lcd_Out2(2,1,"   Ciclo");
  1559  006FA8  0E01               	movlw	1
  1560  006FAA  6E04               	movwf	Lcd_Out2@x,c
  1561  006FAC  0E7F               	movlw	high STR_10
  1562  006FAE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1563  006FB0  0E6A               	movlw	low STR_10
  1564  006FB2  6E05               	movwf	Lcd_Out2@buffer,c
  1565  006FB4  0E02               	movlw	2
  1566  006FB6  EC88  F02F         	call	_Lcd_Out2
  1567                           
  1568                           ;MAIN.c: 102: tm_1s();
  1569  006FBA  EC9F  F02E         	call	_tm_1s	;wreg free
  1570  006FBE                     l2868:
  1571                           
  1572                           ;MAIN.c: 104: }
  1573                           ;MAIN.c: 105: if(B==1){
  1574  006FBE  0100               	movlb	0	; () banked
  1575  006FC0  05CE               	decf	_B& (0+255),w,b
  1576  006FC2  11CF               	iorwf	(_B+1)& (0+255),w,b
  1577  006FC4  A4D8               	btfss	status,2,c
  1578  006FC6  D0AC               	goto	l2932
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;MAIN.c: 107: Lcd_Init();
  1582  006FC8  EC22  F033         	call	_Lcd_Init	;wreg free
  1583                           
  1584                           ;MAIN.c: 108: Lcd_Cmd(1);
  1585  006FCC  0E01               	movlw	1
  1586  006FCE  ECB0  F033         	call	_Lcd_Cmd
  1587                           
  1588                           ;MAIN.c: 109: Lcd_Cmd(12);
  1589  006FD2  0E0C               	movlw	12
  1590  006FD4  ECB0  F033         	call	_Lcd_Cmd
  1591                           
  1592                           ;MAIN.c: 110: Lcd_Out2(1,1,"=> Frecuencia");
  1593  006FD8  0E01               	movlw	1
  1594  006FDA  6E04               	movwf	Lcd_Out2@x,c
  1595  006FDC  0E7E               	movlw	high STR_11
  1596  006FDE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1597  006FE0  0E91               	movlw	low STR_11
  1598  006FE2  6E05               	movwf	Lcd_Out2@buffer,c
  1599  006FE4  0E01               	movlw	1
  1600  006FE6  EC88  F02F         	call	_Lcd_Out2
  1601                           
  1602                           ;MAIN.c: 111: Lcd_Out2(2,1,"   Ciclo");
  1603  006FEA  0E01               	movlw	1
  1604  006FEC  6E04               	movwf	Lcd_Out2@x,c
  1605  006FEE  0E7F               	movlw	high STR_10
  1606  006FF0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1607  006FF2  0E6A               	movlw	low STR_10
  1608  006FF4  6E05               	movwf	Lcd_Out2@buffer,c
  1609  006FF6  0E02               	movlw	2
  1610  006FF8  EC88  F02F         	call	_Lcd_Out2
  1611                           
  1612                           ;MAIN.c: 112: tm_1s();
  1613  006FFC  EC9F  F02E         	call	_tm_1s	;wreg free
  1614                           
  1615                           ;MAIN.c: 115: if(PORTAbits.RA2==1){
  1616  007000  A480               	btfss	3968,2,c	;volatile
  1617  007002  D08E               	goto	l2932
  1618                           
  1619                           ;MAIN.c: 116: r=0;
  1620  007004  0E00               	movlw	0
  1621  007006  0100               	movlb	0	; () banked
  1622  007008  6FD9               	movwf	(_r+1)& (0+255),b
  1623  00700A  0E00               	movlw	0
  1624  00700C  0100               	movlb	0	; () banked
  1625  00700E  6FD8               	movwf	_r& (0+255),b
  1626  007010                     l2880:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;MAIN.c: 118: Lcd_Init();
  1630  007010  EC22  F033         	call	_Lcd_Init	;wreg free
  1631                           
  1632                           ;MAIN.c: 119: Lcd_Cmd(1);
  1633  007014  0E01               	movlw	1
  1634  007016  ECB0  F033         	call	_Lcd_Cmd
  1635                           
  1636                           ;MAIN.c: 120: Lcd_Cmd(12);
  1637  00701A  0E0C               	movlw	12
  1638  00701C  ECB0  F033         	call	_Lcd_Cmd
  1639                           
  1640                           ;MAIN.c: 121: Lcd_Out2(1,1,"  000 Hz");
  1641  007020  0E01               	movlw	1
  1642  007022  6E04               	movwf	Lcd_Out2@x,c
  1643  007024  0E7F               	movlw	high STR_13
  1644  007026  6E06               	movwf	Lcd_Out2@buffer+1,c
  1645  007028  0E7C               	movlw	low STR_13
  1646  00702A  6E05               	movwf	Lcd_Out2@buffer,c
  1647  00702C  0E01               	movlw	1
  1648  00702E  EC88  F02F         	call	_Lcd_Out2
  1649                           
  1650                           ;MAIN.c: 122: tm_1s();
  1651  007032  EC9F  F02E         	call	_tm_1s	;wreg free
  1652                           
  1653                           ;MAIN.c: 124: if(PORTAbits.RA0==1){
  1654  007036  A080               	btfss	3968,0,c	;volatile
  1655  007038  D05F               	goto	l2922
  1656                           
  1657                           ;MAIN.c: 125: A++;
  1658  00703A  0100               	movlb	0	; () banked
  1659  00703C  2BCD               	incf	main@A& (0+255),f,b
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;MAIN.c: 126: lcd_goto(2,1);
  1663  00703E  0E00               	movlw	0
  1664  007040  6E05               	movwf	lcd_goto@x+1,c
  1665  007042  0E02               	movlw	2
  1666  007044  6E04               	movwf	lcd_goto@x,c
  1667  007046  0E00               	movlw	0
  1668  007048  6E07               	movwf	lcd_goto@y+1,c
  1669  00704A  0E01               	movlw	1
  1670  00704C  6E06               	movwf	lcd_goto@y,c
  1671  00704E  ECD3  F02E         	call	_lcd_goto	;wreg free
  1672                           
  1673                           ;MAIN.c: 127: Lcd_Chr_CP(A);
  1674  007052  0100               	movlb	0	; () banked
  1675  007054  51CD               	movf	main@A& (0+255),w,b
  1676  007056  EC44  F034         	call	_Lcd_Chr_CP
  1677                           
  1678                           ;MAIN.c: 128: tm_1s();
  1679  00705A  EC9F  F02E         	call	_tm_1s	;wreg free
  1680                           
  1681                           ;MAIN.c: 129: switch(A){
  1682  00705E  D02F               	goto	l2920
  1683  007060                     l2900:
  1684  007060  0E03               	movlw	3
  1685  007062  0100               	movlb	0	; () banked
  1686  007064  6FD1               	movwf	(_M+1)& (0+255),b
  1687  007066  0EE8               	movlw	232
  1688  007068  D027               	goto	L8
  1689  00706A                     l2902:
  1690                           
  1691                           ; BSR set to: 0
  1692  00706A  0E07               	movlw	7
  1693  00706C  0100               	movlb	0	; () banked
  1694  00706E  6FD1               	movwf	(_M+1)& (0+255),b
  1695  007070  0ED0               	movlw	208
  1696  007072  D022               	goto	L8
  1697  007074                     l2904:
  1698                           
  1699                           ; BSR set to: 0
  1700  007074  0E0B               	movlw	11
  1701  007076  0100               	movlb	0	; () banked
  1702  007078  6FD1               	movwf	(_M+1)& (0+255),b
  1703  00707A  0EB8               	movlw	184
  1704  00707C  D01D               	goto	L8
  1705  00707E                     l2906:
  1706                           
  1707                           ; BSR set to: 0
  1708  00707E  0E0F               	movlw	15
  1709  007080  0100               	movlb	0	; () banked
  1710  007082  6FD1               	movwf	(_M+1)& (0+255),b
  1711  007084  0EA0               	movlw	160
  1712  007086  D018               	goto	L8
  1713  007088                     l2908:
  1714                           
  1715                           ; BSR set to: 0
  1716  007088  0E13               	movlw	19
  1717  00708A  0100               	movlb	0	; () banked
  1718  00708C  6FD1               	movwf	(_M+1)& (0+255),b
  1719  00708E  0E88               	movlw	136
  1720  007090  D013               	goto	L8
  1721  007092                     l2910:
  1722                           
  1723                           ; BSR set to: 0
  1724  007092  0E17               	movlw	23
  1725  007094  0100               	movlb	0	; () banked
  1726  007096  6FD1               	movwf	(_M+1)& (0+255),b
  1727  007098  0E70               	movlw	112
  1728  00709A  D00E               	goto	L8
  1729  00709C                     l2912:
  1730                           
  1731                           ; BSR set to: 0
  1732  00709C  0E1B               	movlw	27
  1733  00709E  0100               	movlb	0	; () banked
  1734  0070A0  6FD1               	movwf	(_M+1)& (0+255),b
  1735  0070A2  0E58               	movlw	88
  1736  0070A4  D009               	goto	L8
  1737  0070A6                     l2914:
  1738                           
  1739                           ; BSR set to: 0
  1740  0070A6  0E1F               	movlw	31
  1741  0070A8  0100               	movlb	0	; () banked
  1742  0070AA  6FD1               	movwf	(_M+1)& (0+255),b
  1743  0070AC  0E40               	movlw	64
  1744  0070AE  D004               	goto	L8
  1745  0070B0                     l2916:
  1746                           
  1747                           ; BSR set to: 0
  1748  0070B0  0E23               	movlw	35
  1749  0070B2  0100               	movlb	0	; () banked
  1750  0070B4  6FD1               	movwf	(_M+1)& (0+255),b
  1751  0070B6  0E28               	movlw	40
  1752  0070B8                     L8:
  1753  0070B8  0100               	movlb	0	; () banked
  1754  0070BA  6FD0               	movwf	_M& (0+255),b
  1755                           
  1756                           ;MAIN.c: 147: break;
  1757  0070BC  D01D               	goto	l2922
  1758  0070BE                     l2920:
  1759  0070BE  0100               	movlb	0	; () banked
  1760  0070C0  51CD               	movf	main@A& (0+255),w,b
  1761                           
  1762                           ; Switch size 1, requested type "space"
  1763                           ; Number of cases is 9, Range of values is 49 to 57
  1764                           ; switch strategies available:
  1765                           ; Name         Instructions Cycles
  1766                           ; simple_byte           28    15 (average)
  1767                           ;	Chosen strategy is simple_byte
  1768  0070C2  0A31               	xorlw	49	; case 49
  1769  0070C4  B4D8               	btfsc	status,2,c
  1770  0070C6  D7CC               	goto	l2900
  1771  0070C8  0A03               	xorlw	3	; case 50
  1772  0070CA  B4D8               	btfsc	status,2,c
  1773  0070CC  D7CE               	goto	l2902
  1774  0070CE  0A01               	xorlw	1	; case 51
  1775  0070D0  B4D8               	btfsc	status,2,c
  1776  0070D2  D7D0               	goto	l2904
  1777  0070D4  0A07               	xorlw	7	; case 52
  1778  0070D6  B4D8               	btfsc	status,2,c
  1779  0070D8  D7D2               	goto	l2906
  1780  0070DA  0A01               	xorlw	1	; case 53
  1781  0070DC  B4D8               	btfsc	status,2,c
  1782  0070DE  D7D4               	goto	l2908
  1783  0070E0  0A03               	xorlw	3	; case 54
  1784  0070E2  B4D8               	btfsc	status,2,c
  1785  0070E4  D7D6               	goto	l2910
  1786  0070E6  0A01               	xorlw	1	; case 55
  1787  0070E8  B4D8               	btfsc	status,2,c
  1788  0070EA  D7D8               	goto	l2912
  1789  0070EC  0A0F               	xorlw	15	; case 56
  1790  0070EE  B4D8               	btfsc	status,2,c
  1791  0070F0  D7DA               	goto	l2914
  1792  0070F2  0A01               	xorlw	1	; case 57
  1793  0070F4  B4D8               	btfsc	status,2,c
  1794  0070F6  D7DC               	goto	l2916
  1795  0070F8                     l2922:
  1796                           
  1797                           ;MAIN.c: 149: }
  1798                           ;MAIN.c: 150: if(A>57){
  1799  0070F8  0E39               	movlw	57
  1800  0070FA  0100               	movlb	0	; () banked
  1801  0070FC  65CD               	cpfsgt	main@A& (0+255),b
  1802  0070FE  D003               	goto	l2926
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;MAIN.c: 151: A=47;
  1806  007100  0E2F               	movlw	47
  1807  007102  0100               	movlb	0	; () banked
  1808  007104  6FCD               	movwf	main@A& (0+255),b
  1809  007106                     l2926:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;MAIN.c: 152: }
  1813                           ;MAIN.c: 153: if(PORTAbits.RA1==1){
  1814  007106  A280               	btfss	3968,1,c	;volatile
  1815  007108  D006               	goto	l2930
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;MAIN.c: 154: r=1;
  1819  00710A  0E00               	movlw	0
  1820  00710C  0100               	movlb	0	; () banked
  1821  00710E  6FD9               	movwf	(_r+1)& (0+255),b
  1822  007110  0E01               	movlw	1
  1823  007112  0100               	movlb	0	; () banked
  1824  007114  6FD8               	movwf	_r& (0+255),b
  1825  007116                     l2930:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;MAIN.c: 155: }
  1829                           ;MAIN.c: 157: }while(r==0);
  1830  007116  0100               	movlb	0	; () banked
  1831  007118  51D9               	movf	(_r+1)& (0+255),w,b
  1832  00711A  11D8               	iorwf	_r& (0+255),w,b
  1833  00711C  B4D8               	btfsc	status,2,c
  1834  00711E  D778               	goto	l2880
  1835  007120                     l2932:
  1836                           
  1837                           ;MAIN.c: 159: }
  1838                           ;MAIN.c: 160: }
  1839                           ;MAIN.c: 162: if(B==2){
  1840  007120  0100               	movlb	0	; () banked
  1841  007122  51CE               	movf	_B& (0+255),w,b
  1842  007124  0A02               	xorlw	2
  1843  007126  11CF               	iorwf	(_B+1)& (0+255),w,b
  1844  007128  A4D8               	btfss	status,2,c
  1845  00712A  D309               	goto	l143
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;MAIN.c: 163: Lcd_Init();
  1849  00712C  EC22  F033         	call	_Lcd_Init	;wreg free
  1850                           
  1851                           ;MAIN.c: 164: Lcd_Cmd(1);
  1852  007130  0E01               	movlw	1
  1853  007132  ECB0  F033         	call	_Lcd_Cmd
  1854                           
  1855                           ;MAIN.c: 165: Lcd_Cmd(12);
  1856  007136  0E0C               	movlw	12
  1857  007138  ECB0  F033         	call	_Lcd_Cmd
  1858                           
  1859                           ;MAIN.c: 166: Lcd_Out2(1,1,"   Frecuencia");
  1860  00713C  0E01               	movlw	1
  1861  00713E  6E04               	movwf	Lcd_Out2@x,c
  1862  007140  0E7E               	movlw	high STR_9
  1863  007142  6E06               	movwf	Lcd_Out2@buffer+1,c
  1864  007144  0E83               	movlw	low STR_9
  1865  007146  6E05               	movwf	Lcd_Out2@buffer,c
  1866  007148  0E01               	movlw	1
  1867  00714A  EC88  F02F         	call	_Lcd_Out2
  1868                           
  1869                           ;MAIN.c: 167: Lcd_Out2(2,1,"=> Ciclo");
  1870  00714E  0E01               	movlw	1
  1871  007150  6E04               	movwf	Lcd_Out2@x,c
  1872  007152  0E7F               	movlw	high STR_15
  1873  007154  6E06               	movwf	Lcd_Out2@buffer+1,c
  1874  007156  0E73               	movlw	low STR_15
  1875  007158  6E05               	movwf	Lcd_Out2@buffer,c
  1876  00715A  0E02               	movlw	2
  1877  00715C  EC88  F02F         	call	_Lcd_Out2
  1878                           
  1879                           ;MAIN.c: 168: tm_1s();
  1880  007160  EC9F  F02E         	call	_tm_1s	;wreg free
  1881                           
  1882                           ;MAIN.c: 170: if(PORTAbits.RA2==1){
  1883  007164  A480               	btfss	3968,2,c	;volatile
  1884  007166  D2EB               	goto	l143
  1885  007168                     l2942:
  1886                           
  1887                           ;MAIN.c: 173: t=0;
  1888  007168  0E00               	movlw	0
  1889  00716A  0100               	movlb	0	; () banked
  1890  00716C  6FDB               	movwf	(_t+1)& (0+255),b
  1891  00716E  0E00               	movlw	0
  1892  007170  0100               	movlb	0	; () banked
  1893  007172  6FDA               	movwf	_t& (0+255),b
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;MAIN.c: 176: if(B==1){
  1897  007174  0100               	movlb	0	; () banked
  1898  007176  05CE               	decf	_B& (0+255),w,b
  1899  007178  11CF               	iorwf	(_B+1)& (0+255),w,b
  1900  00717A  A4D8               	btfss	status,2,c
  1901  00717C  D046               	goto	l2962
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;MAIN.c: 177: Lcd_Init();
  1905  00717E  EC22  F033         	call	_Lcd_Init	;wreg free
  1906                           
  1907                           ;MAIN.c: 178: Lcd_Cmd(1);
  1908  007182  0E01               	movlw	1
  1909  007184  ECB0  F033         	call	_Lcd_Cmd
  1910                           
  1911                           ;MAIN.c: 179: Lcd_Cmd(12);
  1912  007188  0E0C               	movlw	12
  1913  00718A  ECB0  F033         	call	_Lcd_Cmd
  1914                           
  1915                           ;MAIN.c: 180: Lcd_Out2(1,0,"*10%");
  1916  00718E  0E00               	movlw	0
  1917  007190  6E04               	movwf	Lcd_Out2@x,c
  1918  007192  0E7F               	movlw	high STR_16
  1919  007194  6E06               	movwf	Lcd_Out2@buffer+1,c
  1920  007196  0EAA               	movlw	low STR_16
  1921  007198  6E05               	movwf	Lcd_Out2@buffer,c
  1922  00719A  0E01               	movlw	1
  1923  00719C  EC88  F02F         	call	_Lcd_Out2
  1924                           
  1925                           ;MAIN.c: 181: Lcd_Out2(2,0," 20%");
  1926  0071A0  0E00               	movlw	0
  1927  0071A2  6E04               	movwf	Lcd_Out2@x,c
  1928  0071A4  0E7F               	movlw	high STR_17
  1929  0071A6  6E06               	movwf	Lcd_Out2@buffer+1,c
  1930  0071A8  0EAF               	movlw	low STR_17
  1931  0071AA  6E05               	movwf	Lcd_Out2@buffer,c
  1932  0071AC  0E02               	movlw	2
  1933  0071AE  EC88  F02F         	call	_Lcd_Out2
  1934                           
  1935                           ;MAIN.c: 182: Lcd_Out2(1,5," 30%");
  1936  0071B2  0E05               	movlw	5
  1937  0071B4  6E04               	movwf	Lcd_Out2@x,c
  1938  0071B6  0E7F               	movlw	high STR_18
  1939  0071B8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1940  0071BA  0EB9               	movlw	low STR_18
  1941  0071BC  6E05               	movwf	Lcd_Out2@buffer,c
  1942  0071BE  0E01               	movlw	1
  1943  0071C0  EC88  F02F         	call	_Lcd_Out2
  1944                           
  1945                           ;MAIN.c: 183: Lcd_Out2(2,5," 40%");
  1946  0071C4  0E05               	movlw	5
  1947  0071C6  6E04               	movwf	Lcd_Out2@x,c
  1948  0071C8  0E7F               	movlw	high STR_19
  1949  0071CA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1950  0071CC  0EC3               	movlw	low STR_19
  1951  0071CE  6E05               	movwf	Lcd_Out2@buffer,c
  1952  0071D0  0E02               	movlw	2
  1953  0071D2  EC88  F02F         	call	_Lcd_Out2
  1954                           
  1955                           ;MAIN.c: 184: Lcd_Out2(1,10," 50%");
  1956  0071D6  0E0A               	movlw	10
  1957  0071D8  6E04               	movwf	Lcd_Out2@x,c
  1958  0071DA  0E7F               	movlw	high STR_20
  1959  0071DC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1960  0071DE  0ECD               	movlw	low STR_20
  1961  0071E0  6E05               	movwf	Lcd_Out2@buffer,c
  1962  0071E2  0E01               	movlw	1
  1963  0071E4  EC88  F02F         	call	_Lcd_Out2
  1964                           
  1965                           ;MAIN.c: 185: Lcd_Out2(2,10," 60%");
  1966  0071E8  0E0A               	movlw	10
  1967  0071EA  6E04               	movwf	Lcd_Out2@x,c
  1968  0071EC  0E7F               	movlw	high STR_21
  1969  0071EE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1970  0071F0  0ED7               	movlw	low STR_21
  1971  0071F2  6E05               	movwf	Lcd_Out2@buffer,c
  1972  0071F4  0E02               	movlw	2
  1973  0071F6  EC88  F02F         	call	_Lcd_Out2
  1974                           
  1975                           ;MAIN.c: 186: tm_1s();
  1976  0071FA  EC9F  F02E         	call	_tm_1s	;wreg free
  1977                           
  1978                           ;MAIN.c: 187: Z=10;
  1979  0071FE  0E00               	movlw	0
  1980  007200  0100               	movlb	0	; () banked
  1981  007202  6FCC               	movwf	(main@Z+1)& (0+255),b
  1982  007204  0E0A               	movlw	10
  1983  007206  0100               	movlb	0	; () banked
  1984  007208  6FCB               	movwf	main@Z& (0+255),b
  1985  00720A                     l2962:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;MAIN.c: 189: }
  1989                           ;MAIN.c: 190: if(B==2){
  1990  00720A  0100               	movlb	0	; () banked
  1991  00720C  51CE               	movf	_B& (0+255),w,b
  1992  00720E  0A02               	xorlw	2
  1993  007210  11CF               	iorwf	(_B+1)& (0+255),w,b
  1994  007212  A4D8               	btfss	status,2,c
  1995  007214  D046               	goto	l2980
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;MAIN.c: 191: Lcd_Init();
  1999  007216  EC22  F033         	call	_Lcd_Init	;wreg free
  2000                           
  2001                           ;MAIN.c: 192: Lcd_Cmd(1);
  2002  00721A  0E01               	movlw	1
  2003  00721C  ECB0  F033         	call	_Lcd_Cmd
  2004                           
  2005                           ;MAIN.c: 193: Lcd_Cmd(12);
  2006  007220  0E0C               	movlw	12
  2007  007222  ECB0  F033         	call	_Lcd_Cmd
  2008                           
  2009                           ;MAIN.c: 194: Lcd_Out2(1,0," 10%");
  2010  007226  0E00               	movlw	0
  2011  007228  6E04               	movwf	Lcd_Out2@x,c
  2012  00722A  0E7F               	movlw	high STR_22
  2013  00722C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2014  00722E  0EA5               	movlw	low STR_22
  2015  007230  6E05               	movwf	Lcd_Out2@buffer,c
  2016  007232  0E01               	movlw	1
  2017  007234  EC88  F02F         	call	_Lcd_Out2
  2018                           
  2019                           ;MAIN.c: 195: Lcd_Out2(2,0,"*20%");
  2020  007238  0E00               	movlw	0
  2021  00723A  6E04               	movwf	Lcd_Out2@x,c
  2022  00723C  0E7F               	movlw	high STR_23
  2023  00723E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2024  007240  0EB4               	movlw	low STR_23
  2025  007242  6E05               	movwf	Lcd_Out2@buffer,c
  2026  007244  0E02               	movlw	2
  2027  007246  EC88  F02F         	call	_Lcd_Out2
  2028                           
  2029                           ;MAIN.c: 196: Lcd_Out2(1,5," 30%");
  2030  00724A  0E05               	movlw	5
  2031  00724C  6E04               	movwf	Lcd_Out2@x,c
  2032  00724E  0E7F               	movlw	high STR_18
  2033  007250  6E06               	movwf	Lcd_Out2@buffer+1,c
  2034  007252  0EB9               	movlw	low STR_18
  2035  007254  6E05               	movwf	Lcd_Out2@buffer,c
  2036  007256  0E01               	movlw	1
  2037  007258  EC88  F02F         	call	_Lcd_Out2
  2038                           
  2039                           ;MAIN.c: 197: Lcd_Out2(2,5," 40%");
  2040  00725C  0E05               	movlw	5
  2041  00725E  6E04               	movwf	Lcd_Out2@x,c
  2042  007260  0E7F               	movlw	high STR_19
  2043  007262  6E06               	movwf	Lcd_Out2@buffer+1,c
  2044  007264  0EC3               	movlw	low STR_19
  2045  007266  6E05               	movwf	Lcd_Out2@buffer,c
  2046  007268  0E02               	movlw	2
  2047  00726A  EC88  F02F         	call	_Lcd_Out2
  2048                           
  2049                           ;MAIN.c: 198: Lcd_Out2(1,10," 50%");
  2050  00726E  0E0A               	movlw	10
  2051  007270  6E04               	movwf	Lcd_Out2@x,c
  2052  007272  0E7F               	movlw	high STR_20
  2053  007274  6E06               	movwf	Lcd_Out2@buffer+1,c
  2054  007276  0ECD               	movlw	low STR_20
  2055  007278  6E05               	movwf	Lcd_Out2@buffer,c
  2056  00727A  0E01               	movlw	1
  2057  00727C  EC88  F02F         	call	_Lcd_Out2
  2058                           
  2059                           ;MAIN.c: 199: Lcd_Out2(2,10," 60%");
  2060  007280  0E0A               	movlw	10
  2061  007282  6E04               	movwf	Lcd_Out2@x,c
  2062  007284  0E7F               	movlw	high STR_21
  2063  007286  6E06               	movwf	Lcd_Out2@buffer+1,c
  2064  007288  0ED7               	movlw	low STR_21
  2065  00728A  6E05               	movwf	Lcd_Out2@buffer,c
  2066  00728C  0E02               	movlw	2
  2067  00728E  EC88  F02F         	call	_Lcd_Out2
  2068                           
  2069                           ;MAIN.c: 200: tm_1s();
  2070  007292  EC9F  F02E         	call	_tm_1s	;wreg free
  2071                           
  2072                           ;MAIN.c: 201: Z=20;
  2073  007296  0E00               	movlw	0
  2074  007298  0100               	movlb	0	; () banked
  2075  00729A  6FCC               	movwf	(main@Z+1)& (0+255),b
  2076  00729C  0E14               	movlw	20
  2077  00729E  0100               	movlb	0	; () banked
  2078  0072A0  6FCB               	movwf	main@Z& (0+255),b
  2079  0072A2                     l2980:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;MAIN.c: 203: }
  2083                           ;MAIN.c: 204: if(B==3){
  2084  0072A2  0100               	movlb	0	; () banked
  2085  0072A4  51CE               	movf	_B& (0+255),w,b
  2086  0072A6  0A03               	xorlw	3
  2087  0072A8  11CF               	iorwf	(_B+1)& (0+255),w,b
  2088  0072AA  A4D8               	btfss	status,2,c
  2089  0072AC  D046               	goto	l2998
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;MAIN.c: 205: Lcd_Init();
  2093  0072AE  EC22  F033         	call	_Lcd_Init	;wreg free
  2094                           
  2095                           ;MAIN.c: 206: Lcd_Cmd(1);
  2096  0072B2  0E01               	movlw	1
  2097  0072B4  ECB0  F033         	call	_Lcd_Cmd
  2098                           
  2099                           ;MAIN.c: 207: Lcd_Cmd(12);
  2100  0072B8  0E0C               	movlw	12
  2101  0072BA  ECB0  F033         	call	_Lcd_Cmd
  2102                           
  2103                           ;MAIN.c: 208: Lcd_Out2(1,0," 10%");
  2104  0072BE  0E00               	movlw	0
  2105  0072C0  6E04               	movwf	Lcd_Out2@x,c
  2106  0072C2  0E7F               	movlw	high STR_22
  2107  0072C4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2108  0072C6  0EA5               	movlw	low STR_22
  2109  0072C8  6E05               	movwf	Lcd_Out2@buffer,c
  2110  0072CA  0E01               	movlw	1
  2111  0072CC  EC88  F02F         	call	_Lcd_Out2
  2112                           
  2113                           ;MAIN.c: 209: Lcd_Out2(2,0," 20%");
  2114  0072D0  0E00               	movlw	0
  2115  0072D2  6E04               	movwf	Lcd_Out2@x,c
  2116  0072D4  0E7F               	movlw	high STR_17
  2117  0072D6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2118  0072D8  0EAF               	movlw	low STR_17
  2119  0072DA  6E05               	movwf	Lcd_Out2@buffer,c
  2120  0072DC  0E02               	movlw	2
  2121  0072DE  EC88  F02F         	call	_Lcd_Out2
  2122                           
  2123                           ;MAIN.c: 210: Lcd_Out2(1,5,"*30%");
  2124  0072E2  0E05               	movlw	5
  2125  0072E4  6E04               	movwf	Lcd_Out2@x,c
  2126  0072E6  0E7F               	movlw	high STR_30
  2127  0072E8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2128  0072EA  0EBE               	movlw	low STR_30
  2129  0072EC  6E05               	movwf	Lcd_Out2@buffer,c
  2130  0072EE  0E01               	movlw	1
  2131  0072F0  EC88  F02F         	call	_Lcd_Out2
  2132                           
  2133                           ;MAIN.c: 211: Lcd_Out2(2,5," 40%");
  2134  0072F4  0E05               	movlw	5
  2135  0072F6  6E04               	movwf	Lcd_Out2@x,c
  2136  0072F8  0E7F               	movlw	high STR_19
  2137  0072FA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2138  0072FC  0EC3               	movlw	low STR_19
  2139  0072FE  6E05               	movwf	Lcd_Out2@buffer,c
  2140  007300  0E02               	movlw	2
  2141  007302  EC88  F02F         	call	_Lcd_Out2
  2142                           
  2143                           ;MAIN.c: 212: Lcd_Out2(1,10," 50%");
  2144  007306  0E0A               	movlw	10
  2145  007308  6E04               	movwf	Lcd_Out2@x,c
  2146  00730A  0E7F               	movlw	high STR_20
  2147  00730C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2148  00730E  0ECD               	movlw	low STR_20
  2149  007310  6E05               	movwf	Lcd_Out2@buffer,c
  2150  007312  0E01               	movlw	1
  2151  007314  EC88  F02F         	call	_Lcd_Out2
  2152                           
  2153                           ;MAIN.c: 213: Lcd_Out2(2,10," 60%");
  2154  007318  0E0A               	movlw	10
  2155  00731A  6E04               	movwf	Lcd_Out2@x,c
  2156  00731C  0E7F               	movlw	high STR_21
  2157  00731E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2158  007320  0ED7               	movlw	low STR_21
  2159  007322  6E05               	movwf	Lcd_Out2@buffer,c
  2160  007324  0E02               	movlw	2
  2161  007326  EC88  F02F         	call	_Lcd_Out2
  2162                           
  2163                           ;MAIN.c: 214: tm_1s();
  2164  00732A  EC9F  F02E         	call	_tm_1s	;wreg free
  2165                           
  2166                           ;MAIN.c: 215: Z=30;
  2167  00732E  0E00               	movlw	0
  2168  007330  0100               	movlb	0	; () banked
  2169  007332  6FCC               	movwf	(main@Z+1)& (0+255),b
  2170  007334  0E1E               	movlw	30
  2171  007336  0100               	movlb	0	; () banked
  2172  007338  6FCB               	movwf	main@Z& (0+255),b
  2173  00733A                     l2998:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;MAIN.c: 218: }
  2177                           ;MAIN.c: 219: if(B==4){
  2178  00733A  0100               	movlb	0	; () banked
  2179  00733C  51CE               	movf	_B& (0+255),w,b
  2180  00733E  0A04               	xorlw	4
  2181  007340  11CF               	iorwf	(_B+1)& (0+255),w,b
  2182  007342  A4D8               	btfss	status,2,c
  2183  007344  D046               	goto	l3016
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;MAIN.c: 220: Lcd_Init();
  2187  007346  EC22  F033         	call	_Lcd_Init	;wreg free
  2188                           
  2189                           ;MAIN.c: 221: Lcd_Cmd(1);
  2190  00734A  0E01               	movlw	1
  2191  00734C  ECB0  F033         	call	_Lcd_Cmd
  2192                           
  2193                           ;MAIN.c: 222: Lcd_Cmd(12);
  2194  007350  0E0C               	movlw	12
  2195  007352  ECB0  F033         	call	_Lcd_Cmd
  2196                           
  2197                           ;MAIN.c: 223: Lcd_Out2(1,0," 10%");
  2198  007356  0E00               	movlw	0
  2199  007358  6E04               	movwf	Lcd_Out2@x,c
  2200  00735A  0E7F               	movlw	high STR_22
  2201  00735C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2202  00735E  0EA5               	movlw	low STR_22
  2203  007360  6E05               	movwf	Lcd_Out2@buffer,c
  2204  007362  0E01               	movlw	1
  2205  007364  EC88  F02F         	call	_Lcd_Out2
  2206                           
  2207                           ;MAIN.c: 224: Lcd_Out2(2,0," 20%");
  2208  007368  0E00               	movlw	0
  2209  00736A  6E04               	movwf	Lcd_Out2@x,c
  2210  00736C  0E7F               	movlw	high STR_17
  2211  00736E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2212  007370  0EAF               	movlw	low STR_17
  2213  007372  6E05               	movwf	Lcd_Out2@buffer,c
  2214  007374  0E02               	movlw	2
  2215  007376  EC88  F02F         	call	_Lcd_Out2
  2216                           
  2217                           ;MAIN.c: 225: Lcd_Out2(1,5," 30%");
  2218  00737A  0E05               	movlw	5
  2219  00737C  6E04               	movwf	Lcd_Out2@x,c
  2220  00737E  0E7F               	movlw	high STR_18
  2221  007380  6E06               	movwf	Lcd_Out2@buffer+1,c
  2222  007382  0EB9               	movlw	low STR_18
  2223  007384  6E05               	movwf	Lcd_Out2@buffer,c
  2224  007386  0E01               	movlw	1
  2225  007388  EC88  F02F         	call	_Lcd_Out2
  2226                           
  2227                           ;MAIN.c: 226: Lcd_Out2(2,5,"*40%");
  2228  00738C  0E05               	movlw	5
  2229  00738E  6E04               	movwf	Lcd_Out2@x,c
  2230  007390  0E7F               	movlw	high STR_37
  2231  007392  6E06               	movwf	Lcd_Out2@buffer+1,c
  2232  007394  0EC8               	movlw	low STR_37
  2233  007396  6E05               	movwf	Lcd_Out2@buffer,c
  2234  007398  0E02               	movlw	2
  2235  00739A  EC88  F02F         	call	_Lcd_Out2
  2236                           
  2237                           ;MAIN.c: 227: Lcd_Out2(1,10," 50%");
  2238  00739E  0E0A               	movlw	10
  2239  0073A0  6E04               	movwf	Lcd_Out2@x,c
  2240  0073A2  0E7F               	movlw	high STR_20
  2241  0073A4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2242  0073A6  0ECD               	movlw	low STR_20
  2243  0073A8  6E05               	movwf	Lcd_Out2@buffer,c
  2244  0073AA  0E01               	movlw	1
  2245  0073AC  EC88  F02F         	call	_Lcd_Out2
  2246                           
  2247                           ;MAIN.c: 228: Lcd_Out2(2,10," 60%");
  2248  0073B0  0E0A               	movlw	10
  2249  0073B2  6E04               	movwf	Lcd_Out2@x,c
  2250  0073B4  0E7F               	movlw	high STR_21
  2251  0073B6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2252  0073B8  0ED7               	movlw	low STR_21
  2253  0073BA  6E05               	movwf	Lcd_Out2@buffer,c
  2254  0073BC  0E02               	movlw	2
  2255  0073BE  EC88  F02F         	call	_Lcd_Out2
  2256                           
  2257                           ;MAIN.c: 229: tm_1s();
  2258  0073C2  EC9F  F02E         	call	_tm_1s	;wreg free
  2259                           
  2260                           ;MAIN.c: 230: Z=40;
  2261  0073C6  0E00               	movlw	0
  2262  0073C8  0100               	movlb	0	; () banked
  2263  0073CA  6FCC               	movwf	(main@Z+1)& (0+255),b
  2264  0073CC  0E28               	movlw	40
  2265  0073CE  0100               	movlb	0	; () banked
  2266  0073D0  6FCB               	movwf	main@Z& (0+255),b
  2267  0073D2                     l3016:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;MAIN.c: 233: }
  2271                           ;MAIN.c: 234: if(B==5){
  2272  0073D2  0100               	movlb	0	; () banked
  2273  0073D4  51CE               	movf	_B& (0+255),w,b
  2274  0073D6  0A05               	xorlw	5
  2275  0073D8  11CF               	iorwf	(_B+1)& (0+255),w,b
  2276  0073DA  A4D8               	btfss	status,2,c
  2277  0073DC  D046               	goto	l3034
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;MAIN.c: 235: Lcd_Init();
  2281  0073DE  EC22  F033         	call	_Lcd_Init	;wreg free
  2282                           
  2283                           ;MAIN.c: 236: Lcd_Cmd(1);
  2284  0073E2  0E01               	movlw	1
  2285  0073E4  ECB0  F033         	call	_Lcd_Cmd
  2286                           
  2287                           ;MAIN.c: 237: Lcd_Cmd(12);
  2288  0073E8  0E0C               	movlw	12
  2289  0073EA  ECB0  F033         	call	_Lcd_Cmd
  2290                           
  2291                           ;MAIN.c: 238: Lcd_Out2(1,0," 10%");
  2292  0073EE  0E00               	movlw	0
  2293  0073F0  6E04               	movwf	Lcd_Out2@x,c
  2294  0073F2  0E7F               	movlw	high STR_22
  2295  0073F4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2296  0073F6  0EA5               	movlw	low STR_22
  2297  0073F8  6E05               	movwf	Lcd_Out2@buffer,c
  2298  0073FA  0E01               	movlw	1
  2299  0073FC  EC88  F02F         	call	_Lcd_Out2
  2300                           
  2301                           ;MAIN.c: 239: Lcd_Out2(2,0," 20%");
  2302  007400  0E00               	movlw	0
  2303  007402  6E04               	movwf	Lcd_Out2@x,c
  2304  007404  0E7F               	movlw	high STR_17
  2305  007406  6E06               	movwf	Lcd_Out2@buffer+1,c
  2306  007408  0EAF               	movlw	low STR_17
  2307  00740A  6E05               	movwf	Lcd_Out2@buffer,c
  2308  00740C  0E02               	movlw	2
  2309  00740E  EC88  F02F         	call	_Lcd_Out2
  2310                           
  2311                           ;MAIN.c: 240: Lcd_Out2(1,5," 30%");
  2312  007412  0E05               	movlw	5
  2313  007414  6E04               	movwf	Lcd_Out2@x,c
  2314  007416  0E7F               	movlw	high STR_18
  2315  007418  6E06               	movwf	Lcd_Out2@buffer+1,c
  2316  00741A  0EB9               	movlw	low STR_18
  2317  00741C  6E05               	movwf	Lcd_Out2@buffer,c
  2318  00741E  0E01               	movlw	1
  2319  007420  EC88  F02F         	call	_Lcd_Out2
  2320                           
  2321                           ;MAIN.c: 241: Lcd_Out2(2,5," 40%");
  2322  007424  0E05               	movlw	5
  2323  007426  6E04               	movwf	Lcd_Out2@x,c
  2324  007428  0E7F               	movlw	high STR_19
  2325  00742A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2326  00742C  0EC3               	movlw	low STR_19
  2327  00742E  6E05               	movwf	Lcd_Out2@buffer,c
  2328  007430  0E02               	movlw	2
  2329  007432  EC88  F02F         	call	_Lcd_Out2
  2330                           
  2331                           ;MAIN.c: 242: Lcd_Out2(1,10,"*50%");
  2332  007436  0E0A               	movlw	10
  2333  007438  6E04               	movwf	Lcd_Out2@x,c
  2334  00743A  0E7F               	movlw	high STR_44
  2335  00743C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2336  00743E  0ED2               	movlw	low STR_44
  2337  007440  6E05               	movwf	Lcd_Out2@buffer,c
  2338  007442  0E01               	movlw	1
  2339  007444  EC88  F02F         	call	_Lcd_Out2
  2340                           
  2341                           ;MAIN.c: 243: Lcd_Out2(2,10," 60%");
  2342  007448  0E0A               	movlw	10
  2343  00744A  6E04               	movwf	Lcd_Out2@x,c
  2344  00744C  0E7F               	movlw	high STR_21
  2345  00744E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2346  007450  0ED7               	movlw	low STR_21
  2347  007452  6E05               	movwf	Lcd_Out2@buffer,c
  2348  007454  0E02               	movlw	2
  2349  007456  EC88  F02F         	call	_Lcd_Out2
  2350                           
  2351                           ;MAIN.c: 244: tm_1s();
  2352  00745A  EC9F  F02E         	call	_tm_1s	;wreg free
  2353                           
  2354                           ;MAIN.c: 245: Z=50;
  2355  00745E  0E00               	movlw	0
  2356  007460  0100               	movlb	0	; () banked
  2357  007462  6FCC               	movwf	(main@Z+1)& (0+255),b
  2358  007464  0E32               	movlw	50
  2359  007466  0100               	movlb	0	; () banked
  2360  007468  6FCB               	movwf	main@Z& (0+255),b
  2361  00746A                     l3034:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;MAIN.c: 248: }
  2365                           ;MAIN.c: 249: if(B==6){
  2366  00746A  0100               	movlb	0	; () banked
  2367  00746C  51CE               	movf	_B& (0+255),w,b
  2368  00746E  0A06               	xorlw	6
  2369  007470  11CF               	iorwf	(_B+1)& (0+255),w,b
  2370  007472  A4D8               	btfss	status,2,c
  2371  007474  D046               	goto	l3052
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;MAIN.c: 250: Lcd_Init();
  2375  007476  EC22  F033         	call	_Lcd_Init	;wreg free
  2376                           
  2377                           ;MAIN.c: 251: Lcd_Cmd(1);
  2378  00747A  0E01               	movlw	1
  2379  00747C  ECB0  F033         	call	_Lcd_Cmd
  2380                           
  2381                           ;MAIN.c: 252: Lcd_Cmd(12);
  2382  007480  0E0C               	movlw	12
  2383  007482  ECB0  F033         	call	_Lcd_Cmd
  2384                           
  2385                           ;MAIN.c: 253: Lcd_Out2(1,0," 10%");
  2386  007486  0E00               	movlw	0
  2387  007488  6E04               	movwf	Lcd_Out2@x,c
  2388  00748A  0E7F               	movlw	high STR_22
  2389  00748C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2390  00748E  0EA5               	movlw	low STR_22
  2391  007490  6E05               	movwf	Lcd_Out2@buffer,c
  2392  007492  0E01               	movlw	1
  2393  007494  EC88  F02F         	call	_Lcd_Out2
  2394                           
  2395                           ;MAIN.c: 254: Lcd_Out2(2,0," 20%");
  2396  007498  0E00               	movlw	0
  2397  00749A  6E04               	movwf	Lcd_Out2@x,c
  2398  00749C  0E7F               	movlw	high STR_17
  2399  00749E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2400  0074A0  0EAF               	movlw	low STR_17
  2401  0074A2  6E05               	movwf	Lcd_Out2@buffer,c
  2402  0074A4  0E02               	movlw	2
  2403  0074A6  EC88  F02F         	call	_Lcd_Out2
  2404                           
  2405                           ;MAIN.c: 255: Lcd_Out2(1,5," 30%");
  2406  0074AA  0E05               	movlw	5
  2407  0074AC  6E04               	movwf	Lcd_Out2@x,c
  2408  0074AE  0E7F               	movlw	high STR_18
  2409  0074B0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2410  0074B2  0EB9               	movlw	low STR_18
  2411  0074B4  6E05               	movwf	Lcd_Out2@buffer,c
  2412  0074B6  0E01               	movlw	1
  2413  0074B8  EC88  F02F         	call	_Lcd_Out2
  2414                           
  2415                           ;MAIN.c: 256: Lcd_Out2(2,5," 40%");
  2416  0074BC  0E05               	movlw	5
  2417  0074BE  6E04               	movwf	Lcd_Out2@x,c
  2418  0074C0  0E7F               	movlw	high STR_19
  2419  0074C2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2420  0074C4  0EC3               	movlw	low STR_19
  2421  0074C6  6E05               	movwf	Lcd_Out2@buffer,c
  2422  0074C8  0E02               	movlw	2
  2423  0074CA  EC88  F02F         	call	_Lcd_Out2
  2424                           
  2425                           ;MAIN.c: 257: Lcd_Out2(1,10," 50%");
  2426  0074CE  0E0A               	movlw	10
  2427  0074D0  6E04               	movwf	Lcd_Out2@x,c
  2428  0074D2  0E7F               	movlw	high STR_20
  2429  0074D4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2430  0074D6  0ECD               	movlw	low STR_20
  2431  0074D8  6E05               	movwf	Lcd_Out2@buffer,c
  2432  0074DA  0E01               	movlw	1
  2433  0074DC  EC88  F02F         	call	_Lcd_Out2
  2434                           
  2435                           ;MAIN.c: 258: Lcd_Out2(2,10,"*60%");
  2436  0074E0  0E0A               	movlw	10
  2437  0074E2  6E04               	movwf	Lcd_Out2@x,c
  2438  0074E4  0E7F               	movlw	high STR_51
  2439  0074E6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2440  0074E8  0EDC               	movlw	low STR_51
  2441  0074EA  6E05               	movwf	Lcd_Out2@buffer,c
  2442  0074EC  0E02               	movlw	2
  2443  0074EE  EC88  F02F         	call	_Lcd_Out2
  2444                           
  2445                           ;MAIN.c: 259: tm_1s();
  2446  0074F2  EC9F  F02E         	call	_tm_1s	;wreg free
  2447                           
  2448                           ;MAIN.c: 260: Z=60;
  2449  0074F6  0E00               	movlw	0
  2450  0074F8  0100               	movlb	0	; () banked
  2451  0074FA  6FCC               	movwf	(main@Z+1)& (0+255),b
  2452  0074FC  0E3C               	movlw	60
  2453  0074FE  0100               	movlb	0	; () banked
  2454  007500  6FCB               	movwf	main@Z& (0+255),b
  2455  007502                     l3052:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;MAIN.c: 263: }
  2459                           ;MAIN.c: 264: if(B==7){
  2460  007502  0100               	movlb	0	; () banked
  2461  007504  51CE               	movf	_B& (0+255),w,b
  2462  007506  0A07               	xorlw	7
  2463  007508  11CF               	iorwf	(_B+1)& (0+255),w,b
  2464  00750A  A4D8               	btfss	status,2,c
  2465  00750C  D034               	goto	l3066
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;MAIN.c: 267: Lcd_Init();
  2469  00750E  EC22  F033         	call	_Lcd_Init	;wreg free
  2470                           
  2471                           ;MAIN.c: 268: Lcd_Cmd(1);
  2472  007512  0E01               	movlw	1
  2473  007514  ECB0  F033         	call	_Lcd_Cmd
  2474                           
  2475                           ;MAIN.c: 269: Lcd_Cmd(12);
  2476  007518  0E0C               	movlw	12
  2477  00751A  ECB0  F033         	call	_Lcd_Cmd
  2478                           
  2479                           ;MAIN.c: 270: Lcd_Out2(1,1," *70%");
  2480  00751E  0E01               	movlw	1
  2481  007520  6E04               	movwf	Lcd_Out2@x,c
  2482  007522  0E7F               	movlw	high STR_52
  2483  007524  6E06               	movwf	Lcd_Out2@buffer+1,c
  2484  007526  0E9F               	movlw	low STR_52
  2485  007528  6E05               	movwf	Lcd_Out2@buffer,c
  2486  00752A  0E01               	movlw	1
  2487  00752C  EC88  F02F         	call	_Lcd_Out2
  2488                           
  2489                           ;MAIN.c: 271: Lcd_Out2(2,1," 80%");
  2490  007530  0E01               	movlw	1
  2491  007532  6E04               	movwf	Lcd_Out2@x,c
  2492  007534  0E7F               	movlw	high STR_53
  2493  007536  6E06               	movwf	Lcd_Out2@buffer+1,c
  2494  007538  0EE6               	movlw	low STR_53
  2495  00753A  6E05               	movwf	Lcd_Out2@buffer,c
  2496  00753C  0E02               	movlw	2
  2497  00753E  EC88  F02F         	call	_Lcd_Out2
  2498                           
  2499                           ;MAIN.c: 272: Lcd_Out2(1,6," 90%");
  2500  007542  0E06               	movlw	6
  2501  007544  6E04               	movwf	Lcd_Out2@x,c
  2502  007546  0E7F               	movlw	high STR_54
  2503  007548  6E06               	movwf	Lcd_Out2@buffer+1,c
  2504  00754A  0EF0               	movlw	low STR_54
  2505  00754C  6E05               	movwf	Lcd_Out2@buffer,c
  2506  00754E  0E01               	movlw	1
  2507  007550  EC88  F02F         	call	_Lcd_Out2
  2508                           
  2509                           ;MAIN.c: 273: Lcd_Out2(2,6," 100%");
  2510  007554  0E06               	movlw	6
  2511  007556  6E04               	movwf	Lcd_Out2@x,c
  2512  007558  0E7F               	movlw	high STR_55
  2513  00755A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2514  00755C  0E93               	movlw	low STR_55
  2515  00755E  6E05               	movwf	Lcd_Out2@buffer,c
  2516  007560  0E02               	movlw	2
  2517  007562  EC88  F02F         	call	_Lcd_Out2
  2518                           
  2519                           ;MAIN.c: 274: tm_1s();
  2520  007566  EC9F  F02E         	call	_tm_1s	;wreg free
  2521                           
  2522                           ;MAIN.c: 275: Z=70;
  2523  00756A  0E00               	movlw	0
  2524  00756C  0100               	movlb	0	; () banked
  2525  00756E  6FCC               	movwf	(main@Z+1)& (0+255),b
  2526  007570  0E46               	movlw	70
  2527  007572  0100               	movlb	0	; () banked
  2528  007574  6FCB               	movwf	main@Z& (0+255),b
  2529  007576                     l3066:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;MAIN.c: 277: }
  2533                           ;MAIN.c: 279: if(B==8){
  2534  007576  0100               	movlb	0	; () banked
  2535  007578  51CE               	movf	_B& (0+255),w,b
  2536  00757A  0A08               	xorlw	8
  2537  00757C  11CF               	iorwf	(_B+1)& (0+255),w,b
  2538  00757E  A4D8               	btfss	status,2,c
  2539  007580  D034               	goto	l3080
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;MAIN.c: 283: Lcd_Init();
  2543  007582  EC22  F033         	call	_Lcd_Init	;wreg free
  2544                           
  2545                           ;MAIN.c: 284: Lcd_Cmd(1);
  2546  007586  0E01               	movlw	1
  2547  007588  ECB0  F033         	call	_Lcd_Cmd
  2548                           
  2549                           ;MAIN.c: 285: Lcd_Cmd(12);
  2550  00758C  0E0C               	movlw	12
  2551  00758E  ECB0  F033         	call	_Lcd_Cmd
  2552                           
  2553                           ;MAIN.c: 286: Lcd_Out2(1,1," 70%");
  2554  007592  0E01               	movlw	1
  2555  007594  6E04               	movwf	Lcd_Out2@x,c
  2556  007596  0E7F               	movlw	high STR_56
  2557  007598  6E06               	movwf	Lcd_Out2@buffer+1,c
  2558  00759A  0EE1               	movlw	low STR_56
  2559  00759C  6E05               	movwf	Lcd_Out2@buffer,c
  2560  00759E  0E01               	movlw	1
  2561  0075A0  EC88  F02F         	call	_Lcd_Out2
  2562                           
  2563                           ;MAIN.c: 287: Lcd_Out2(2,1,"*80%");
  2564  0075A4  0E01               	movlw	1
  2565  0075A6  6E04               	movwf	Lcd_Out2@x,c
  2566  0075A8  0E7F               	movlw	high STR_57
  2567  0075AA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2568  0075AC  0EEB               	movlw	low STR_57
  2569  0075AE  6E05               	movwf	Lcd_Out2@buffer,c
  2570  0075B0  0E02               	movlw	2
  2571  0075B2  EC88  F02F         	call	_Lcd_Out2
  2572                           
  2573                           ;MAIN.c: 288: Lcd_Out2(1,6," 90%");
  2574  0075B6  0E06               	movlw	6
  2575  0075B8  6E04               	movwf	Lcd_Out2@x,c
  2576  0075BA  0E7F               	movlw	high STR_54
  2577  0075BC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2578  0075BE  0EF0               	movlw	low STR_54
  2579  0075C0  6E05               	movwf	Lcd_Out2@buffer,c
  2580  0075C2  0E01               	movlw	1
  2581  0075C4  EC88  F02F         	call	_Lcd_Out2
  2582                           
  2583                           ;MAIN.c: 289: Lcd_Out2(2,6," 100%");
  2584  0075C8  0E06               	movlw	6
  2585  0075CA  6E04               	movwf	Lcd_Out2@x,c
  2586  0075CC  0E7F               	movlw	high STR_55
  2587  0075CE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2588  0075D0  0E93               	movlw	low STR_55
  2589  0075D2  6E05               	movwf	Lcd_Out2@buffer,c
  2590  0075D4  0E02               	movlw	2
  2591  0075D6  EC88  F02F         	call	_Lcd_Out2
  2592                           
  2593                           ;MAIN.c: 290: tm_1s();
  2594  0075DA  EC9F  F02E         	call	_tm_1s	;wreg free
  2595                           
  2596                           ;MAIN.c: 291: Z=80;
  2597  0075DE  0E00               	movlw	0
  2598  0075E0  0100               	movlb	0	; () banked
  2599  0075E2  6FCC               	movwf	(main@Z+1)& (0+255),b
  2600  0075E4  0E50               	movlw	80
  2601  0075E6  0100               	movlb	0	; () banked
  2602  0075E8  6FCB               	movwf	main@Z& (0+255),b
  2603  0075EA                     l3080:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;MAIN.c: 293: }
  2607                           ;MAIN.c: 294: if(B==9){
  2608  0075EA  0100               	movlb	0	; () banked
  2609  0075EC  51CE               	movf	_B& (0+255),w,b
  2610  0075EE  0A09               	xorlw	9
  2611  0075F0  11CF               	iorwf	(_B+1)& (0+255),w,b
  2612  0075F2  A4D8               	btfss	status,2,c
  2613  0075F4  D034               	goto	l3094
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;MAIN.c: 297: Lcd_Init();
  2617  0075F6  EC22  F033         	call	_Lcd_Init	;wreg free
  2618                           
  2619                           ;MAIN.c: 298: Lcd_Cmd(1);
  2620  0075FA  0E01               	movlw	1
  2621  0075FC  ECB0  F033         	call	_Lcd_Cmd
  2622                           
  2623                           ;MAIN.c: 299: Lcd_Cmd(12);
  2624  007600  0E0C               	movlw	12
  2625  007602  ECB0  F033         	call	_Lcd_Cmd
  2626                           
  2627                           ;MAIN.c: 300: Lcd_Out2(1,1," 70%");
  2628  007606  0E01               	movlw	1
  2629  007608  6E04               	movwf	Lcd_Out2@x,c
  2630  00760A  0E7F               	movlw	high STR_56
  2631  00760C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2632  00760E  0EE1               	movlw	low STR_56
  2633  007610  6E05               	movwf	Lcd_Out2@buffer,c
  2634  007612  0E01               	movlw	1
  2635  007614  EC88  F02F         	call	_Lcd_Out2
  2636                           
  2637                           ;MAIN.c: 301: Lcd_Out2(2,1," 80%");
  2638  007618  0E01               	movlw	1
  2639  00761A  6E04               	movwf	Lcd_Out2@x,c
  2640  00761C  0E7F               	movlw	high STR_53
  2641  00761E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2642  007620  0EE6               	movlw	low STR_53
  2643  007622  6E05               	movwf	Lcd_Out2@buffer,c
  2644  007624  0E02               	movlw	2
  2645  007626  EC88  F02F         	call	_Lcd_Out2
  2646                           
  2647                           ;MAIN.c: 302: Lcd_Out2(1,6,"*90%");
  2648  00762A  0E06               	movlw	6
  2649  00762C  6E04               	movwf	Lcd_Out2@x,c
  2650  00762E  0E7F               	movlw	high STR_62
  2651  007630  6E06               	movwf	Lcd_Out2@buffer+1,c
  2652  007632  0EF5               	movlw	low STR_62
  2653  007634  6E05               	movwf	Lcd_Out2@buffer,c
  2654  007636  0E01               	movlw	1
  2655  007638  EC88  F02F         	call	_Lcd_Out2
  2656                           
  2657                           ;MAIN.c: 303: Lcd_Out2(2,6," 100%");
  2658  00763C  0E06               	movlw	6
  2659  00763E  6E04               	movwf	Lcd_Out2@x,c
  2660  007640  0E7F               	movlw	high STR_55
  2661  007642  6E06               	movwf	Lcd_Out2@buffer+1,c
  2662  007644  0E93               	movlw	low STR_55
  2663  007646  6E05               	movwf	Lcd_Out2@buffer,c
  2664  007648  0E02               	movlw	2
  2665  00764A  EC88  F02F         	call	_Lcd_Out2
  2666                           
  2667                           ;MAIN.c: 304: tm_1s();
  2668  00764E  EC9F  F02E         	call	_tm_1s	;wreg free
  2669                           
  2670                           ;MAIN.c: 305: Z=90;
  2671  007652  0E00               	movlw	0
  2672  007654  0100               	movlb	0	; () banked
  2673  007656  6FCC               	movwf	(main@Z+1)& (0+255),b
  2674  007658  0E5A               	movlw	90
  2675  00765A  0100               	movlb	0	; () banked
  2676  00765C  6FCB               	movwf	main@Z& (0+255),b
  2677  00765E                     l3094:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;MAIN.c: 307: }
  2681                           ;MAIN.c: 309: if(B==10){
  2682  00765E  0100               	movlb	0	; () banked
  2683  007660  51CE               	movf	_B& (0+255),w,b
  2684  007662  0A0A               	xorlw	10
  2685  007664  11CF               	iorwf	(_B+1)& (0+255),w,b
  2686  007666  A4D8               	btfss	status,2,c
  2687  007668  D034               	goto	l3108
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;MAIN.c: 313: Lcd_Init();
  2691  00766A  EC22  F033         	call	_Lcd_Init	;wreg free
  2692                           
  2693                           ;MAIN.c: 314: Lcd_Cmd(1);
  2694  00766E  0E01               	movlw	1
  2695  007670  ECB0  F033         	call	_Lcd_Cmd
  2696                           
  2697                           ;MAIN.c: 315: Lcd_Cmd(12);
  2698  007674  0E0C               	movlw	12
  2699  007676  ECB0  F033         	call	_Lcd_Cmd
  2700                           
  2701                           ;MAIN.c: 316: Lcd_Out2(1,1," 70%");
  2702  00767A  0E01               	movlw	1
  2703  00767C  6E04               	movwf	Lcd_Out2@x,c
  2704  00767E  0E7F               	movlw	high STR_56
  2705  007680  6E06               	movwf	Lcd_Out2@buffer+1,c
  2706  007682  0EE1               	movlw	low STR_56
  2707  007684  6E05               	movwf	Lcd_Out2@buffer,c
  2708  007686  0E01               	movlw	1
  2709  007688  EC88  F02F         	call	_Lcd_Out2
  2710                           
  2711                           ;MAIN.c: 317: Lcd_Out2(2,1," 80%");
  2712  00768C  0E01               	movlw	1
  2713  00768E  6E04               	movwf	Lcd_Out2@x,c
  2714  007690  0E7F               	movlw	high STR_53
  2715  007692  6E06               	movwf	Lcd_Out2@buffer+1,c
  2716  007694  0EE6               	movlw	low STR_53
  2717  007696  6E05               	movwf	Lcd_Out2@buffer,c
  2718  007698  0E02               	movlw	2
  2719  00769A  EC88  F02F         	call	_Lcd_Out2
  2720                           
  2721                           ;MAIN.c: 318: Lcd_Out2(1,6," 90%");
  2722  00769E  0E06               	movlw	6
  2723  0076A0  6E04               	movwf	Lcd_Out2@x,c
  2724  0076A2  0E7F               	movlw	high STR_54
  2725  0076A4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2726  0076A6  0EF0               	movlw	low STR_54
  2727  0076A8  6E05               	movwf	Lcd_Out2@buffer,c
  2728  0076AA  0E01               	movlw	1
  2729  0076AC  EC88  F02F         	call	_Lcd_Out2
  2730                           
  2731                           ;MAIN.c: 319: Lcd_Out2(2,6,"*100%");
  2732  0076B0  0E06               	movlw	6
  2733  0076B2  6E04               	movwf	Lcd_Out2@x,c
  2734  0076B4  0E7F               	movlw	high STR_67
  2735  0076B6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2736  0076B8  0E99               	movlw	low STR_67
  2737  0076BA  6E05               	movwf	Lcd_Out2@buffer,c
  2738  0076BC  0E02               	movlw	2
  2739  0076BE  EC88  F02F         	call	_Lcd_Out2
  2740                           
  2741                           ;MAIN.c: 320: tm_1s();
  2742  0076C2  EC9F  F02E         	call	_tm_1s	;wreg free
  2743                           
  2744                           ;MAIN.c: 321: Z=100;
  2745  0076C6  0E00               	movlw	0
  2746  0076C8  0100               	movlb	0	; () banked
  2747  0076CA  6FCC               	movwf	(main@Z+1)& (0+255),b
  2748  0076CC  0E64               	movlw	100
  2749  0076CE  0100               	movlb	0	; () banked
  2750  0076D0  6FCB               	movwf	main@Z& (0+255),b
  2751  0076D2                     l3108:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;MAIN.c: 323: }
  2755                           ;MAIN.c: 324: if(PORTAbits.RA0==1)
  2756  0076D2  A080               	btfss	3968,0,c	;volatile
  2757  0076D4  D00B               	goto	l3114
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;MAIN.c: 325: {
  2761                           ;MAIN.c: 326: B++;
  2762  0076D6  0100               	movlb	0	; () banked
  2763  0076D8  4BCE               	infsnz	_B& (0+255),f,b
  2764  0076DA  2BCF               	incf	(_B+1)& (0+255),f,b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;MAIN.c: 327: _delay((unsigned long)((10)*(8000000/4000.0)));
  2768  0076DC  0E1A               	movlw	26
  2769  0076DE  6E3D               	movwf	??_main& (0+255),c
  2770  0076E0  0EF8               	movlw	248
  2771  0076E2                     u3337:
  2772  0076E2  2EE8               	decfsz	wreg,f,c
  2773  0076E4  D7FE               	goto	u3337
  2774  0076E6  2E3D               	decfsz	??_main& (0+255),f,c
  2775  0076E8  D7FC               	goto	u3337
  2776  0076EA  D000               	nop2	
  2777  0076EC                     l3114:
  2778                           
  2779                           ;MAIN.c: 328: }
  2780                           ;MAIN.c: 330: if(PORTAbits.RA1==1)
  2781  0076EC  A280               	btfss	3968,1,c	;volatile
  2782  0076EE  D00C               	goto	l157
  2783                           
  2784                           ;MAIN.c: 331: {
  2785                           ;MAIN.c: 332: B--;
  2786  0076F0  0100               	movlb	0	; () banked
  2787  0076F2  07CE               	decf	_B& (0+255),f,b
  2788  0076F4  A0D8               	btfss	status,0,c
  2789  0076F6  07CF               	decf	(_B+1)& (0+255),f,b
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;MAIN.c: 333: _delay((unsigned long)((10)*(8000000/4000.0)));
  2793  0076F8  0E1A               	movlw	26
  2794  0076FA  6E3D               	movwf	??_main& (0+255),c
  2795  0076FC  0EF8               	movlw	248
  2796  0076FE                     u3347:
  2797  0076FE  2EE8               	decfsz	wreg,f,c
  2798  007700  D7FE               	goto	u3347
  2799  007702  2E3D               	decfsz	??_main& (0+255),f,c
  2800  007704  D7FC               	goto	u3347
  2801  007706  D000               	nop2	
  2802  007708                     l157:
  2803                           
  2804                           ;MAIN.c: 334: }
  2805                           ;MAIN.c: 336: if(B>10){
  2806  007708  0E0B               	movlw	11
  2807  00770A  0100               	movlb	0	; () banked
  2808  00770C  5DCE               	subwf	_B& (0+255),w,b
  2809  00770E  0E00               	movlw	0
  2810  007710  0100               	movlb	0	; () banked
  2811  007712  59CF               	subwfb	(_B+1)& (0+255),w,b
  2812  007714  A0D8               	btfss	status,0,c
  2813  007716  D006               	goto	l3124
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;MAIN.c: 337: B=1;
  2817  007718  0E00               	movlw	0
  2818  00771A  0100               	movlb	0	; () banked
  2819  00771C  6FCF               	movwf	(_B+1)& (0+255),b
  2820  00771E  0E01               	movlw	1
  2821  007720  0100               	movlb	0	; () banked
  2822  007722  6FCE               	movwf	_B& (0+255),b
  2823  007724                     l3124:
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;MAIN.c: 342: }
  2827                           ;MAIN.c: 344: if(PORTAbits.RA2==1){
  2828  007724  A480               	btfss	3968,2,c	;volatile
  2829  007726  D006               	goto	l3128
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;MAIN.c: 345: t=1;
  2833  007728  0E00               	movlw	0
  2834  00772A  0100               	movlb	0	; () banked
  2835  00772C  6FDB               	movwf	(_t+1)& (0+255),b
  2836  00772E  0E01               	movlw	1
  2837  007730  0100               	movlb	0	; () banked
  2838  007732  6FDA               	movwf	_t& (0+255),b
  2839  007734                     l3128:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;MAIN.c: 346: }
  2843                           ;MAIN.c: 348: }while(t==0);
  2844  007734  0100               	movlb	0	; () banked
  2845  007736  51DB               	movf	(_t+1)& (0+255),w,b
  2846  007738  11DA               	iorwf	_t& (0+255),w,b
  2847  00773A  B4D8               	btfsc	status,2,c
  2848  00773C  D515               	goto	l2942
  2849  00773E                     l143:
  2850                           
  2851                           ;MAIN.c: 350: }
  2852                           ;MAIN.c: 352: }
  2853                           ;MAIN.c: 353: if(PORTAbits.RA0==1)
  2854  00773E  A080               	btfss	3968,0,c	;volatile
  2855  007740  D00B               	goto	l3134
  2856                           
  2857                           ;MAIN.c: 354: {
  2858                           ;MAIN.c: 355: B++;
  2859  007742  0100               	movlb	0	; () banked
  2860  007744  4BCE               	infsnz	_B& (0+255),f,b
  2861  007746  2BCF               	incf	(_B+1)& (0+255),f,b
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;MAIN.c: 356: _delay((unsigned long)((10)*(8000000/4000.0)));
  2865  007748  0E1A               	movlw	26
  2866  00774A  6E3D               	movwf	??_main& (0+255),c
  2867  00774C  0EF8               	movlw	248
  2868  00774E                     u3357:
  2869  00774E  2EE8               	decfsz	wreg,f,c
  2870  007750  D7FE               	goto	u3357
  2871  007752  2E3D               	decfsz	??_main& (0+255),f,c
  2872  007754  D7FC               	goto	u3357
  2873  007756  D000               	nop2	
  2874  007758                     l3134:
  2875                           
  2876                           ;MAIN.c: 357: }
  2877                           ;MAIN.c: 359: if(PORTAbits.RA1==1)
  2878  007758  A280               	btfss	3968,1,c	;volatile
  2879  00775A  D00C               	goto	l163
  2880                           
  2881                           ;MAIN.c: 360: {
  2882                           ;MAIN.c: 361: B--;
  2883  00775C  0100               	movlb	0	; () banked
  2884  00775E  07CE               	decf	_B& (0+255),f,b
  2885  007760  A0D8               	btfss	status,0,c
  2886  007762  07CF               	decf	(_B+1)& (0+255),f,b
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;MAIN.c: 362: _delay((unsigned long)((10)*(8000000/4000.0)));
  2890  007764  0E1A               	movlw	26
  2891  007766  6E3D               	movwf	??_main& (0+255),c
  2892  007768  0EF8               	movlw	248
  2893  00776A                     u3367:
  2894  00776A  2EE8               	decfsz	wreg,f,c
  2895  00776C  D7FE               	goto	u3367
  2896  00776E  2E3D               	decfsz	??_main& (0+255),f,c
  2897  007770  D7FC               	goto	u3367
  2898  007772  D000               	nop2	
  2899  007774                     l163:
  2900                           
  2901                           ;MAIN.c: 363: }
  2902                           ;MAIN.c: 365: if(B>2){
  2903  007774  0E03               	movlw	3
  2904  007776  0100               	movlb	0	; () banked
  2905  007778  5DCE               	subwf	_B& (0+255),w,b
  2906  00777A  0E00               	movlw	0
  2907  00777C  0100               	movlb	0	; () banked
  2908  00777E  59CF               	subwfb	(_B+1)& (0+255),w,b
  2909  007780  A0D8               	btfss	status,0,c
  2910  007782  D006               	goto	l3144
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;MAIN.c: 366: B=1;
  2914  007784  0E00               	movlw	0
  2915  007786  0100               	movlb	0	; () banked
  2916  007788  6FCF               	movwf	(_B+1)& (0+255),b
  2917  00778A  0E01               	movlw	1
  2918  00778C  0100               	movlb	0	; () banked
  2919  00778E  6FCE               	movwf	_B& (0+255),b
  2920  007790                     l3144:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;MAIN.c: 372: }
  2924                           ;MAIN.c: 374: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  2925  007790  B080               	btfsc	3968,0,c	;volatile
  2926                           
  2927                           ; BSR set to: 0
  2928  007792  A280               	btfss	3968,1,c	;volatile
  2929  007794  D006               	goto	l3150
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;MAIN.c: 375: e=1;
  2933  007796  0E00               	movlw	0
  2934  007798  0100               	movlb	0	; () banked
  2935  00779A  6FD3               	movwf	(_e+1)& (0+255),b
  2936  00779C  0E01               	movlw	1
  2937  00779E  0100               	movlb	0	; () banked
  2938  0077A0  6FD2               	movwf	_e& (0+255),b
  2939  0077A2                     l3150:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;MAIN.c: 376: }
  2943                           ;MAIN.c: 377: }
  2944                           ;MAIN.c: 378: while(e==0);
  2945  0077A2  0100               	movlb	0	; () banked
  2946  0077A4  51D3               	movf	(_e+1)& (0+255),w,b
  2947  0077A6  11D2               	iorwf	_e& (0+255),w,b
  2948  0077A8  B4D8               	btfsc	status,2,c
  2949  0077AA  EFB8  F037         	goto	l2858
  2950  0077AE                     l3152:
  2951                           
  2952                           ;MAIN.c: 379: }
  2953                           ;MAIN.c: 380: }
  2954                           ;MAIN.c: 381: if(B==2){
  2955  0077AE  0100               	movlb	0	; () banked
  2956  0077B0  51CE               	movf	_B& (0+255),w,b
  2957  0077B2  0A02               	xorlw	2
  2958  0077B4  11CF               	iorwf	(_B+1)& (0+255),w,b
  2959  0077B6  A4D8               	btfss	status,2,c
  2960  0077B8  D01C               	goto	l3160
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;MAIN.c: 382: Lcd_Init();
  2964  0077BA  EC22  F033         	call	_Lcd_Init	;wreg free
  2965                           
  2966                           ;MAIN.c: 383: Lcd_Cmd(1);
  2967  0077BE  0E01               	movlw	1
  2968  0077C0  ECB0  F033         	call	_Lcd_Cmd
  2969                           
  2970                           ;MAIN.c: 384: Lcd_Cmd(12);
  2971  0077C4  0E0C               	movlw	12
  2972  0077C6  ECB0  F033         	call	_Lcd_Cmd
  2973                           
  2974                           ;MAIN.c: 385: Lcd_Out2(1,1,"   Ingresar");
  2975  0077CA  0E01               	movlw	1
  2976  0077CC  6E04               	movwf	Lcd_Out2@x,c
  2977  0077CE  0E7E               	movlw	high STR_5
  2978  0077D0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2979  0077D2  0EC5               	movlw	low STR_5
  2980  0077D4  6E05               	movwf	Lcd_Out2@buffer,c
  2981  0077D6  0E01               	movlw	1
  2982  0077D8  EC88  F02F         	call	_Lcd_Out2
  2983                           
  2984                           ;MAIN.c: 386: Lcd_Out2(2,1,"=> Comenzar");
  2985  0077DC  0E01               	movlw	1
  2986  0077DE  6E04               	movwf	Lcd_Out2@x,c
  2987  0077E0  0E7E               	movlw	high STR_69
  2988  0077E2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2989  0077E4  0EE9               	movlw	low STR_69
  2990  0077E6  6E05               	movwf	Lcd_Out2@buffer,c
  2991  0077E8  0E02               	movlw	2
  2992  0077EA  EC88  F02F         	call	_Lcd_Out2
  2993                           
  2994                           ;MAIN.c: 387: tm_1s();
  2995  0077EE  EC9F  F02E         	call	_tm_1s	;wreg free
  2996  0077F2                     l3160:
  2997                           
  2998                           ;MAIN.c: 389: }
  2999                           ;MAIN.c: 390: if(PORTAbits.RA2==1){
  3000  0077F2  A480               	btfss	3968,2,c	;volatile
  3001  0077F4  D090               	goto	l169
  3002                           
  3003                           ;MAIN.c: 391: p=0;
  3004  0077F6  0E00               	movlw	0
  3005  0077F8  0100               	movlb	0	; () banked
  3006  0077FA  6FD5               	movwf	(_p+1)& (0+255),b
  3007  0077FC  0E00               	movlw	0
  3008  0077FE  0100               	movlb	0	; () banked
  3009  007800  6FD4               	movwf	_p& (0+255),b
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;MAIN.c: 392: Lcd_Init();
  3013  007802  EC22  F033         	call	_Lcd_Init	;wreg free
  3014                           
  3015                           ;MAIN.c: 393: Lcd_Cmd(1);
  3016  007806  0E01               	movlw	1
  3017  007808  ECB0  F033         	call	_Lcd_Cmd
  3018                           
  3019                           ;MAIN.c: 394: Lcd_Cmd(12);
  3020  00780C  0E0C               	movlw	12
  3021  00780E  ECB0  F033         	call	_Lcd_Cmd
  3022                           
  3023                           ;MAIN.c: 398: X=A*1000;
  3024  007812  0100               	movlb	0	; () banked
  3025  007814  C0CD  F001         	movff	main@A,___wmul@multiplier
  3026  007818  6A02               	clrf	___wmul@multiplier+1,c
  3027  00781A  0E03               	movlw	3
  3028  00781C  6E04               	movwf	___wmul@multiplicand+1,c
  3029  00781E  0EE8               	movlw	232
  3030  007820  6E03               	movwf	___wmul@multiplicand,c
  3031  007822  EC8C  F02E         	call	___wmul	;wreg free
  3032  007826  C001  F0C9         	movff	?___wmul,main@X
  3033  00782A  C002  F0CA         	movff	?___wmul+1,main@X+1
  3034                           
  3035                           ;MAIN.c: 400: cant = Conv_Entero(X,cad);
  3036  00782E  0100               	movlb	0	; () banked
  3037  007830  C0C9  F00F         	movff	main@X,Conv_Entero@numero
  3038  007834  0100               	movlb	0	; () banked
  3039  007836  C0CA  F010         	movff	main@X+1,Conv_Entero@numero+1
  3040  00783A  6A11               	clrf	Conv_Entero@numero+2,c
  3041  00783C  6A12               	clrf	Conv_Entero@numero+3,c
  3042  00783E  0100               	movlb	0	; () banked
  3043  007840  0E00               	movlw	high main@cad
  3044  007842  6E14               	movwf	Conv_Entero@conv+1,c
  3045  007844  0100               	movlb	0	; () banked
  3046  007846  0E9C               	movlw	low main@cad
  3047  007848  6E13               	movwf	Conv_Entero@conv,c
  3048  00784A  ECDC  F034         	call	_Conv_Entero	;wreg free
  3049  00784E  500F               	movf	?_Conv_Entero,w,c
  3050  007850  0100               	movlb	0	; () banked
  3051  007852  6FC8               	movwf	main@cant& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;MAIN.c: 401: unsigned char fre=0;
  3055  007854  0E00               	movlw	0
  3056  007856  0100               	movlb	0	; () banked
  3057  007858  6FC6               	movwf	main@fre& (0+255),b
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;MAIN.c: 403: PWM_generar(Z,M);
  3061  00785A  C0CB  F00E         	movff	main@Z,PWM_generar@duty
  3062  00785E  C0CC  F00F         	movff	main@Z+1,PWM_generar@duty+1
  3063  007862  C0D0  F010         	movff	_M,PWM_generar@fpwm
  3064  007866  C0D1  F011         	movff	_M+1,PWM_generar@fpwm+1
  3065  00786A  ECC8  F035         	call	_PWM_generar	;wreg free
  3066                           
  3067                           ;MAIN.c: 405: Lcd_Out2(1,1,"F:  000 hz");
  3068  00786E  0E01               	movlw	1
  3069  007870  6E04               	movwf	Lcd_Out2@x,c
  3070  007872  0E7F               	movlw	high STR_70
  3071  007874  6E06               	movwf	Lcd_Out2@buffer+1,c
  3072  007876  0E00               	movlw	low STR_70
  3073  007878  6E05               	movwf	Lcd_Out2@buffer,c
  3074  00787A  0E01               	movlw	1
  3075  00787C  EC88  F02F         	call	_Lcd_Out2
  3076                           
  3077                           ;MAIN.c: 406: lcd_goto(4,1);
  3078  007880  0E00               	movlw	0
  3079  007882  6E05               	movwf	lcd_goto@x+1,c
  3080  007884  0E04               	movlw	4
  3081  007886  6E04               	movwf	lcd_goto@x,c
  3082  007888  0E00               	movlw	0
  3083  00788A  6E07               	movwf	lcd_goto@y+1,c
  3084  00788C  0E01               	movlw	1
  3085  00788E  6E06               	movwf	lcd_goto@y,c
  3086  007890  ECD3  F02E         	call	_lcd_goto	;wreg free
  3087                           
  3088                           ;MAIN.c: 407: Lcd_Chr_CP(A);
  3089  007894  0100               	movlb	0	; () banked
  3090  007896  51CD               	movf	main@A& (0+255),w,b
  3091  007898  EC44  F034         	call	_Lcd_Chr_CP
  3092                           
  3093                           ;MAIN.c: 408: Lcd_Out2(2,1,"C: ");
  3094  00789C  0E01               	movlw	1
  3095  00789E  6E04               	movwf	Lcd_Out2@x,c
  3096  0078A0  0E7F               	movlw	high STR_71
  3097  0078A2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3098  0078A4  0EFA               	movlw	low STR_71
  3099  0078A6  6E05               	movwf	Lcd_Out2@buffer,c
  3100  0078A8  0E02               	movlw	2
  3101  0078AA  EC88  F02F         	call	_Lcd_Out2
  3102                           
  3103                           ;MAIN.c: 409: Lcd_Out2(2,7,"%");
  3104  0078AE  0E07               	movlw	7
  3105  0078B0  6E04               	movwf	Lcd_Out2@x,c
  3106  0078B2  0E7F               	movlw	high (STR_55+4)
  3107  0078B4  6E06               	movwf	Lcd_Out2@buffer+1,c
  3108  0078B6  0E97               	movlw	low (STR_55+4)
  3109  0078B8  6E05               	movwf	Lcd_Out2@buffer,c
  3110  0078BA  0E02               	movlw	2
  3111  0078BC  EC88  F02F         	call	_Lcd_Out2
  3112                           
  3113                           ;MAIN.c: 410: cantidad = Conv_Entero(Z,cadena);
  3114  0078C0  0100               	movlb	0	; () banked
  3115  0078C2  C0CB  F00F         	movff	main@Z,Conv_Entero@numero
  3116  0078C6  0100               	movlb	0	; () banked
  3117  0078C8  C0CC  F010         	movff	main@Z+1,Conv_Entero@numero+1
  3118  0078CC  6A11               	clrf	Conv_Entero@numero+2,c
  3119  0078CE  6A12               	clrf	Conv_Entero@numero+3,c
  3120  0078D0  0100               	movlb	0	; () banked
  3121  0078D2  0E00               	movlw	high main@cadena
  3122  0078D4  6E14               	movwf	Conv_Entero@conv+1,c
  3123  0078D6  0100               	movlb	0	; () banked
  3124  0078D8  0EB0               	movlw	low main@cadena
  3125  0078DA  6E13               	movwf	Conv_Entero@conv,c
  3126  0078DC  ECDC  F034         	call	_Conv_Entero	;wreg free
  3127  0078E0  500F               	movf	?_Conv_Entero,w,c
  3128  0078E2  0100               	movlb	0	; () banked
  3129  0078E4  6FC7               	movwf	main@cantidad& (0+255),b
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;MAIN.c: 411: Lcd_Out(2,4,cadena);
  3133  0078E6  0E04               	movlw	4
  3134  0078E8  6E04               	movwf	Lcd_Out@x,c
  3135  0078EA  0100               	movlb	0	; () banked
  3136  0078EC  0E00               	movlw	high main@cadena
  3137  0078EE  6E06               	movwf	Lcd_Out@buffer+1,c
  3138  0078F0  0100               	movlb	0	; () banked
  3139  0078F2  0EB0               	movlw	low main@cadena
  3140  0078F4  6E05               	movwf	Lcd_Out@buffer,c
  3141  0078F6  0E02               	movlw	2
  3142  0078F8  EC25  F02F         	call	_Lcd_Out
  3143  0078FC                     l3192:
  3144                           
  3145                           ;MAIN.c: 415: if(PORTAbits.RA0==1){
  3146  0078FC  A080               	btfss	3968,0,c	;volatile
  3147  0078FE  D006               	goto	l3196
  3148                           
  3149                           ;MAIN.c: 416: p=1;
  3150  007900  0E00               	movlw	0
  3151  007902  0100               	movlb	0	; () banked
  3152  007904  6FD5               	movwf	(_p+1)& (0+255),b
  3153  007906  0E01               	movlw	1
  3154  007908  0100               	movlb	0	; () banked
  3155  00790A  6FD4               	movwf	_p& (0+255),b
  3156  00790C                     l3196:
  3157                           
  3158                           ;MAIN.c: 417: }
  3159                           ;MAIN.c: 418: }while(p==0);
  3160  00790C  0100               	movlb	0	; () banked
  3161  00790E  51D5               	movf	(_p+1)& (0+255),w,b
  3162  007910  11D4               	iorwf	_p& (0+255),w,b
  3163  007912  B4D8               	btfsc	status,2,c
  3164  007914  D7F3               	goto	l3192
  3165  007916                     l169:
  3166                           
  3167                           ;MAIN.c: 419: }
  3168                           ;MAIN.c: 420: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  3169  007916  B080               	btfsc	3968,0,c	;volatile
  3170  007918  A280               	btfss	3968,1,c	;volatile
  3171  00791A  D006               	goto	l3202
  3172                           
  3173                           ;MAIN.c: 421: w=1;
  3174  00791C  0E00               	movlw	0
  3175  00791E  0100               	movlb	0	; () banked
  3176  007920  6FDD               	movwf	(_w+1)& (0+255),b
  3177  007922  0E01               	movlw	1
  3178  007924  0100               	movlb	0	; () banked
  3179  007926  6FDC               	movwf	_w& (0+255),b
  3180  007928                     l3202:
  3181                           
  3182                           ;MAIN.c: 422: }
  3183                           ;MAIN.c: 424: if(PORTAbits.RA0==1)
  3184  007928  A080               	btfss	3968,0,c	;volatile
  3185  00792A  D00B               	goto	l3208
  3186                           
  3187                           ;MAIN.c: 425: {
  3188                           ;MAIN.c: 426: B++;
  3189  00792C  0100               	movlb	0	; () banked
  3190  00792E  4BCE               	infsnz	_B& (0+255),f,b
  3191  007930  2BCF               	incf	(_B+1)& (0+255),f,b
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;MAIN.c: 427: _delay((unsigned long)((10)*(8000000/4000.0)));
  3195  007932  0E1A               	movlw	26
  3196  007934  6E3D               	movwf	??_main& (0+255),c
  3197  007936  0EF8               	movlw	248
  3198  007938                     u3377:
  3199  007938  2EE8               	decfsz	wreg,f,c
  3200  00793A  D7FE               	goto	u3377
  3201  00793C  2E3D               	decfsz	??_main& (0+255),f,c
  3202  00793E  D7FC               	goto	u3377
  3203  007940  D000               	nop2	
  3204  007942                     l3208:
  3205                           
  3206                           ;MAIN.c: 428: }
  3207                           ;MAIN.c: 430: if(PORTAbits.RA1==1)
  3208  007942  A280               	btfss	3968,1,c	;volatile
  3209  007944  D00C               	goto	l175
  3210                           
  3211                           ;MAIN.c: 431: {
  3212                           ;MAIN.c: 432: B--;
  3213  007946  0100               	movlb	0	; () banked
  3214  007948  07CE               	decf	_B& (0+255),f,b
  3215  00794A  A0D8               	btfss	status,0,c
  3216  00794C  07CF               	decf	(_B+1)& (0+255),f,b
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;MAIN.c: 433: _delay((unsigned long)((10)*(8000000/4000.0)));
  3220  00794E  0E1A               	movlw	26
  3221  007950  6E3D               	movwf	??_main& (0+255),c
  3222  007952  0EF8               	movlw	248
  3223  007954                     u3387:
  3224  007954  2EE8               	decfsz	wreg,f,c
  3225  007956  D7FE               	goto	u3387
  3226  007958  2E3D               	decfsz	??_main& (0+255),f,c
  3227  00795A  D7FC               	goto	u3387
  3228  00795C  D000               	nop2	
  3229  00795E                     l175:
  3230                           
  3231                           ;MAIN.c: 434: }
  3232                           ;MAIN.c: 435: if(B>3){
  3233  00795E  0E04               	movlw	4
  3234  007960  0100               	movlb	0	; () banked
  3235  007962  5DCE               	subwf	_B& (0+255),w,b
  3236  007964  0E00               	movlw	0
  3237  007966  0100               	movlb	0	; () banked
  3238  007968  59CF               	subwfb	(_B+1)& (0+255),w,b
  3239  00796A  A0D8               	btfss	status,0,c
  3240  00796C  D006               	goto	l3218
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;MAIN.c: 436: B=1;
  3244  00796E  0E00               	movlw	0
  3245  007970  0100               	movlb	0	; () banked
  3246  007972  6FCF               	movwf	(_B+1)& (0+255),b
  3247  007974  0E01               	movlw	1
  3248  007976  0100               	movlb	0	; () banked
  3249  007978  6FCE               	movwf	_B& (0+255),b
  3250  00797A                     l3218:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;MAIN.c: 441: }
  3254                           ;MAIN.c: 442: } while(w==0);
  3255  00797A  0100               	movlb	0	; () banked
  3256  00797C  51DD               	movf	(_w+1)& (0+255),w,b
  3257  00797E  11DC               	iorwf	_w& (0+255),w,b
  3258  007980  B4D8               	btfsc	status,2,c
  3259  007982  EF6C  F037         	goto	l2838
  3260  007986                     l3220:
  3261                           
  3262                           ;MAIN.c: 443: }
  3263                           ;MAIN.c: 449: }
  3264                           ;MAIN.c: 451: if(B==2){
  3265  007986  0100               	movlb	0	; () banked
  3266  007988  51CE               	movf	_B& (0+255),w,b
  3267  00798A  0A02               	xorlw	2
  3268  00798C  11CF               	iorwf	(_B+1)& (0+255),w,b
  3269  00798E  A4D8               	btfss	status,2,c
  3270  007990  D12E               	goto	l3338
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;MAIN.c: 452: Lcd_Init();
  3274  007992  EC22  F033         	call	_Lcd_Init	;wreg free
  3275                           
  3276                           ;MAIN.c: 453: Lcd_Cmd(1);
  3277  007996  0E01               	movlw	1
  3278  007998  ECB0  F033         	call	_Lcd_Cmd
  3279                           
  3280                           ;MAIN.c: 454: Lcd_Cmd(12);
  3281  00799C  0E0C               	movlw	12
  3282  00799E  ECB0  F033         	call	_Lcd_Cmd
  3283                           
  3284                           ;MAIN.c: 455: Lcd_Out2(1,1,"   PWM");
  3285  0079A2  0E01               	movlw	1
  3286  0079A4  6E04               	movwf	Lcd_Out2@x,c
  3287  0079A6  0E7F               	movlw	high STR_73
  3288  0079A8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3289  0079AA  0E85               	movlw	low STR_73
  3290  0079AC  6E05               	movwf	Lcd_Out2@buffer,c
  3291  0079AE  0E01               	movlw	1
  3292  0079B0  EC88  F02F         	call	_Lcd_Out2
  3293                           
  3294                           ;MAIN.c: 456: Lcd_Out2(2,1,"=> Senoidal");
  3295  0079B4  0E01               	movlw	1
  3296  0079B6  6E04               	movwf	Lcd_Out2@x,c
  3297  0079B8  0E7E               	movlw	high STR_74
  3298  0079BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3299  0079BC  0EB9               	movlw	low STR_74
  3300  0079BE  6E05               	movwf	Lcd_Out2@buffer,c
  3301  0079C0  0E02               	movlw	2
  3302  0079C2  EC88  F02F         	call	_Lcd_Out2
  3303                           
  3304                           ;MAIN.c: 457: tm_1s();
  3305  0079C6  EC9F  F02E         	call	_tm_1s	;wreg free
  3306                           
  3307                           ;MAIN.c: 459: if(PORTAbits.RA2==1){
  3308  0079CA  A480               	btfss	3968,2,c	;volatile
  3309  0079CC  D110               	goto	l3338
  3310                           
  3311                           ;MAIN.c: 460: w=0;
  3312  0079CE  0E00               	movlw	0
  3313  0079D0  0100               	movlb	0	; () banked
  3314  0079D2  6FDD               	movwf	(_w+1)& (0+255),b
  3315  0079D4  0E00               	movlw	0
  3316  0079D6  0100               	movlb	0	; () banked
  3317  0079D8  6FDC               	movwf	_w& (0+255),b
  3318  0079DA                     l3232:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;MAIN.c: 463: if(B==0){
  3322  0079DA  0100               	movlb	0	; () banked
  3323  0079DC  51CF               	movf	(_B+1)& (0+255),w,b
  3324  0079DE  11CE               	iorwf	_B& (0+255),w,b
  3325  0079E0  A4D8               	btfss	status,2,c
  3326  0079E2  D044               	goto	l3260
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;MAIN.c: 464: Lcd_Init();
  3330  0079E4  EC22  F033         	call	_Lcd_Init	;wreg free
  3331                           
  3332                           ;MAIN.c: 465: Lcd_Cmd(1);
  3333  0079E8  0E01               	movlw	1
  3334  0079EA  ECB0  F033         	call	_Lcd_Cmd
  3335                           
  3336                           ;MAIN.c: 466: Lcd_Cmd(12);
  3337  0079EE  0E0C               	movlw	12
  3338  0079F0  ECB0  F033         	call	_Lcd_Cmd
  3339                           
  3340                           ;MAIN.c: 467: Lcd_Out2(1,1,"=> Sin 1");
  3341  0079F4  0E01               	movlw	1
  3342  0079F6  6E04               	movwf	Lcd_Out2@x,c
  3343  0079F8  0E7F               	movlw	high STR_75
  3344  0079FA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3345  0079FC  0E46               	movlw	low STR_75
  3346  0079FE  6E05               	movwf	Lcd_Out2@buffer,c
  3347  007A00  0E01               	movlw	1
  3348  007A02  EC88  F02F         	call	_Lcd_Out2
  3349                           
  3350                           ;MAIN.c: 468: Lcd_Out2(2,1,"   Sin 2");
  3351  007A06  0E01               	movlw	1
  3352  007A08  6E04               	movwf	Lcd_Out2@x,c
  3353  007A0A  0E7F               	movlw	high STR_76
  3354  007A0C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3355  007A0E  0E4F               	movlw	low STR_76
  3356  007A10  6E05               	movwf	Lcd_Out2@buffer,c
  3357  007A12  0E02               	movlw	2
  3358  007A14  EC88  F02F         	call	_Lcd_Out2
  3359                           
  3360                           ;MAIN.c: 469: tm_1s();
  3361  007A18  EC9F  F02E         	call	_tm_1s	;wreg free
  3362                           
  3363                           ;MAIN.c: 470: if(PORTAbits.RA2==1){
  3364  007A1C  A480               	btfss	3968,2,c	;volatile
  3365  007A1E  D026               	goto	l3260
  3366                           
  3367                           ;MAIN.c: 471: q=0;
  3368  007A20  0E00               	movlw	0
  3369  007A22  0100               	movlb	0	; () banked
  3370  007A24  6FD7               	movwf	(_q+1)& (0+255),b
  3371  007A26  0E00               	movlw	0
  3372  007A28  0100               	movlb	0	; () banked
  3373  007A2A  6FD6               	movwf	_q& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;MAIN.c: 472: Lcd_Init();
  3377  007A2C  EC22  F033         	call	_Lcd_Init	;wreg free
  3378                           
  3379                           ;MAIN.c: 473: Lcd_Cmd(1);
  3380  007A30  0E01               	movlw	1
  3381  007A32  ECB0  F033         	call	_Lcd_Cmd
  3382                           
  3383                           ;MAIN.c: 474: Lcd_Cmd(12);
  3384  007A36  0E0C               	movlw	12
  3385  007A38  ECB0  F033         	call	_Lcd_Cmd
  3386                           
  3387                           ;MAIN.c: 475: Lcd_Out2(1,1," Sin 1");
  3388  007A3C  0E01               	movlw	1
  3389  007A3E  6E04               	movwf	Lcd_Out2@x,c
  3390  007A40  0E7F               	movlw	high (STR_78+2)
  3391  007A42  6E06               	movwf	Lcd_Out2@buffer+1,c
  3392  007A44  0E3F               	movlw	low (STR_78+2)
  3393  007A46  6E05               	movwf	Lcd_Out2@buffer,c
  3394  007A48  0E01               	movlw	1
  3395  007A4A  EC88  F02F         	call	_Lcd_Out2
  3396  007A4E                     l3252:
  3397                           
  3398                           ;MAIN.c: 477: SENO_GENERAR_1();
  3399  007A4E  ECBC  F02F         	call	_SENO_GENERAR_1	;wreg free
  3400                           
  3401                           ;MAIN.c: 478: if(PORTAbits.RA1==1){
  3402  007A52  A280               	btfss	3968,1,c	;volatile
  3403  007A54  D006               	goto	l3258
  3404                           
  3405                           ;MAIN.c: 479: q=1;
  3406  007A56  0E00               	movlw	0
  3407  007A58  0100               	movlb	0	; () banked
  3408  007A5A  6FD7               	movwf	(_q+1)& (0+255),b
  3409  007A5C  0E01               	movlw	1
  3410  007A5E  0100               	movlb	0	; () banked
  3411  007A60  6FD6               	movwf	_q& (0+255),b
  3412  007A62                     l3258:
  3413                           
  3414                           ;MAIN.c: 480: }
  3415                           ;MAIN.c: 481: }while(q==0);
  3416  007A62  0100               	movlb	0	; () banked
  3417  007A64  51D7               	movf	(_q+1)& (0+255),w,b
  3418  007A66  11D6               	iorwf	_q& (0+255),w,b
  3419  007A68  B4D8               	btfsc	status,2,c
  3420  007A6A  D7F1               	goto	l3252
  3421  007A6C                     l3260:
  3422                           
  3423                           ;MAIN.c: 482: }
  3424                           ;MAIN.c: 483: }
  3425                           ;MAIN.c: 485: if(B==1){
  3426  007A6C  0100               	movlb	0	; () banked
  3427  007A6E  05CE               	decf	_B& (0+255),w,b
  3428  007A70  11CF               	iorwf	(_B+1)& (0+255),w,b
  3429  007A72  A4D8               	btfss	status,2,c
  3430  007A74  D044               	goto	l3288
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;MAIN.c: 486: Lcd_Init();
  3434  007A76  EC22  F033         	call	_Lcd_Init	;wreg free
  3435                           
  3436                           ;MAIN.c: 487: Lcd_Cmd(1);
  3437  007A7A  0E01               	movlw	1
  3438  007A7C  ECB0  F033         	call	_Lcd_Cmd
  3439                           
  3440                           ;MAIN.c: 488: Lcd_Cmd(12);
  3441  007A80  0E0C               	movlw	12
  3442  007A82  ECB0  F033         	call	_Lcd_Cmd
  3443                           
  3444                           ;MAIN.c: 489: Lcd_Out2(1,1,"   Sin 1");
  3445  007A86  0E01               	movlw	1
  3446  007A88  6E04               	movwf	Lcd_Out2@x,c
  3447  007A8A  0E7F               	movlw	high STR_78
  3448  007A8C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3449  007A8E  0E3D               	movlw	low STR_78
  3450  007A90  6E05               	movwf	Lcd_Out2@buffer,c
  3451  007A92  0E01               	movlw	1
  3452  007A94  EC88  F02F         	call	_Lcd_Out2
  3453                           
  3454                           ;MAIN.c: 490: Lcd_Out2(2,1,"=> Sin 2");
  3455  007A98  0E01               	movlw	1
  3456  007A9A  6E04               	movwf	Lcd_Out2@x,c
  3457  007A9C  0E7F               	movlw	high STR_79
  3458  007A9E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3459  007AA0  0E58               	movlw	low STR_79
  3460  007AA2  6E05               	movwf	Lcd_Out2@buffer,c
  3461  007AA4  0E02               	movlw	2
  3462  007AA6  EC88  F02F         	call	_Lcd_Out2
  3463                           
  3464                           ;MAIN.c: 491: tm_1s();
  3465  007AAA  EC9F  F02E         	call	_tm_1s	;wreg free
  3466                           
  3467                           ;MAIN.c: 492: if(PORTAbits.RA2==1){
  3468  007AAE  A480               	btfss	3968,2,c	;volatile
  3469  007AB0  D026               	goto	l3288
  3470                           
  3471                           ;MAIN.c: 493: q=0;
  3472  007AB2  0E00               	movlw	0
  3473  007AB4  0100               	movlb	0	; () banked
  3474  007AB6  6FD7               	movwf	(_q+1)& (0+255),b
  3475  007AB8  0E00               	movlw	0
  3476  007ABA  0100               	movlb	0	; () banked
  3477  007ABC  6FD6               	movwf	_q& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;MAIN.c: 494: Lcd_Init();
  3481  007ABE  EC22  F033         	call	_Lcd_Init	;wreg free
  3482                           
  3483                           ;MAIN.c: 495: Lcd_Cmd(1);
  3484  007AC2  0E01               	movlw	1
  3485  007AC4  ECB0  F033         	call	_Lcd_Cmd
  3486                           
  3487                           ;MAIN.c: 496: Lcd_Cmd(12);
  3488  007AC8  0E0C               	movlw	12
  3489  007ACA  ECB0  F033         	call	_Lcd_Cmd
  3490                           
  3491                           ;MAIN.c: 497: Lcd_Out2(1,1," Sin 2");
  3492  007ACE  0E01               	movlw	1
  3493  007AD0  6E04               	movwf	Lcd_Out2@x,c
  3494  007AD2  0E7F               	movlw	high (STR_76+2)
  3495  007AD4  6E06               	movwf	Lcd_Out2@buffer+1,c
  3496  007AD6  0E51               	movlw	low (STR_76+2)
  3497  007AD8  6E05               	movwf	Lcd_Out2@buffer,c
  3498  007ADA  0E01               	movlw	1
  3499  007ADC  EC88  F02F         	call	_Lcd_Out2
  3500  007AE0                     l3280:
  3501                           
  3502                           ;MAIN.c: 499: SENO_GENERAR_2();
  3503  007AE0  ECF1  F02F         	call	_SENO_GENERAR_2	;wreg free
  3504                           
  3505                           ;MAIN.c: 500: if(PORTAbits.RA1==1){
  3506  007AE4  A280               	btfss	3968,1,c	;volatile
  3507  007AE6  D006               	goto	l3286
  3508                           
  3509                           ;MAIN.c: 501: q=1;
  3510  007AE8  0E00               	movlw	0
  3511  007AEA  0100               	movlb	0	; () banked
  3512  007AEC  6FD7               	movwf	(_q+1)& (0+255),b
  3513  007AEE  0E01               	movlw	1
  3514  007AF0  0100               	movlb	0	; () banked
  3515  007AF2  6FD6               	movwf	_q& (0+255),b
  3516  007AF4                     l3286:
  3517                           
  3518                           ;MAIN.c: 502: }
  3519                           ;MAIN.c: 503: }while(q==0);
  3520  007AF4  0100               	movlb	0	; () banked
  3521  007AF6  51D7               	movf	(_q+1)& (0+255),w,b
  3522  007AF8  11D6               	iorwf	_q& (0+255),w,b
  3523  007AFA  B4D8               	btfsc	status,2,c
  3524  007AFC  D7F1               	goto	l3280
  3525  007AFE                     l3288:
  3526                           
  3527                           ;MAIN.c: 504: }
  3528                           ;MAIN.c: 505: }
  3529                           ;MAIN.c: 507: if(B==2){
  3530  007AFE  0100               	movlb	0	; () banked
  3531  007B00  51CE               	movf	_B& (0+255),w,b
  3532  007B02  0A02               	xorlw	2
  3533  007B04  11CF               	iorwf	(_B+1)& (0+255),w,b
  3534  007B06  A4D8               	btfss	status,2,c
  3535  007B08  D03B               	goto	l192
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;MAIN.c: 508: Lcd_Init();
  3539  007B0A  EC22  F033         	call	_Lcd_Init	;wreg free
  3540                           
  3541                           ;MAIN.c: 509: Lcd_Cmd(1);
  3542  007B0E  0E01               	movlw	1
  3543  007B10  ECB0  F033         	call	_Lcd_Cmd
  3544                           
  3545                           ;MAIN.c: 510: Lcd_Cmd(12);
  3546  007B14  0E0C               	movlw	12
  3547  007B16  ECB0  F033         	call	_Lcd_Cmd
  3548                           
  3549                           ;MAIN.c: 511: Lcd_Out2(1,1,"=> Sin 3");
  3550  007B1A  0E01               	movlw	1
  3551  007B1C  6E04               	movwf	Lcd_Out2@x,c
  3552  007B1E  0E7F               	movlw	high STR_81
  3553  007B20  6E06               	movwf	Lcd_Out2@buffer+1,c
  3554  007B22  0E61               	movlw	low STR_81
  3555  007B24  6E05               	movwf	Lcd_Out2@buffer,c
  3556  007B26  0E01               	movlw	1
  3557  007B28  EC88  F02F         	call	_Lcd_Out2
  3558                           
  3559                           ;MAIN.c: 512: tm_1s();
  3560  007B2C  EC9F  F02E         	call	_tm_1s	;wreg free
  3561                           
  3562                           ;MAIN.c: 513: if(PORTAbits.RA2==1){
  3563  007B30  A480               	btfss	3968,2,c	;volatile
  3564  007B32  D026               	goto	l192
  3565                           
  3566                           ;MAIN.c: 514: q=0;
  3567  007B34  0E00               	movlw	0
  3568  007B36  0100               	movlb	0	; () banked
  3569  007B38  6FD7               	movwf	(_q+1)& (0+255),b
  3570  007B3A  0E00               	movlw	0
  3571  007B3C  0100               	movlb	0	; () banked
  3572  007B3E  6FD6               	movwf	_q& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;MAIN.c: 515: Lcd_Init();
  3576  007B40  EC22  F033         	call	_Lcd_Init	;wreg free
  3577                           
  3578                           ;MAIN.c: 516: Lcd_Cmd(1);
  3579  007B44  0E01               	movlw	1
  3580  007B46  ECB0  F033         	call	_Lcd_Cmd
  3581                           
  3582                           ;MAIN.c: 517: Lcd_Cmd(12);
  3583  007B4A  0E0C               	movlw	12
  3584  007B4C  ECB0  F033         	call	_Lcd_Cmd
  3585                           
  3586                           ;MAIN.c: 518: Lcd_Out2(1,1," Sin 3");
  3587  007B50  0E01               	movlw	1
  3588  007B52  6E04               	movwf	Lcd_Out2@x,c
  3589  007B54  0E7F               	movlw	high (STR_81+2)
  3590  007B56  6E06               	movwf	Lcd_Out2@buffer+1,c
  3591  007B58  0E63               	movlw	low (STR_81+2)
  3592  007B5A  6E05               	movwf	Lcd_Out2@buffer,c
  3593  007B5C  0E01               	movlw	1
  3594  007B5E  EC88  F02F         	call	_Lcd_Out2
  3595  007B62                     l3308:
  3596                           
  3597                           ;MAIN.c: 520: SENO_GENERAR_3();
  3598  007B62  EC26  F030         	call	_SENO_GENERAR_3	;wreg free
  3599                           
  3600                           ;MAIN.c: 521: if(PORTAbits.RA1==1){
  3601  007B66  A280               	btfss	3968,1,c	;volatile
  3602  007B68  D006               	goto	l3314
  3603                           
  3604                           ;MAIN.c: 522: q=1;
  3605  007B6A  0E00               	movlw	0
  3606  007B6C  0100               	movlb	0	; () banked
  3607  007B6E  6FD7               	movwf	(_q+1)& (0+255),b
  3608  007B70  0E01               	movlw	1
  3609  007B72  0100               	movlb	0	; () banked
  3610  007B74  6FD6               	movwf	_q& (0+255),b
  3611  007B76                     l3314:
  3612                           
  3613                           ;MAIN.c: 523: }
  3614                           ;MAIN.c: 524: }while(q==0);
  3615  007B76  0100               	movlb	0	; () banked
  3616  007B78  51D7               	movf	(_q+1)& (0+255),w,b
  3617  007B7A  11D6               	iorwf	_q& (0+255),w,b
  3618  007B7C  B4D8               	btfsc	status,2,c
  3619  007B7E  D7F1               	goto	l3308
  3620  007B80                     l192:
  3621                           
  3622                           ;MAIN.c: 525: }
  3623                           ;MAIN.c: 526: }
  3624                           ;MAIN.c: 528: if(PORTAbits.RA0==1)
  3625  007B80  A080               	btfss	3968,0,c	;volatile
  3626  007B82  D00B               	goto	l3320
  3627                           
  3628                           ;MAIN.c: 529: {
  3629                           ;MAIN.c: 530: B++;
  3630  007B84  0100               	movlb	0	; () banked
  3631  007B86  4BCE               	infsnz	_B& (0+255),f,b
  3632  007B88  2BCF               	incf	(_B+1)& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;MAIN.c: 531: _delay((unsigned long)((10)*(8000000/4000.0)));
  3636  007B8A  0E1A               	movlw	26
  3637  007B8C  6E3D               	movwf	??_main& (0+255),c
  3638  007B8E  0EF8               	movlw	248
  3639  007B90                     u3397:
  3640  007B90  2EE8               	decfsz	wreg,f,c
  3641  007B92  D7FE               	goto	u3397
  3642  007B94  2E3D               	decfsz	??_main& (0+255),f,c
  3643  007B96  D7FC               	goto	u3397
  3644  007B98  D000               	nop2	
  3645  007B9A                     l3320:
  3646                           
  3647                           ;MAIN.c: 532: }
  3648                           ;MAIN.c: 534: if(PORTAbits.RA1==1)
  3649  007B9A  A280               	btfss	3968,1,c	;volatile
  3650  007B9C  D00C               	goto	l198
  3651                           
  3652                           ;MAIN.c: 535: {
  3653                           ;MAIN.c: 536: B--;
  3654  007B9E  0100               	movlb	0	; () banked
  3655  007BA0  07CE               	decf	_B& (0+255),f,b
  3656  007BA2  A0D8               	btfss	status,0,c
  3657  007BA4  07CF               	decf	(_B+1)& (0+255),f,b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;MAIN.c: 537: _delay((unsigned long)((10)*(8000000/4000.0)));
  3661  007BA6  0E1A               	movlw	26
  3662  007BA8  6E3D               	movwf	??_main& (0+255),c
  3663  007BAA  0EF8               	movlw	248
  3664  007BAC                     u3407:
  3665  007BAC  2EE8               	decfsz	wreg,f,c
  3666  007BAE  D7FE               	goto	u3407
  3667  007BB0  2E3D               	decfsz	??_main& (0+255),f,c
  3668  007BB2  D7FC               	goto	u3407
  3669  007BB4  D000               	nop2	
  3670  007BB6                     l198:
  3671                           
  3672                           ;MAIN.c: 538: }
  3673                           ;MAIN.c: 539: if(B>2){
  3674  007BB6  0E03               	movlw	3
  3675  007BB8  0100               	movlb	0	; () banked
  3676  007BBA  5DCE               	subwf	_B& (0+255),w,b
  3677  007BBC  0E00               	movlw	0
  3678  007BBE  0100               	movlb	0	; () banked
  3679  007BC0  59CF               	subwfb	(_B+1)& (0+255),w,b
  3680  007BC2  A0D8               	btfss	status,0,c
  3681  007BC4  D006               	goto	l3330
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;MAIN.c: 540: B=0;
  3685  007BC6  0E00               	movlw	0
  3686  007BC8  0100               	movlb	0	; () banked
  3687  007BCA  6FCF               	movwf	(_B+1)& (0+255),b
  3688  007BCC  0E00               	movlw	0
  3689  007BCE  0100               	movlb	0	; () banked
  3690  007BD0  6FCE               	movwf	_B& (0+255),b
  3691  007BD2                     l3330:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;MAIN.c: 545: }
  3695                           ;MAIN.c: 546: if(PORTAbits.RA1==1 && PORTAbits.RA0==1 ){
  3696  007BD2  B280               	btfsc	3968,1,c	;volatile
  3697                           
  3698                           ; BSR set to: 0
  3699  007BD4  A080               	btfss	3968,0,c	;volatile
  3700  007BD6  D006               	goto	l3336
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;MAIN.c: 547: w=1;
  3704  007BD8  0E00               	movlw	0
  3705  007BDA  0100               	movlb	0	; () banked
  3706  007BDC  6FDD               	movwf	(_w+1)& (0+255),b
  3707  007BDE  0E01               	movlw	1
  3708  007BE0  0100               	movlb	0	; () banked
  3709  007BE2  6FDC               	movwf	_w& (0+255),b
  3710  007BE4                     l3336:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;MAIN.c: 548: }
  3714                           ;MAIN.c: 549: }while(w==0);
  3715  007BE4  0100               	movlb	0	; () banked
  3716  007BE6  51DD               	movf	(_w+1)& (0+255),w,b
  3717  007BE8  11DC               	iorwf	_w& (0+255),w,b
  3718  007BEA  B4D8               	btfsc	status,2,c
  3719  007BEC  D6F6               	goto	l3232
  3720  007BEE                     l3338:
  3721                           
  3722                           ;MAIN.c: 551: }
  3723                           ;MAIN.c: 554: }
  3724                           ;MAIN.c: 556: if(B==3){
  3725  007BEE  0100               	movlb	0	; () banked
  3726  007BF0  51CE               	movf	_B& (0+255),w,b
  3727  007BF2  0A03               	xorlw	3
  3728  007BF4  11CF               	iorwf	(_B+1)& (0+255),w,b
  3729  007BF6  A4D8               	btfss	status,2,c
  3730  007BF8  D12B               	goto	l3464
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;MAIN.c: 557: Lcd_Init();
  3734  007BFA  EC22  F033         	call	_Lcd_Init	;wreg free
  3735                           
  3736                           ;MAIN.c: 558: Lcd_Cmd(1);
  3737  007BFE  0E01               	movlw	1
  3738  007C00  ECB0  F033         	call	_Lcd_Cmd
  3739                           
  3740                           ;MAIN.c: 559: Lcd_Cmd(12);
  3741  007C04  0E0C               	movlw	12
  3742  007C06  ECB0  F033         	call	_Lcd_Cmd
  3743                           
  3744                           ;MAIN.c: 560: Lcd_Out2(1,1,"=> Triangular");
  3745  007C0A  0E01               	movlw	1
  3746  007C0C  6E04               	movwf	Lcd_Out2@x,c
  3747  007C0E  0E7E               	movlw	high STR_83
  3748  007C10  6E06               	movwf	Lcd_Out2@buffer+1,c
  3749  007C12  0E9F               	movlw	low STR_83
  3750  007C14  6E05               	movwf	Lcd_Out2@buffer,c
  3751  007C16  0E01               	movlw	1
  3752  007C18  EC88  F02F         	call	_Lcd_Out2
  3753                           
  3754                           ;MAIN.c: 561: tm_1s();
  3755  007C1C  EC9F  F02E         	call	_tm_1s	;wreg free
  3756                           
  3757                           ;MAIN.c: 564: if(PORTAbits.RA2==1){
  3758  007C20  A480               	btfss	3968,2,c	;volatile
  3759  007C22  D116               	goto	l3464
  3760                           
  3761                           ;MAIN.c: 565: w=0;
  3762  007C24  0E00               	movlw	0
  3763  007C26  0100               	movlb	0	; () banked
  3764  007C28  6FDD               	movwf	(_w+1)& (0+255),b
  3765  007C2A  0E00               	movlw	0
  3766  007C2C  0100               	movlb	0	; () banked
  3767  007C2E  6FDC               	movwf	_w& (0+255),b
  3768  007C30                     l3350:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;MAIN.c: 568: if(B==0){
  3772  007C30  0100               	movlb	0	; () banked
  3773  007C32  51CF               	movf	(_B+1)& (0+255),w,b
  3774  007C34  11CE               	iorwf	_B& (0+255),w,b
  3775  007C36  A4D8               	btfss	status,2,c
  3776  007C38  D04A               	goto	l3386
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;MAIN.c: 569: q=0;
  3780  007C3A  0E00               	movlw	0
  3781  007C3C  0100               	movlb	0	; () banked
  3782  007C3E  6FD7               	movwf	(_q+1)& (0+255),b
  3783  007C40  0E00               	movlw	0
  3784  007C42  0100               	movlb	0	; () banked
  3785  007C44  6FD6               	movwf	_q& (0+255),b
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;MAIN.c: 570: Lcd_Init();
  3789  007C46  EC22  F033         	call	_Lcd_Init	;wreg free
  3790                           
  3791                           ;MAIN.c: 571: Lcd_Cmd(1);
  3792  007C4A  0E01               	movlw	1
  3793  007C4C  ECB0  F033         	call	_Lcd_Cmd
  3794                           
  3795                           ;MAIN.c: 572: Lcd_Cmd(12);
  3796  007C50  0E0C               	movlw	12
  3797  007C52  ECB0  F033         	call	_Lcd_Cmd
  3798                           
  3799                           ;MAIN.c: 573: Lcd_Out2(1,1,"=> Trin 1");
  3800  007C56  0E01               	movlw	1
  3801  007C58  6E04               	movwf	Lcd_Out2@x,c
  3802  007C5A  0E7F               	movlw	high STR_84
  3803  007C5C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3804  007C5E  0E15               	movlw	low STR_84
  3805  007C60  6E05               	movwf	Lcd_Out2@buffer,c
  3806  007C62  0E01               	movlw	1
  3807  007C64  EC88  F02F         	call	_Lcd_Out2
  3808                           
  3809                           ;MAIN.c: 574: Lcd_Out2(2,1,"   Trin 2");
  3810  007C68  0E01               	movlw	1
  3811  007C6A  6E04               	movwf	Lcd_Out2@x,c
  3812  007C6C  0E7F               	movlw	high STR_85
  3813  007C6E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3814  007C70  0E1F               	movlw	low STR_85
  3815  007C72  6E05               	movwf	Lcd_Out2@buffer,c
  3816  007C74  0E02               	movlw	2
  3817  007C76  EC88  F02F         	call	_Lcd_Out2
  3818                           
  3819                           ;MAIN.c: 575: tm_1s();
  3820  007C7A  EC9F  F02E         	call	_tm_1s	;wreg free
  3821                           
  3822                           ;MAIN.c: 576: if(PORTAbits.RA2==1){
  3823  007C7E  A480               	btfss	3968,2,c	;volatile
  3824  007C80  D026               	goto	l3386
  3825                           
  3826                           ;MAIN.c: 577: q=0;
  3827  007C82  0E00               	movlw	0
  3828  007C84  0100               	movlb	0	; () banked
  3829  007C86  6FD7               	movwf	(_q+1)& (0+255),b
  3830  007C88  0E00               	movlw	0
  3831  007C8A  0100               	movlb	0	; () banked
  3832  007C8C  6FD6               	movwf	_q& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;MAIN.c: 578: Lcd_Init();
  3836  007C8E  EC22  F033         	call	_Lcd_Init	;wreg free
  3837                           
  3838                           ;MAIN.c: 579: Lcd_Cmd(1);
  3839  007C92  0E01               	movlw	1
  3840  007C94  ECB0  F033         	call	_Lcd_Cmd
  3841                           
  3842                           ;MAIN.c: 580: Lcd_Cmd(12);
  3843  007C98  0E0C               	movlw	12
  3844  007C9A  ECB0  F033         	call	_Lcd_Cmd
  3845                           
  3846                           ;MAIN.c: 581: Lcd_Out2(1,1," Trin 1");
  3847  007C9E  0E01               	movlw	1
  3848  007CA0  6E04               	movwf	Lcd_Out2@x,c
  3849  007CA2  0E7F               	movlw	high (STR_87+2)
  3850  007CA4  6E06               	movwf	Lcd_Out2@buffer+1,c
  3851  007CA6  0E0D               	movlw	low (STR_87+2)
  3852  007CA8  6E05               	movwf	Lcd_Out2@buffer,c
  3853  007CAA  0E01               	movlw	1
  3854  007CAC  EC88  F02F         	call	_Lcd_Out2
  3855  007CB0                     l3378:
  3856                           
  3857                           ;MAIN.c: 583: TRIAN_GENERAR_1();
  3858  007CB0  EC5B  F030         	call	_TRIAN_GENERAR_1	;wreg free
  3859                           
  3860                           ;MAIN.c: 584: if(PORTAbits.RA0==1){
  3861  007CB4  A080               	btfss	3968,0,c	;volatile
  3862  007CB6  D006               	goto	l3384
  3863                           
  3864                           ;MAIN.c: 585: q=1;
  3865  007CB8  0E00               	movlw	0
  3866  007CBA  0100               	movlb	0	; () banked
  3867  007CBC  6FD7               	movwf	(_q+1)& (0+255),b
  3868  007CBE  0E01               	movlw	1
  3869  007CC0  0100               	movlb	0	; () banked
  3870  007CC2  6FD6               	movwf	_q& (0+255),b
  3871  007CC4                     l3384:
  3872                           
  3873                           ;MAIN.c: 586: }
  3874                           ;MAIN.c: 587: }while(q==0);
  3875  007CC4  0100               	movlb	0	; () banked
  3876  007CC6  51D7               	movf	(_q+1)& (0+255),w,b
  3877  007CC8  11D6               	iorwf	_q& (0+255),w,b
  3878  007CCA  B4D8               	btfsc	status,2,c
  3879  007CCC  D7F1               	goto	l3378
  3880  007CCE                     l3386:
  3881                           
  3882                           ;MAIN.c: 588: }
  3883                           ;MAIN.c: 589: }
  3884                           ;MAIN.c: 591: if(B==1){
  3885  007CCE  0100               	movlb	0	; () banked
  3886  007CD0  05CE               	decf	_B& (0+255),w,b
  3887  007CD2  11CF               	iorwf	(_B+1)& (0+255),w,b
  3888  007CD4  A4D8               	btfss	status,2,c
  3889  007CD6  D044               	goto	l3414
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;MAIN.c: 592: Lcd_Init();
  3893  007CD8  EC22  F033         	call	_Lcd_Init	;wreg free
  3894                           
  3895                           ;MAIN.c: 593: Lcd_Cmd(1);
  3896  007CDC  0E01               	movlw	1
  3897  007CDE  ECB0  F033         	call	_Lcd_Cmd
  3898                           
  3899                           ;MAIN.c: 594: Lcd_Cmd(12);
  3900  007CE2  0E0C               	movlw	12
  3901  007CE4  ECB0  F033         	call	_Lcd_Cmd
  3902                           
  3903                           ;MAIN.c: 595: Lcd_Out2(1,1,"   Trin 1");
  3904  007CE8  0E01               	movlw	1
  3905  007CEA  6E04               	movwf	Lcd_Out2@x,c
  3906  007CEC  0E7F               	movlw	high STR_87
  3907  007CEE  6E06               	movwf	Lcd_Out2@buffer+1,c
  3908  007CF0  0E0B               	movlw	low STR_87
  3909  007CF2  6E05               	movwf	Lcd_Out2@buffer,c
  3910  007CF4  0E01               	movlw	1
  3911  007CF6  EC88  F02F         	call	_Lcd_Out2
  3912                           
  3913                           ;MAIN.c: 596: Lcd_Out2(2,1,"=> Trin 2");
  3914  007CFA  0E01               	movlw	1
  3915  007CFC  6E04               	movwf	Lcd_Out2@x,c
  3916  007CFE  0E7F               	movlw	high STR_88
  3917  007D00  6E06               	movwf	Lcd_Out2@buffer+1,c
  3918  007D02  0E29               	movlw	low STR_88
  3919  007D04  6E05               	movwf	Lcd_Out2@buffer,c
  3920  007D06  0E02               	movlw	2
  3921  007D08  EC88  F02F         	call	_Lcd_Out2
  3922                           
  3923                           ;MAIN.c: 597: tm_1s();
  3924  007D0C  EC9F  F02E         	call	_tm_1s	;wreg free
  3925                           
  3926                           ;MAIN.c: 598: if(PORTAbits.RA2==1){
  3927  007D10  A480               	btfss	3968,2,c	;volatile
  3928  007D12  D026               	goto	l3414
  3929                           
  3930                           ;MAIN.c: 599: q=0;
  3931  007D14  0E00               	movlw	0
  3932  007D16  0100               	movlb	0	; () banked
  3933  007D18  6FD7               	movwf	(_q+1)& (0+255),b
  3934  007D1A  0E00               	movlw	0
  3935  007D1C  0100               	movlb	0	; () banked
  3936  007D1E  6FD6               	movwf	_q& (0+255),b
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;MAIN.c: 600: Lcd_Init();
  3940  007D20  EC22  F033         	call	_Lcd_Init	;wreg free
  3941                           
  3942                           ;MAIN.c: 601: Lcd_Cmd(1);
  3943  007D24  0E01               	movlw	1
  3944  007D26  ECB0  F033         	call	_Lcd_Cmd
  3945                           
  3946                           ;MAIN.c: 602: Lcd_Cmd(12);
  3947  007D2A  0E0C               	movlw	12
  3948  007D2C  ECB0  F033         	call	_Lcd_Cmd
  3949                           
  3950                           ;MAIN.c: 603: Lcd_Out2(1,1," Trin 2");
  3951  007D30  0E01               	movlw	1
  3952  007D32  6E04               	movwf	Lcd_Out2@x,c
  3953  007D34  0E7F               	movlw	high (STR_85+2)
  3954  007D36  6E06               	movwf	Lcd_Out2@buffer+1,c
  3955  007D38  0E21               	movlw	low (STR_85+2)
  3956  007D3A  6E05               	movwf	Lcd_Out2@buffer,c
  3957  007D3C  0E01               	movlw	1
  3958  007D3E  EC88  F02F         	call	_Lcd_Out2
  3959  007D42                     l3406:
  3960                           
  3961                           ;MAIN.c: 605: TRIAN_GENERAR_2();
  3962  007D42  EC90  F030         	call	_TRIAN_GENERAR_2	;wreg free
  3963                           
  3964                           ;MAIN.c: 606: if(PORTAbits.RA0==1){
  3965  007D46  A080               	btfss	3968,0,c	;volatile
  3966  007D48  D006               	goto	l3412
  3967                           
  3968                           ;MAIN.c: 607: q=1;
  3969  007D4A  0E00               	movlw	0
  3970  007D4C  0100               	movlb	0	; () banked
  3971  007D4E  6FD7               	movwf	(_q+1)& (0+255),b
  3972  007D50  0E01               	movlw	1
  3973  007D52  0100               	movlb	0	; () banked
  3974  007D54  6FD6               	movwf	_q& (0+255),b
  3975  007D56                     l3412:
  3976                           
  3977                           ;MAIN.c: 608: }
  3978                           ;MAIN.c: 609: }while(q==0);
  3979  007D56  0100               	movlb	0	; () banked
  3980  007D58  51D7               	movf	(_q+1)& (0+255),w,b
  3981  007D5A  11D6               	iorwf	_q& (0+255),w,b
  3982  007D5C  B4D8               	btfsc	status,2,c
  3983  007D5E  D7F1               	goto	l3406
  3984  007D60                     l3414:
  3985                           
  3986                           ;MAIN.c: 610: }
  3987                           ;MAIN.c: 611: }
  3988                           ;MAIN.c: 613: if(B==2){
  3989  007D60  0100               	movlb	0	; () banked
  3990  007D62  51CE               	movf	_B& (0+255),w,b
  3991  007D64  0A02               	xorlw	2
  3992  007D66  11CF               	iorwf	(_B+1)& (0+255),w,b
  3993  007D68  A4D8               	btfss	status,2,c
  3994  007D6A  D03B               	goto	l216
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;MAIN.c: 614: Lcd_Init();
  3998  007D6C  EC22  F033         	call	_Lcd_Init	;wreg free
  3999                           
  4000                           ;MAIN.c: 615: Lcd_Cmd(1);
  4001  007D70  0E01               	movlw	1
  4002  007D72  ECB0  F033         	call	_Lcd_Cmd
  4003                           
  4004                           ;MAIN.c: 616: Lcd_Cmd(12);
  4005  007D76  0E0C               	movlw	12
  4006  007D78  ECB0  F033         	call	_Lcd_Cmd
  4007                           
  4008                           ;MAIN.c: 617: Lcd_Out2(1,1,"=> Trin 3");
  4009  007D7C  0E01               	movlw	1
  4010  007D7E  6E04               	movwf	Lcd_Out2@x,c
  4011  007D80  0E7F               	movlw	high STR_90
  4012  007D82  6E06               	movwf	Lcd_Out2@buffer+1,c
  4013  007D84  0E33               	movlw	low STR_90
  4014  007D86  6E05               	movwf	Lcd_Out2@buffer,c
  4015  007D88  0E01               	movlw	1
  4016  007D8A  EC88  F02F         	call	_Lcd_Out2
  4017                           
  4018                           ;MAIN.c: 618: tm_1s();
  4019  007D8E  EC9F  F02E         	call	_tm_1s	;wreg free
  4020                           
  4021                           ;MAIN.c: 619: if(PORTAbits.RA2==1){
  4022  007D92  A480               	btfss	3968,2,c	;volatile
  4023  007D94  D026               	goto	l216
  4024                           
  4025                           ;MAIN.c: 620: q=0;
  4026  007D96  0E00               	movlw	0
  4027  007D98  0100               	movlb	0	; () banked
  4028  007D9A  6FD7               	movwf	(_q+1)& (0+255),b
  4029  007D9C  0E00               	movlw	0
  4030  007D9E  0100               	movlb	0	; () banked
  4031  007DA0  6FD6               	movwf	_q& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;MAIN.c: 621: Lcd_Init();
  4035  007DA2  EC22  F033         	call	_Lcd_Init	;wreg free
  4036                           
  4037                           ;MAIN.c: 622: Lcd_Cmd(1);
  4038  007DA6  0E01               	movlw	1
  4039  007DA8  ECB0  F033         	call	_Lcd_Cmd
  4040                           
  4041                           ;MAIN.c: 623: Lcd_Cmd(12);
  4042  007DAC  0E0C               	movlw	12
  4043  007DAE  ECB0  F033         	call	_Lcd_Cmd
  4044                           
  4045                           ;MAIN.c: 624: Lcd_Out2(1,1," Trin 3");
  4046  007DB2  0E01               	movlw	1
  4047  007DB4  6E04               	movwf	Lcd_Out2@x,c
  4048  007DB6  0E7F               	movlw	high (STR_90+2)
  4049  007DB8  6E06               	movwf	Lcd_Out2@buffer+1,c
  4050  007DBA  0E35               	movlw	low (STR_90+2)
  4051  007DBC  6E05               	movwf	Lcd_Out2@buffer,c
  4052  007DBE  0E01               	movlw	1
  4053  007DC0  EC88  F02F         	call	_Lcd_Out2
  4054  007DC4                     l3434:
  4055                           
  4056                           ;MAIN.c: 626: TRIAN_GENERAR_1();
  4057  007DC4  EC5B  F030         	call	_TRIAN_GENERAR_1	;wreg free
  4058                           
  4059                           ;MAIN.c: 627: if(PORTAbits.RA0==1){
  4060  007DC8  A080               	btfss	3968,0,c	;volatile
  4061  007DCA  D006               	goto	l3440
  4062                           
  4063                           ;MAIN.c: 628: q=1;
  4064  007DCC  0E00               	movlw	0
  4065  007DCE  0100               	movlb	0	; () banked
  4066  007DD0  6FD7               	movwf	(_q+1)& (0+255),b
  4067  007DD2  0E01               	movlw	1
  4068  007DD4  0100               	movlb	0	; () banked
  4069  007DD6  6FD6               	movwf	_q& (0+255),b
  4070  007DD8                     l3440:
  4071                           
  4072                           ;MAIN.c: 629: }
  4073                           ;MAIN.c: 630: }while(q==0);
  4074  007DD8  0100               	movlb	0	; () banked
  4075  007DDA  51D7               	movf	(_q+1)& (0+255),w,b
  4076  007DDC  11D6               	iorwf	_q& (0+255),w,b
  4077  007DDE  B4D8               	btfsc	status,2,c
  4078  007DE0  D7F1               	goto	l3434
  4079  007DE2                     l216:
  4080                           
  4081                           ;MAIN.c: 631: }
  4082                           ;MAIN.c: 632: }
  4083                           ;MAIN.c: 634: if(PORTAbits.RA0==1)
  4084  007DE2  A080               	btfss	3968,0,c	;volatile
  4085  007DE4  D00B               	goto	l3446
  4086                           
  4087                           ;MAIN.c: 635: {
  4088                           ;MAIN.c: 636: B++;
  4089  007DE6  0100               	movlb	0	; () banked
  4090  007DE8  4BCE               	infsnz	_B& (0+255),f,b
  4091  007DEA  2BCF               	incf	(_B+1)& (0+255),f,b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;MAIN.c: 637: _delay((unsigned long)((10)*(8000000/4000.0)));
  4095  007DEC  0E1A               	movlw	26
  4096  007DEE  6E3D               	movwf	??_main& (0+255),c
  4097  007DF0  0EF8               	movlw	248
  4098  007DF2                     u3417:
  4099  007DF2  2EE8               	decfsz	wreg,f,c
  4100  007DF4  D7FE               	goto	u3417
  4101  007DF6  2E3D               	decfsz	??_main& (0+255),f,c
  4102  007DF8  D7FC               	goto	u3417
  4103  007DFA  D000               	nop2	
  4104  007DFC                     l3446:
  4105                           
  4106                           ;MAIN.c: 638: }
  4107                           ;MAIN.c: 640: if(PORTAbits.RA1==1)
  4108  007DFC  A280               	btfss	3968,1,c	;volatile
  4109  007DFE  D00C               	goto	l222
  4110                           
  4111                           ;MAIN.c: 641: {
  4112                           ;MAIN.c: 642: B--;
  4113  007E00  0100               	movlb	0	; () banked
  4114  007E02  07CE               	decf	_B& (0+255),f,b
  4115  007E04  A0D8               	btfss	status,0,c
  4116  007E06  07CF               	decf	(_B+1)& (0+255),f,b
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;MAIN.c: 643: _delay((unsigned long)((10)*(8000000/4000.0)));
  4120  007E08  0E1A               	movlw	26
  4121  007E0A  6E3D               	movwf	??_main& (0+255),c
  4122  007E0C  0EF8               	movlw	248
  4123  007E0E                     u3427:
  4124  007E0E  2EE8               	decfsz	wreg,f,c
  4125  007E10  D7FE               	goto	u3427
  4126  007E12  2E3D               	decfsz	??_main& (0+255),f,c
  4127  007E14  D7FC               	goto	u3427
  4128  007E16  D000               	nop2	
  4129  007E18                     l222:
  4130                           
  4131                           ;MAIN.c: 644: }
  4132                           ;MAIN.c: 645: if(B>2){
  4133  007E18  0E03               	movlw	3
  4134  007E1A  0100               	movlb	0	; () banked
  4135  007E1C  5DCE               	subwf	_B& (0+255),w,b
  4136  007E1E  0E00               	movlw	0
  4137  007E20  0100               	movlb	0	; () banked
  4138  007E22  59CF               	subwfb	(_B+1)& (0+255),w,b
  4139  007E24  A0D8               	btfss	status,0,c
  4140  007E26  D006               	goto	l3456
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;MAIN.c: 646: B=0;
  4144  007E28  0E00               	movlw	0
  4145  007E2A  0100               	movlb	0	; () banked
  4146  007E2C  6FCF               	movwf	(_B+1)& (0+255),b
  4147  007E2E  0E00               	movlw	0
  4148  007E30  0100               	movlb	0	; () banked
  4149  007E32  6FCE               	movwf	_B& (0+255),b
  4150  007E34                     l3456:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;MAIN.c: 651: }
  4154                           ;MAIN.c: 652: if(PORTAbits.RA1==1 && PORTAbits.RA0==1 ){
  4155  007E34  B280               	btfsc	3968,1,c	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158  007E36  A080               	btfss	3968,0,c	;volatile
  4159  007E38  D006               	goto	l3462
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;MAIN.c: 653: w=1;
  4163  007E3A  0E00               	movlw	0
  4164  007E3C  0100               	movlb	0	; () banked
  4165  007E3E  6FDD               	movwf	(_w+1)& (0+255),b
  4166  007E40  0E01               	movlw	1
  4167  007E42  0100               	movlb	0	; () banked
  4168  007E44  6FDC               	movwf	_w& (0+255),b
  4169  007E46                     l3462:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;MAIN.c: 654: }
  4173                           ;MAIN.c: 655: }while(w==0);
  4174  007E46  0100               	movlb	0	; () banked
  4175  007E48  51DD               	movf	(_w+1)& (0+255),w,b
  4176  007E4A  11DC               	iorwf	_w& (0+255),w,b
  4177  007E4C  B4D8               	btfsc	status,2,c
  4178  007E4E  D6F0               	goto	l3350
  4179  007E50                     l3464:
  4180                           
  4181                           ;MAIN.c: 657: }
  4182                           ;MAIN.c: 659: }
  4183                           ;MAIN.c: 662: if(B>3){
  4184  007E50  0E04               	movlw	4
  4185  007E52  0100               	movlb	0	; () banked
  4186  007E54  5DCE               	subwf	_B& (0+255),w,b
  4187  007E56  0E00               	movlw	0
  4188  007E58  0100               	movlb	0	; () banked
  4189  007E5A  59CF               	subwfb	(_B+1)& (0+255),w,b
  4190  007E5C  A0D8               	btfss	status,0,c
  4191  007E5E  EF0B  F037         	goto	l2810
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;MAIN.c: 663: B=1;
  4195  007E62  0E00               	movlw	0
  4196  007E64  0100               	movlb	0	; () banked
  4197  007E66  6FCF               	movwf	(_B+1)& (0+255),b
  4198  007E68  0E01               	movlw	1
  4199  007E6A  0100               	movlb	0	; () banked
  4200  007E6C  6FCE               	movwf	_B& (0+255),b
  4201  007E6E  EF0B  F037         	goto	l2810
  4202  007E72                     __end_of_main:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           postinc0	equ	0xFEE
  4209                           wreg	equ	0xFE8
  4210                           postdec1	equ	0xFE5
  4211                           fsr1l	equ	0xFE1
  4212                           status	equ	0xFD8
  4213                           
  4214 ;; *************** function _tm_1s *****************
  4215 ;; Defined at:
  4216 ;;		line 4 in file "DELAY.h"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  i               2    1[COMRAM] int 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;		None               void
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        3 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_main
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text1
  4244  005D3E                     __ptext1:
  4245                           	opt stack 0
  4246  005D3E                     _tm_1s:
  4247                           	opt stack 30
  4248                           
  4249                           ;DELAY.h: 5: int i;
  4250                           ;DELAY.h: 6: for(i=0;i<20;i++){
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;incstack = 0
  4254  005D3E  0E00               	movlw	0
  4255  005D40  6E03               	movwf	tm_1s@i+1,c
  4256  005D42  0E00               	movlw	0
  4257  005D44  6E02               	movwf	tm_1s@i,c
  4258  005D46  5003               	movf	tm_1s@i+1,w,c
  4259  005D48  0A80               	xorlw	128
  4260  005D4A  0F80               	addlw	-128
  4261  005D4C  0E14               	movlw	20
  4262  005D4E  B4D8               	btfsc	status,2,c
  4263  005D50  5C02               	subwf	tm_1s@i,w,c
  4264  005D52  B0D8               	btfsc	status,0,c
  4265  005D54  0012               	return	
  4266                           
  4267                           ;DELAY.h: 7: _delay((unsigned long)((50)*(8000000/4000.0)));
  4268  005D56  0E82               	movlw	130
  4269  005D58  6E01               	movwf	??_tm_1s& (0+255),c
  4270  005D5A  0EDE               	movlw	222
  4271  005D5C                     u3437:
  4272  005D5C  2EE8               	decfsz	wreg,f,c
  4273  005D5E  D7FE               	goto	u3437
  4274  005D60  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4275  005D62  D7FC               	goto	u3437
  4276  005D64  4A02               	infsnz	tm_1s@i,f,c
  4277  005D66  2A03               	incf	tm_1s@i+1,f,c
  4278  005D68  D7EE               	goto	L9
  4279  005D6A                     __end_of_tm_1s:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           postdec1	equ	0xFE5
  4288                           fsr1l	equ	0xFE1
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _lcd_goto *****************
  4292 ;; Defined at:
  4293 ;;		line 161 in file "LCD.h"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  x               2    3[COMRAM] int 
  4296 ;;  y               2    5[COMRAM] int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  data            1    9[COMRAM] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         4       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        7 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		_Lcd_Cmd
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text2
  4323  005DA6                     __ptext2:
  4324                           	opt stack 0
  4325  005DA6                     _lcd_goto:
  4326                           	opt stack 29
  4327                           
  4328                           ;LCD.h: 162: unsigned char data;
  4329                           ;LCD.h: 163: switch (y) {
  4330                           
  4331                           ;incstack = 0
  4332  005DA6  D00D               	goto	l2624
  4333  005DA8                     l2614:
  4334  005DA8  5004               	movf	lcd_goto@x,w,c
  4335  005DAA  0F80               	addlw	128
  4336  005DAC  D008               	goto	L12
  4337  005DAE                     l2616:
  4338  005DAE  5004               	movf	lcd_goto@x,w,c
  4339  005DB0  0FC0               	addlw	192
  4340  005DB2  D005               	goto	L12
  4341  005DB4                     l2618:
  4342  005DB4  5004               	movf	lcd_goto@x,w,c
  4343  005DB6  0F94               	addlw	148
  4344  005DB8  D002               	goto	L12
  4345  005DBA                     l2620:
  4346  005DBA  5004               	movf	lcd_goto@x,w,c
  4347  005DBC  0FD4               	addlw	212
  4348  005DBE                     L12:
  4349  005DBE  6E0A               	movwf	lcd_goto@data,c
  4350  005DC0  D015               	goto	l2626
  4351  005DC2                     l2624:
  4352  005DC2  C006  F008         	movff	lcd_goto@y,??_lcd_goto
  4353  005DC6  C007  F009         	movff	lcd_goto@y+1,??_lcd_goto+1
  4354                           
  4355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4356                           ; Switch size 1, requested type "space"
  4357                           ; Number of cases is 1, Range of values is 0 to 0
  4358                           ; switch strategies available:
  4359                           ; Name         Instructions Cycles
  4360                           ; simple_byte            4     3 (average)
  4361                           ;	Chosen strategy is simple_byte
  4362  005DCA  5009               	movf	??_lcd_goto+1,w,c
  4363  005DCC  0A00               	xorlw	0	; case 0
  4364  005DCE  A4D8               	btfss	status,2,c
  4365  005DD0  D00D               	goto	l2626
  4366                           
  4367                           ; Switch size 1, requested type "space"
  4368                           ; Number of cases is 4, Range of values is 1 to 4
  4369                           ; switch strategies available:
  4370                           ; Name         Instructions Cycles
  4371                           ; simple_byte           13     7 (average)
  4372                           ;	Chosen strategy is simple_byte
  4373  005DD2  5008               	movf	??_lcd_goto,w,c
  4374  005DD4  0A01               	xorlw	1	; case 1
  4375  005DD6  B4D8               	btfsc	status,2,c
  4376  005DD8  D7E7               	goto	l2614
  4377  005DDA  0A03               	xorlw	3	; case 2
  4378  005DDC  B4D8               	btfsc	status,2,c
  4379  005DDE  D7E7               	goto	l2616
  4380  005DE0  0A01               	xorlw	1	; case 3
  4381  005DE2  B4D8               	btfsc	status,2,c
  4382  005DE4  D7E7               	goto	l2618
  4383  005DE6  0A07               	xorlw	7	; case 4
  4384  005DE8  B4D8               	btfsc	status,2,c
  4385  005DEA  D7E7               	goto	l2620
  4386  005DEC                     l2626:
  4387                           
  4388                           ;LCD.h: 170: Lcd_Cmd(data);
  4389  005DEC  500A               	movf	lcd_goto@data,w,c
  4390  005DEE  ECB0  F033         	call	_Lcd_Cmd
  4391  005DF2  0012               	return	
  4392  005DF4                     __end_of_lcd_goto:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           postinc0	equ	0xFEE
  4399                           wreg	equ	0xFE8
  4400                           postdec1	equ	0xFE5
  4401                           fsr1l	equ	0xFE1
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function ___wmul *****************
  4405 ;; Defined at:
  4406 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul16.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  multiplier      2    0[COMRAM] unsigned int 
  4409 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  product         2    4[COMRAM] unsigned int 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  2    0[COMRAM] unsigned int 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, prodl, prodh
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4421 ;;      Params:         4       0       0       0       0       0       0       0       0
  4422 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4424 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        6 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text3
  4435  005D18                     __ptext3:
  4436                           	opt stack 0
  4437  005D18                     ___wmul:
  4438                           	opt stack 30
  4439                           
  4440                           ;incstack = 0
  4441  005D18  5001               	movf	___wmul@multiplier,w,c
  4442  005D1A  0203               	mulwf	___wmul@multiplicand,c
  4443  005D1C  CFF3 F005          	movff	prodl,___wmul@product
  4444  005D20  CFF4 F006          	movff	prodh,___wmul@product+1
  4445  005D24  5001               	movf	___wmul@multiplier,w,c
  4446  005D26  0204               	mulwf	___wmul@multiplicand+1,c
  4447  005D28  50F3               	movf	prodl,w,c
  4448  005D2A  2606               	addwf	___wmul@product+1,f,c
  4449  005D2C  5002               	movf	___wmul@multiplier+1,w,c
  4450  005D2E  0203               	mulwf	___wmul@multiplicand,c
  4451  005D30  50F3               	movf	prodl,w,c
  4452  005D32  2606               	addwf	___wmul@product+1,f,c
  4453  005D34  C005  F001         	movff	___wmul@product,?___wmul
  4454  005D38  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4455  005D3C  0012               	return	
  4456  005D3E                     __end_of___wmul:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postdec1	equ	0xFE5
  4467                           fsr1l	equ	0xFE1
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _TRIAN_GENERAR_2 *****************
  4471 ;; Defined at:
  4472 ;;		line 52 in file "TRIANGULAR.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  seno           36   18[COMRAM] int [18]
  4477 ;;  i               2   54[COMRAM] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;		None               void
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0
  4488 ;;      Locals:        38       0       0       0       0       0       0       0       0
  4489 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4490 ;;      Totals:        40       0       0       0       0       0       0       0       0
  4491 ;;Total ram usage:       40 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    2
  4494 ;; This function calls:
  4495 ;;		_PWM_1
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text4
  4502  006120                     __ptext4:
  4503                           	opt stack 0
  4504  006120                     _TRIAN_GENERAR_2:
  4505                           	opt stack 28
  4506                           
  4507                           ;TRIANGULAR.c: 54: OSCCON= 0b01100111;
  4508                           
  4509                           ;incstack = 0
  4510  006120  0E67               	movlw	103
  4511  006122  6ED3               	movwf	4051,c	;volatile
  4512                           
  4513                           ;TRIANGULAR.c: 57: int seno [18]= {11,22,33,44,56,67,78,89,100,89,78,67,56,44,33,22,11,0
      +                          };
  4514  006124  EE21  F074         	lfsr	2,TRIAN_GENERAR_2@F7366
  4515  006128  EE10  F013         	lfsr	1,TRIAN_GENERAR_2@seno
  4516  00612C  0E24               	movlw	36
  4517  00612E                     u2341:
  4518  00612E  CFDE FFE6          	movff	postinc2,postinc1
  4519  006132  2EE8               	decfsz	wreg,f,c
  4520  006134  D7FC               	goto	u2341
  4521                           
  4522                           ;TRIANGULAR.c: 58: int i;
  4523                           ;TRIANGULAR.c: 59: while(PORTAbits.RA0==1){
  4524  006136  D026               	goto	l337
  4525  006138                     l2784:
  4526                           
  4527                           ;TRIANGULAR.c: 60: for (i=0;i<18;i++)
  4528  006138  0E00               	movlw	0
  4529  00613A  6E38               	movwf	TRIAN_GENERAR_2@i+1,c
  4530  00613C  0E00               	movlw	0
  4531  00613E  6E37               	movwf	TRIAN_GENERAR_2@i,c
  4532  006140  5038               	movf	TRIAN_GENERAR_2@i+1,w,c
  4533  006142  0A80               	xorlw	128
  4534  006144  0F80               	addlw	-128
  4535  006146  0E12               	movlw	18
  4536  006148  B4D8               	btfsc	status,2,c
  4537  00614A  5C37               	subwf	TRIAN_GENERAR_2@i,w,c
  4538  00614C  B0D8               	btfsc	status,0,c
  4539  00614E  D01A               	goto	l337
  4540                           
  4541                           ;TRIANGULAR.c: 61: {
  4542                           ;TRIANGULAR.c: 62: PWM_1(1, seno[i]);
  4543  006150  0E00               	movlw	0
  4544  006152  6E0A               	movwf	PWM_1@canal+1,c
  4545  006154  0E01               	movlw	1
  4546  006156  6E09               	movwf	PWM_1@canal,c
  4547  006158  0E13               	movlw	low TRIAN_GENERAR_2@seno
  4548  00615A  6E11               	movwf	??_TRIAN_GENERAR_2& (0+255),c
  4549  00615C  0E00               	movlw	high TRIAN_GENERAR_2@seno
  4550  00615E  6E12               	movwf	(??_TRIAN_GENERAR_2+1)& (0+255),c
  4551  006160  90D8               	bcf	status,0,c
  4552  006162  3437               	rlcf	TRIAN_GENERAR_2@i,w,c
  4553  006164  6ED9               	movwf	fsr2l,c
  4554  006166  3438               	rlcf	TRIAN_GENERAR_2@i+1,w,c
  4555  006168  6EDA               	movwf	fsr2h,c
  4556  00616A  5011               	movf	??_TRIAN_GENERAR_2,w,c
  4557  00616C  26D9               	addwf	fsr2l,f,c
  4558  00616E  5012               	movf	??_TRIAN_GENERAR_2+1,w,c
  4559  006170  22DA               	addwfc	fsr2h,f,c
  4560  006172  CFDE F00B          	movff	postinc2,PWM_1@duty
  4561  006176  CFDD F00C          	movff	postdec2,PWM_1@duty+1
  4562  00617A  EC4F  F031         	call	_PWM_1	;wreg free
  4563  00617E  4A37               	infsnz	TRIAN_GENERAR_2@i,f,c
  4564  006180  2A38               	incf	TRIAN_GENERAR_2@i+1,f,c
  4565  006182  D7DE               	goto	L13
  4566  006184                     l337:
  4567  006184  A080               	btfss	3968,0,c	;volatile
  4568                           
  4569                           ;TRIANGULAR.c: 63: }
  4570                           ;TRIANGULAR.c: 64: }
  4571                           ;TRIANGULAR.c: 65: return;
  4572  006186  0012               	return	
  4573  006188  D7D7               	goto	l2784
  4574  00618A                     __end_of_TRIAN_GENERAR_2:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           postinc0	equ	0xFEE
  4583                           wreg	equ	0xFE8
  4584                           postinc1	equ	0xFE6
  4585                           postdec1	equ	0xFE5
  4586                           fsr1l	equ	0xFE1
  4587                           postinc2	equ	0xFDE
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _TRIAN_GENERAR_1 *****************
  4594 ;; Defined at:
  4595 ;;		line 35 in file "TRIANGULAR.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  seno           40   18[COMRAM] int [20]
  4600 ;;  i               2   58[COMRAM] int 
  4601 ;;  j               2    0        int 
  4602 ;;  calculos        2    0        int 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0
  4613 ;;      Locals:        42       0       0       0       0       0       0       0       0
  4614 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4615 ;;      Totals:        44       0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:       44 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    2
  4619 ;; This function calls:
  4620 ;;		_PWM_1
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text5
  4627  0060B6                     __ptext5:
  4628                           	opt stack 0
  4629  0060B6                     _TRIAN_GENERAR_1:
  4630                           	opt stack 28
  4631                           
  4632                           ;TRIANGULAR.c: 37: OSCCON= 0b01100111;
  4633                           
  4634                           ;incstack = 0
  4635  0060B6  0E67               	movlw	103
  4636  0060B8  6ED3               	movwf	4051,c	;volatile
  4637                           
  4638                           ;TRIANGULAR.c: 40: int calculos;
  4639                           ;TRIANGULAR.c: 41: int seno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,40,30,2
      +                          0,10,0};
  4640  0060BA  EE21  F028         	lfsr	2,TRIAN_GENERAR_1@F7362
  4641  0060BE  EE10  F013         	lfsr	1,TRIAN_GENERAR_1@seno
  4642  0060C2  0E28               	movlw	40
  4643  0060C4                     u2301:
  4644  0060C4  CFDE FFE6          	movff	postinc2,postinc1
  4645  0060C8  2EE8               	decfsz	wreg,f,c
  4646  0060CA  D7FC               	goto	u2301
  4647                           
  4648                           ;TRIANGULAR.c: 42: int i,j;
  4649                           ;TRIANGULAR.c: 43: while(PORTAbits.RA0==1){
  4650  0060CC  D026               	goto	l327
  4651  0060CE                     l2768:
  4652                           
  4653                           ;TRIANGULAR.c: 44: for (i=0;i<20;i++)
  4654  0060CE  0E00               	movlw	0
  4655  0060D0  6E3C               	movwf	TRIAN_GENERAR_1@i+1,c
  4656  0060D2  0E00               	movlw	0
  4657  0060D4  6E3B               	movwf	TRIAN_GENERAR_1@i,c
  4658  0060D6  503C               	movf	TRIAN_GENERAR_1@i+1,w,c
  4659  0060D8  0A80               	xorlw	128
  4660  0060DA  0F80               	addlw	-128
  4661  0060DC  0E14               	movlw	20
  4662  0060DE  B4D8               	btfsc	status,2,c
  4663  0060E0  5C3B               	subwf	TRIAN_GENERAR_1@i,w,c
  4664  0060E2  B0D8               	btfsc	status,0,c
  4665  0060E4  D01A               	goto	l327
  4666                           
  4667                           ;TRIANGULAR.c: 45: {
  4668                           ;TRIANGULAR.c: 46: PWM_1(1, seno[i]);
  4669  0060E6  0E00               	movlw	0
  4670  0060E8  6E0A               	movwf	PWM_1@canal+1,c
  4671  0060EA  0E01               	movlw	1
  4672  0060EC  6E09               	movwf	PWM_1@canal,c
  4673  0060EE  0E13               	movlw	low TRIAN_GENERAR_1@seno
  4674  0060F0  6E11               	movwf	??_TRIAN_GENERAR_1& (0+255),c
  4675  0060F2  0E00               	movlw	high TRIAN_GENERAR_1@seno
  4676  0060F4  6E12               	movwf	(??_TRIAN_GENERAR_1+1)& (0+255),c
  4677  0060F6  90D8               	bcf	status,0,c
  4678  0060F8  343B               	rlcf	TRIAN_GENERAR_1@i,w,c
  4679  0060FA  6ED9               	movwf	fsr2l,c
  4680  0060FC  343C               	rlcf	TRIAN_GENERAR_1@i+1,w,c
  4681  0060FE  6EDA               	movwf	fsr2h,c
  4682  006100  5011               	movf	??_TRIAN_GENERAR_1,w,c
  4683  006102  26D9               	addwf	fsr2l,f,c
  4684  006104  5012               	movf	??_TRIAN_GENERAR_1+1,w,c
  4685  006106  22DA               	addwfc	fsr2h,f,c
  4686  006108  CFDE F00B          	movff	postinc2,PWM_1@duty
  4687  00610C  CFDD F00C          	movff	postdec2,PWM_1@duty+1
  4688  006110  EC4F  F031         	call	_PWM_1	;wreg free
  4689  006114  4A3B               	infsnz	TRIAN_GENERAR_1@i,f,c
  4690  006116  2A3C               	incf	TRIAN_GENERAR_1@i+1,f,c
  4691  006118  D7DE               	goto	L14
  4692  00611A                     l327:
  4693  00611A  A080               	btfss	3968,0,c	;volatile
  4694                           
  4695                           ;TRIANGULAR.c: 47: }
  4696                           ;TRIANGULAR.c: 48: }
  4697                           ;TRIANGULAR.c: 49: return;
  4698  00611C  0012               	return	
  4699  00611E  D7D7               	goto	l2768
  4700  006120                     __end_of_TRIAN_GENERAR_1:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           postinc0	equ	0xFEE
  4709                           wreg	equ	0xFE8
  4710                           postinc1	equ	0xFE6
  4711                           postdec1	equ	0xFE5
  4712                           fsr1l	equ	0xFE1
  4713                           postinc2	equ	0xFDE
  4714                           postdec2	equ	0xFDD
  4715                           fsr2h	equ	0xFDA
  4716                           fsr2l	equ	0xFD9
  4717                           status	equ	0xFD8
  4718                           
  4719 ;; *************** function _PWM_1 *****************
  4720 ;; Defined at:
  4721 ;;		line 9 in file "TRIANGULAR.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  canal           2    8[COMRAM] int 
  4724 ;;  duty            2   10[COMRAM] int 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  calculos        2   14[COMRAM] int 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;		None               void
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, prodl, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4736 ;;      Params:         4       0       0       0       0       0       0       0       0
  4737 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4738 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4739 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4740 ;;Total ram usage:        8 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    1
  4743 ;; This function calls:
  4744 ;;		___awdiv
  4745 ;; This function is called by:
  4746 ;;		_TRIAN_GENERAR_1
  4747 ;;		_TRIAN_GENERAR_2
  4748 ;;		_TRIAN_GENERAR_3
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text6
  4753  00629E                     __ptext6:
  4754                           	opt stack 0
  4755  00629E                     _PWM_1:
  4756                           	opt stack 28
  4757                           
  4758                           ;TRIANGULAR.c: 13: calculos= 3;
  4759                           
  4760                           ;incstack = 0
  4761  00629E  0E00               	movlw	0
  4762  0062A0  6E10               	movwf	PWM_1@calculos+1,c
  4763  0062A2  0E03               	movlw	3
  4764  0062A4  6E0F               	movwf	PWM_1@calculos,c
  4765                           
  4766                           ;TRIANGULAR.c: 14: } T2CONbits.T2CKPS0=0;
  4767  0062A6  90BA               	bcf	4026,0,c	;volatile
  4768                           
  4769                           ;TRIANGULAR.c: 15: T2CONbits.T2CKPS1=0;
  4770  0062A8  92BA               	bcf	4026,1,c	;volatile
  4771                           
  4772                           ;TRIANGULAR.c: 16: PR2= calculos;
  4773  0062AA  C00F  FFBB         	movff	PWM_1@calculos,4027	;volatile
  4774                           
  4775                           ;TRIANGULAR.c: 17: calculos= duty*8;
  4776  0062AE  C00B  F00D         	movff	PWM_1@duty,??_PWM_1
  4777  0062B2  C00C  F00E         	movff	PWM_1@duty+1,??_PWM_1+1
  4778  0062B6  90D8               	bcf	status,0,c
  4779  0062B8  360D               	rlcf	??_PWM_1,f,c
  4780  0062BA  360E               	rlcf	??_PWM_1+1,f,c
  4781  0062BC  90D8               	bcf	status,0,c
  4782  0062BE  360D               	rlcf	??_PWM_1,f,c
  4783  0062C0  360E               	rlcf	??_PWM_1+1,f,c
  4784  0062C2  90D8               	bcf	status,0,c
  4785  0062C4  360D               	rlcf	??_PWM_1,f,c
  4786  0062C6  360E               	rlcf	??_PWM_1+1,f,c
  4787  0062C8  C00D  F00F         	movff	??_PWM_1,PWM_1@calculos
  4788  0062CC  C00E  F010         	movff	??_PWM_1+1,PWM_1@calculos+1
  4789                           
  4790                           ;TRIANGULAR.c: 18: calculos= calculos/100;
  4791  0062D0  C00F  F001         	movff	PWM_1@calculos,___awdiv@dividend
  4792  0062D4  C010  F002         	movff	PWM_1@calculos+1,___awdiv@dividend+1
  4793  0062D8  0E00               	movlw	0
  4794  0062DA  6E04               	movwf	___awdiv@divisor+1,c
  4795  0062DC  0E64               	movlw	100
  4796  0062DE  6E03               	movwf	___awdiv@divisor,c
  4797  0062E0  ECE4  F031         	call	___awdiv	;wreg free
  4798  0062E4  C001  F00F         	movff	?___awdiv,PWM_1@calculos
  4799  0062E8  C002  F010         	movff	?___awdiv+1,PWM_1@calculos+1
  4800                           
  4801                           ;TRIANGULAR.c: 20: BIT= calculos;
  4802  0062EC  0100               	movlb	(PWM_1@BIT/(0+8)) shr (0+8)
  4803  0062EE  9244               	bcf	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4804  0062F0  B00F               	btfsc	PWM_1@calculos,0,c
  4805  0062F2  8244               	bsf	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4806                           
  4807                           ;TRIANGULAR.c: 21: CCP1CONbits.DC1B0=BIT;
  4808  0062F4  0100               	movlb	(PWM_1@BIT/(0+8)) shr (0+8)
  4809  0062F6  A244               	btfss	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4810  0062F8  D002               	bra	u1835
  4811  0062FA  88BD               	bsf	4029,4,c	;volatile
  4812  0062FC  D001               	bra	u1837
  4813  0062FE                     u1835:
  4814  0062FE  98BD               	bcf	4029,4,c	;volatile
  4815  006300                     u1837:
  4816                           
  4817                           ;TRIANGULAR.c: 23: BIT=calculos;
  4818  006300  0100               	movlb	(PWM_1@BIT/(0+8)) shr (0+8)
  4819  006302  9244               	bcf	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4820  006304  B00F               	btfsc	PWM_1@calculos,0,c
  4821  006306  8244               	bsf	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4822                           
  4823                           ;TRIANGULAR.c: 24: CCP1CONbits.DC1B1=BIT;
  4824  006308  0100               	movlb	(PWM_1@BIT/(0+8)) shr (0+8)
  4825  00630A  A244               	btfss	PWM_1@BIT/(0+8),PWM_1@BIT& (0+7),c
  4826  00630C  D002               	bra	u1855
  4827  00630E  8ABD               	bsf	4029,5,c	;volatile
  4828  006310  D001               	bra	u1857
  4829  006312                     u1855:
  4830  006312  9ABD               	bcf	4029,5,c	;volatile
  4831  006314                     u1857:
  4832                           
  4833                           ;TRIANGULAR.c: 25: CCPR1L=calculos >>1;
  4834  006314  3410               	rlcf	PWM_1@calculos+1,w,c
  4835  006316  3010               	rrcf	PWM_1@calculos+1,w,c
  4836  006318  6E0E               	movwf	(??_PWM_1+1)& (0+255),c
  4837  00631A  300F               	rrcf	PWM_1@calculos,w,c
  4838  00631C  6E0D               	movwf	??_PWM_1& (0+255),c
  4839  00631E  500D               	movf	??_PWM_1,w,c
  4840  006320  6EBE               	movwf	4030,c	;volatile
  4841                           
  4842                           ;TRIANGULAR.c: 26: TRISCbits.RC2=0;
  4843  006322  9494               	bcf	3988,2,c	;volatile
  4844                           
  4845                           ;TRIANGULAR.c: 27: CCP1CONbits.CCP1M3=1;
  4846  006324  86BD               	bsf	4029,3,c	;volatile
  4847                           
  4848                           ;TRIANGULAR.c: 28: CCP1CONbits.CCP1M2=1;
  4849  006326  84BD               	bsf	4029,2,c	;volatile
  4850                           
  4851                           ;TRIANGULAR.c: 29: CCP1CONbits.CCP1M1=0;
  4852  006328  92BD               	bcf	4029,1,c	;volatile
  4853                           
  4854                           ;TRIANGULAR.c: 30: CCP1CONbits.CCP1M0=0;
  4855  00632A  90BD               	bcf	4029,0,c	;volatile
  4856                           
  4857                           ;TRIANGULAR.c: 31: T2CONbits.TMR2ON=1;
  4858  00632C  84BA               	bsf	4026,2,c	;volatile
  4859  00632E  0012               	return	
  4860  006330                     __end_of_PWM_1:
  4861                           	opt stack 0
  4862                           tblptru	equ	0xFF8
  4863                           tblptrh	equ	0xFF7
  4864                           tblptrl	equ	0xFF6
  4865                           tablat	equ	0xFF5
  4866                           prodh	equ	0xFF4
  4867                           prodl	equ	0xFF3
  4868                           postinc0	equ	0xFEE
  4869                           wreg	equ	0xFE8
  4870                           postinc1	equ	0xFE6
  4871                           postdec1	equ	0xFE5
  4872                           fsr1l	equ	0xFE1
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _SENO_GENERAR_3 *****************
  4880 ;; Defined at:
  4881 ;;		line 72 in file "SENO.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  seno           30   18[COMRAM] int [15]
  4886 ;;  i               2   48[COMRAM] int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0
  4897 ;;      Locals:        32       0       0       0       0       0       0       0       0
  4898 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4899 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4900 ;;Total ram usage:       34 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    2
  4903 ;; This function calls:
  4904 ;;		_PWM
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text7
  4911  00604C                     __ptext7:
  4912                           	opt stack 0
  4913  00604C                     _SENO_GENERAR_3:
  4914                           	opt stack 28
  4915                           
  4916                           ;SENO.c: 74: OSCCON= 0b01100111;
  4917                           
  4918                           ;incstack = 0
  4919  00604C  0E67               	movlw	103
  4920  00604E  6ED3               	movwf	4051,c	;volatile
  4921                           
  4922                           ;SENO.c: 77: int seno [15]={50,70,87,98,100,93,79,60,40,21,7,0,2,13,30};
  4923  006050  EE20  F060         	lfsr	2,SENO_GENERAR_3@F7369
  4924  006054  EE10  F013         	lfsr	1,SENO_GENERAR_3@seno
  4925  006058  0E1E               	movlw	30
  4926  00605A                     u2261:
  4927  00605A  CFDE FFE6          	movff	postinc2,postinc1
  4928  00605E  2EE8               	decfsz	wreg,f,c
  4929  006060  D7FC               	goto	u2261
  4930                           
  4931                           ;SENO.c: 79: int i;
  4932                           ;SENO.c: 80: while(PORTAbits.RA0==1){
  4933  006062  D026               	goto	l297
  4934  006064                     l2752:
  4935                           
  4936                           ;SENO.c: 81: for (i=0;i<15;i++)
  4937  006064  0E00               	movlw	0
  4938  006066  6E32               	movwf	SENO_GENERAR_3@i+1,c
  4939  006068  0E00               	movlw	0
  4940  00606A  6E31               	movwf	SENO_GENERAR_3@i,c
  4941  00606C  5032               	movf	SENO_GENERAR_3@i+1,w,c
  4942  00606E  0A80               	xorlw	128
  4943  006070  0F80               	addlw	-128
  4944  006072  0E0F               	movlw	15
  4945  006074  B4D8               	btfsc	status,2,c
  4946  006076  5C31               	subwf	SENO_GENERAR_3@i,w,c
  4947  006078  B0D8               	btfsc	status,0,c
  4948  00607A  D01A               	goto	l297
  4949                           
  4950                           ;SENO.c: 82: {
  4951                           ;SENO.c: 83: PWM(1, seno[i]);
  4952  00607C  0E00               	movlw	0
  4953  00607E  6E0A               	movwf	PWM@canal+1,c
  4954  006080  0E01               	movlw	1
  4955  006082  6E09               	movwf	PWM@canal,c
  4956  006084  0E13               	movlw	low SENO_GENERAR_3@seno
  4957  006086  6E11               	movwf	??_SENO_GENERAR_3& (0+255),c
  4958  006088  0E00               	movlw	high SENO_GENERAR_3@seno
  4959  00608A  6E12               	movwf	(??_SENO_GENERAR_3+1)& (0+255),c
  4960  00608C  90D8               	bcf	status,0,c
  4961  00608E  3431               	rlcf	SENO_GENERAR_3@i,w,c
  4962  006090  6ED9               	movwf	fsr2l,c
  4963  006092  3432               	rlcf	SENO_GENERAR_3@i+1,w,c
  4964  006094  6EDA               	movwf	fsr2h,c
  4965  006096  5011               	movf	??_SENO_GENERAR_3,w,c
  4966  006098  26D9               	addwf	fsr2l,f,c
  4967  00609A  5012               	movf	??_SENO_GENERAR_3+1,w,c
  4968  00609C  22DA               	addwfc	fsr2h,f,c
  4969  00609E  CFDE F00B          	movff	postinc2,PWM@duty
  4970  0060A2  CFDD F00C          	movff	postdec2,PWM@duty+1
  4971  0060A6  EC06  F031         	call	_PWM	;wreg free
  4972  0060AA  4A31               	infsnz	SENO_GENERAR_3@i,f,c
  4973  0060AC  2A32               	incf	SENO_GENERAR_3@i+1,f,c
  4974  0060AE  D7DE               	goto	L15
  4975  0060B0                     l297:
  4976  0060B0  A080               	btfss	3968,0,c	;volatile
  4977                           
  4978                           ;SENO.c: 84: }
  4979                           ;SENO.c: 85: }
  4980                           ;SENO.c: 86: return;
  4981  0060B2  0012               	return	
  4982  0060B4  D7D7               	goto	l2752
  4983  0060B6                     __end_of_SENO_GENERAR_3:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           postinc1	equ	0xFE6
  4994                           postdec1	equ	0xFE5
  4995                           fsr1l	equ	0xFE1
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function _SENO_GENERAR_2 *****************
  5003 ;; Defined at:
  5004 ;;		line 55 in file "SENO.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  seno           36   18[COMRAM] int [18]
  5009 ;;  i               2   54[COMRAM] int 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;		None               void
  5012 ;; Registers used:
  5013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:        38       0       0       0       0       0       0       0       0
  5021 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5022 ;;      Totals:        40       0       0       0       0       0       0       0       0
  5023 ;;Total ram usage:       40 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    2
  5026 ;; This function calls:
  5027 ;;		_PWM
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text8
  5034  005FE2                     __ptext8:
  5035                           	opt stack 0
  5036  005FE2                     _SENO_GENERAR_2:
  5037                           	opt stack 28
  5038                           
  5039                           ;SENO.c: 57: OSCCON= 0b01100111;
  5040                           
  5041                           ;incstack = 0
  5042  005FE2  0E67               	movlw	103
  5043  005FE4  6ED3               	movwf	4051,c	;volatile
  5044                           
  5045                           ;SENO.c: 60: int seno [18]= {50,67,82,93,99,99,93,82,67,50,33,18,7,1,1,7,18,33};
  5046  005FE6  EE21  F050         	lfsr	2,SENO_GENERAR_2@F7366
  5047  005FEA  EE10  F013         	lfsr	1,SENO_GENERAR_2@seno
  5048  005FEE  0E24               	movlw	36
  5049  005FF0                     u2221:
  5050  005FF0  CFDE FFE6          	movff	postinc2,postinc1
  5051  005FF4  2EE8               	decfsz	wreg,f,c
  5052  005FF6  D7FC               	goto	u2221
  5053                           
  5054                           ;SENO.c: 62: int i;
  5055                           ;SENO.c: 63: while(PORTAbits.RA0==1){
  5056  005FF8  D026               	goto	l287
  5057  005FFA                     l2736:
  5058                           
  5059                           ;SENO.c: 64: for (i=0;i<18;i++)
  5060  005FFA  0E00               	movlw	0
  5061  005FFC  6E38               	movwf	SENO_GENERAR_2@i+1,c
  5062  005FFE  0E00               	movlw	0
  5063  006000  6E37               	movwf	SENO_GENERAR_2@i,c
  5064  006002  5038               	movf	SENO_GENERAR_2@i+1,w,c
  5065  006004  0A80               	xorlw	128
  5066  006006  0F80               	addlw	-128
  5067  006008  0E12               	movlw	18
  5068  00600A  B4D8               	btfsc	status,2,c
  5069  00600C  5C37               	subwf	SENO_GENERAR_2@i,w,c
  5070  00600E  B0D8               	btfsc	status,0,c
  5071  006010  D01A               	goto	l287
  5072                           
  5073                           ;SENO.c: 65: {
  5074                           ;SENO.c: 66: PWM(1, seno[i]);
  5075  006012  0E00               	movlw	0
  5076  006014  6E0A               	movwf	PWM@canal+1,c
  5077  006016  0E01               	movlw	1
  5078  006018  6E09               	movwf	PWM@canal,c
  5079  00601A  0E13               	movlw	low SENO_GENERAR_2@seno
  5080  00601C  6E11               	movwf	??_SENO_GENERAR_2& (0+255),c
  5081  00601E  0E00               	movlw	high SENO_GENERAR_2@seno
  5082  006020  6E12               	movwf	(??_SENO_GENERAR_2+1)& (0+255),c
  5083  006022  90D8               	bcf	status,0,c
  5084  006024  3437               	rlcf	SENO_GENERAR_2@i,w,c
  5085  006026  6ED9               	movwf	fsr2l,c
  5086  006028  3438               	rlcf	SENO_GENERAR_2@i+1,w,c
  5087  00602A  6EDA               	movwf	fsr2h,c
  5088  00602C  5011               	movf	??_SENO_GENERAR_2,w,c
  5089  00602E  26D9               	addwf	fsr2l,f,c
  5090  006030  5012               	movf	??_SENO_GENERAR_2+1,w,c
  5091  006032  22DA               	addwfc	fsr2h,f,c
  5092  006034  CFDE F00B          	movff	postinc2,PWM@duty
  5093  006038  CFDD F00C          	movff	postdec2,PWM@duty+1
  5094  00603C  EC06  F031         	call	_PWM	;wreg free
  5095  006040  4A37               	infsnz	SENO_GENERAR_2@i,f,c
  5096  006042  2A38               	incf	SENO_GENERAR_2@i+1,f,c
  5097  006044  D7DE               	goto	L16
  5098  006046                     l287:
  5099  006046  A080               	btfss	3968,0,c	;volatile
  5100                           
  5101                           ;SENO.c: 67: }
  5102                           ;SENO.c: 68: }
  5103                           ;SENO.c: 69: return;
  5104  006048  0012               	return	
  5105  00604A  D7D7               	goto	l2736
  5106  00604C                     __end_of_SENO_GENERAR_2:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           postinc0	equ	0xFEE
  5115                           wreg	equ	0xFE8
  5116                           postinc1	equ	0xFE6
  5117                           postdec1	equ	0xFE5
  5118                           fsr1l	equ	0xFE1
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _SENO_GENERAR_1 *****************
  5126 ;; Defined at:
  5127 ;;		line 37 in file "SENO.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  seno           40   18[COMRAM] int [20]
  5132 ;;  i               2   58[COMRAM] int 
  5133 ;;  j               2    0        int 
  5134 ;;  calculos        2    0        int 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;		None               void
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:        42       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5147 ;;      Totals:        44       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:       44 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    2
  5151 ;; This function calls:
  5152 ;;		_PWM
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text9
  5159  005F78                     __ptext9:
  5160                           	opt stack 0
  5161  005F78                     _SENO_GENERAR_1:
  5162                           	opt stack 28
  5163                           
  5164                           ;SENO.c: 39: OSCCON= 0b01100111;
  5165                           
  5166                           ;incstack = 0
  5167  005F78  0E67               	movlw	103
  5168  005F7A  6ED3               	movwf	4051,c	;volatile
  5169                           
  5170                           ;SENO.c: 42: int calculos;
  5171                           ;SENO.c: 43: int seno [20]= {50,35,21,10, 2, 0, 2,10, 21, 35, 50, 65, 79, 90, 98, 100, 9
      +                          8, 90, 79, 65};
  5172  005F7C  EE21  F000         	lfsr	2,SENO_GENERAR_1@F7362
  5173  005F80  EE10  F013         	lfsr	1,SENO_GENERAR_1@seno
  5174  005F84  0E28               	movlw	40
  5175  005F86                     u2181:
  5176  005F86  CFDE FFE6          	movff	postinc2,postinc1
  5177  005F8A  2EE8               	decfsz	wreg,f,c
  5178  005F8C  D7FC               	goto	u2181
  5179                           
  5180                           ;SENO.c: 45: int i,j;
  5181                           ;SENO.c: 46: while(PORTAbits.RA0==1){
  5182  005F8E  D026               	goto	l277
  5183  005F90                     l2720:
  5184                           
  5185                           ;SENO.c: 47: for (i=0;i<20;i++)
  5186  005F90  0E00               	movlw	0
  5187  005F92  6E3C               	movwf	SENO_GENERAR_1@i+1,c
  5188  005F94  0E00               	movlw	0
  5189  005F96  6E3B               	movwf	SENO_GENERAR_1@i,c
  5190  005F98  503C               	movf	SENO_GENERAR_1@i+1,w,c
  5191  005F9A  0A80               	xorlw	128
  5192  005F9C  0F80               	addlw	-128
  5193  005F9E  0E14               	movlw	20
  5194  005FA0  B4D8               	btfsc	status,2,c
  5195  005FA2  5C3B               	subwf	SENO_GENERAR_1@i,w,c
  5196  005FA4  B0D8               	btfsc	status,0,c
  5197  005FA6  D01A               	goto	l277
  5198                           
  5199                           ;SENO.c: 48: {
  5200                           ;SENO.c: 49: PWM(1, seno[i]);
  5201  005FA8  0E00               	movlw	0
  5202  005FAA  6E0A               	movwf	PWM@canal+1,c
  5203  005FAC  0E01               	movlw	1
  5204  005FAE  6E09               	movwf	PWM@canal,c
  5205  005FB0  0E13               	movlw	low SENO_GENERAR_1@seno
  5206  005FB2  6E11               	movwf	??_SENO_GENERAR_1& (0+255),c
  5207  005FB4  0E00               	movlw	high SENO_GENERAR_1@seno
  5208  005FB6  6E12               	movwf	(??_SENO_GENERAR_1+1)& (0+255),c
  5209  005FB8  90D8               	bcf	status,0,c
  5210  005FBA  343B               	rlcf	SENO_GENERAR_1@i,w,c
  5211  005FBC  6ED9               	movwf	fsr2l,c
  5212  005FBE  343C               	rlcf	SENO_GENERAR_1@i+1,w,c
  5213  005FC0  6EDA               	movwf	fsr2h,c
  5214  005FC2  5011               	movf	??_SENO_GENERAR_1,w,c
  5215  005FC4  26D9               	addwf	fsr2l,f,c
  5216  005FC6  5012               	movf	??_SENO_GENERAR_1+1,w,c
  5217  005FC8  22DA               	addwfc	fsr2h,f,c
  5218  005FCA  CFDE F00B          	movff	postinc2,PWM@duty
  5219  005FCE  CFDD F00C          	movff	postdec2,PWM@duty+1
  5220  005FD2  EC06  F031         	call	_PWM	;wreg free
  5221  005FD6  4A3B               	infsnz	SENO_GENERAR_1@i,f,c
  5222  005FD8  2A3C               	incf	SENO_GENERAR_1@i+1,f,c
  5223  005FDA  D7DE               	goto	L17
  5224  005FDC                     l277:
  5225  005FDC  A080               	btfss	3968,0,c	;volatile
  5226                           
  5227                           ;SENO.c: 50: }
  5228                           ;SENO.c: 51: }
  5229                           ;SENO.c: 52: return;
  5230  005FDE  0012               	return	
  5231  005FE0  D7D7               	goto	l2720
  5232  005FE2                     __end_of_SENO_GENERAR_1:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           postinc0	equ	0xFEE
  5241                           wreg	equ	0xFE8
  5242                           postinc1	equ	0xFE6
  5243                           postdec1	equ	0xFE5
  5244                           fsr1l	equ	0xFE1
  5245                           postinc2	equ	0xFDE
  5246                           postdec2	equ	0xFDD
  5247                           fsr2h	equ	0xFDA
  5248                           fsr2l	equ	0xFD9
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function _PWM *****************
  5252 ;; Defined at:
  5253 ;;		line 11 in file "SENO.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  canal           2    8[COMRAM] int 
  5256 ;;  duty            2   10[COMRAM] int 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  calculos        2   14[COMRAM] int 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, prodl, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5268 ;;      Params:         4       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5271 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:        8 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    1
  5275 ;; This function calls:
  5276 ;;		___awdiv
  5277 ;; This function is called by:
  5278 ;;		_SENO_GENERAR_1
  5279 ;;		_SENO_GENERAR_2
  5280 ;;		_SENO_GENERAR_3
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text10
  5285  00620C                     __ptext10:
  5286                           	opt stack 0
  5287  00620C                     _PWM:
  5288                           	opt stack 28
  5289                           
  5290                           ;SENO.c: 15: calculos= 3;
  5291                           
  5292                           ;incstack = 0
  5293  00620C  0E00               	movlw	0
  5294  00620E  6E10               	movwf	PWM@calculos+1,c
  5295  006210  0E03               	movlw	3
  5296  006212  6E0F               	movwf	PWM@calculos,c
  5297                           
  5298                           ;SENO.c: 16: } T2CONbits.T2CKPS0=0;
  5299  006214  90BA               	bcf	4026,0,c	;volatile
  5300                           
  5301                           ;SENO.c: 17: T2CONbits.T2CKPS1=0;
  5302  006216  92BA               	bcf	4026,1,c	;volatile
  5303                           
  5304                           ;SENO.c: 18: PR2= calculos;
  5305  006218  C00F  FFBB         	movff	PWM@calculos,4027	;volatile
  5306                           
  5307                           ;SENO.c: 19: calculos= duty*8;
  5308  00621C  C00B  F00D         	movff	PWM@duty,??_PWM
  5309  006220  C00C  F00E         	movff	PWM@duty+1,??_PWM+1
  5310  006224  90D8               	bcf	status,0,c
  5311  006226  360D               	rlcf	??_PWM,f,c
  5312  006228  360E               	rlcf	??_PWM+1,f,c
  5313  00622A  90D8               	bcf	status,0,c
  5314  00622C  360D               	rlcf	??_PWM,f,c
  5315  00622E  360E               	rlcf	??_PWM+1,f,c
  5316  006230  90D8               	bcf	status,0,c
  5317  006232  360D               	rlcf	??_PWM,f,c
  5318  006234  360E               	rlcf	??_PWM+1,f,c
  5319  006236  C00D  F00F         	movff	??_PWM,PWM@calculos
  5320  00623A  C00E  F010         	movff	??_PWM+1,PWM@calculos+1
  5321                           
  5322                           ;SENO.c: 20: calculos= calculos/100;
  5323  00623E  C00F  F001         	movff	PWM@calculos,___awdiv@dividend
  5324  006242  C010  F002         	movff	PWM@calculos+1,___awdiv@dividend+1
  5325  006246  0E00               	movlw	0
  5326  006248  6E04               	movwf	___awdiv@divisor+1,c
  5327  00624A  0E64               	movlw	100
  5328  00624C  6E03               	movwf	___awdiv@divisor,c
  5329  00624E  ECE4  F031         	call	___awdiv	;wreg free
  5330  006252  C001  F00F         	movff	?___awdiv,PWM@calculos
  5331  006256  C002  F010         	movff	?___awdiv+1,PWM@calculos+1
  5332                           
  5333                           ;SENO.c: 22: BIT= calculos;
  5334  00625A  0100               	movlb	(PWM@BIT/(0+8)) shr (0+8)
  5335  00625C  9044               	bcf	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5336  00625E  B00F               	btfsc	PWM@calculos,0,c
  5337  006260  8044               	bsf	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5338                           
  5339                           ;SENO.c: 23: CCP1CONbits.DC1B0=BIT;
  5340  006262  0100               	movlb	(PWM@BIT/(0+8)) shr (0+8)
  5341  006264  A044               	btfss	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5342  006266  D002               	bra	u1795
  5343  006268  88BD               	bsf	4029,4,c	;volatile
  5344  00626A  D001               	bra	u1797
  5345  00626C                     u1795:
  5346  00626C  98BD               	bcf	4029,4,c	;volatile
  5347  00626E                     u1797:
  5348                           
  5349                           ;SENO.c: 25: BIT=calculos;
  5350  00626E  0100               	movlb	(PWM@BIT/(0+8)) shr (0+8)
  5351  006270  9044               	bcf	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5352  006272  B00F               	btfsc	PWM@calculos,0,c
  5353  006274  8044               	bsf	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5354                           
  5355                           ;SENO.c: 26: CCP1CONbits.DC1B1=BIT;
  5356  006276  0100               	movlb	(PWM@BIT/(0+8)) shr (0+8)
  5357  006278  A044               	btfss	PWM@BIT/(0+8),PWM@BIT& (0+7),c
  5358  00627A  D002               	bra	u1815
  5359  00627C  8ABD               	bsf	4029,5,c	;volatile
  5360  00627E  D001               	bra	u1817
  5361  006280                     u1815:
  5362  006280  9ABD               	bcf	4029,5,c	;volatile
  5363  006282                     u1817:
  5364                           
  5365                           ;SENO.c: 27: CCPR1L=calculos >>1;
  5366  006282  3410               	rlcf	PWM@calculos+1,w,c
  5367  006284  3010               	rrcf	PWM@calculos+1,w,c
  5368  006286  6E0E               	movwf	(??_PWM+1)& (0+255),c
  5369  006288  300F               	rrcf	PWM@calculos,w,c
  5370  00628A  6E0D               	movwf	??_PWM& (0+255),c
  5371  00628C  500D               	movf	??_PWM,w,c
  5372  00628E  6EBE               	movwf	4030,c	;volatile
  5373                           
  5374                           ;SENO.c: 28: TRISCbits.RC2=0;
  5375  006290  9494               	bcf	3988,2,c	;volatile
  5376                           
  5377                           ;SENO.c: 29: CCP1CONbits.CCP1M3=1;
  5378  006292  86BD               	bsf	4029,3,c	;volatile
  5379                           
  5380                           ;SENO.c: 30: CCP1CONbits.CCP1M2=1;
  5381  006294  84BD               	bsf	4029,2,c	;volatile
  5382                           
  5383                           ;SENO.c: 31: CCP1CONbits.CCP1M1=0;
  5384  006296  92BD               	bcf	4029,1,c	;volatile
  5385                           
  5386                           ;SENO.c: 32: CCP1CONbits.CCP1M0=0;
  5387  006298  90BD               	bcf	4029,0,c	;volatile
  5388                           
  5389                           ;SENO.c: 33: T2CONbits.TMR2ON=1;
  5390  00629A  84BA               	bsf	4026,2,c	;volatile
  5391  00629C  0012               	return	
  5392  00629E                     __end_of_PWM:
  5393                           	opt stack 0
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           prodh	equ	0xFF4
  5399                           prodl	equ	0xFF3
  5400                           postinc0	equ	0xFEE
  5401                           wreg	equ	0xFE8
  5402                           postinc1	equ	0xFE6
  5403                           postdec1	equ	0xFE5
  5404                           fsr1l	equ	0xFE1
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function ___awdiv *****************
  5412 ;; Defined at:
  5413 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awdiv.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  dividend        2    0[COMRAM] int 
  5416 ;;  divisor         2    2[COMRAM] int 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  quotient        2    6[COMRAM] int 
  5419 ;;  sign            1    5[COMRAM] unsigned char 
  5420 ;;  counter         1    4[COMRAM] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  2    0[COMRAM] int 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0, prodl
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5430 ;;      Params:         4       0       0       0       0       0       0       0       0
  5431 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5433 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5434 ;;Total ram usage:        8 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_PWM
  5440 ;;		_PWM_1
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text11
  5445  0063C8                     __ptext11:
  5446                           	opt stack 0
  5447  0063C8                     ___awdiv:
  5448                           	opt stack 28
  5449                           
  5450                           ;incstack = 0
  5451  0063C8  0E00               	movlw	0
  5452  0063CA  6E06               	movwf	___awdiv@sign,c
  5453  0063CC  5004               	movf	___awdiv@divisor+1,w,c
  5454  0063CE  0A80               	xorlw	128
  5455  0063D0  6EF3               	movwf	prodl,c
  5456  0063D2  0E80               	movlw	128
  5457  0063D4  5CF3               	subwf	prodl,w,c
  5458  0063D6  0E00               	movlw	0
  5459  0063D8  B4D8               	btfsc	status,2,c
  5460  0063DA  5C03               	subwf	___awdiv@divisor,w,c
  5461  0063DC  B0D8               	btfsc	status,0,c
  5462  0063DE  D006               	goto	l2238
  5463  0063E0  6C03               	negf	___awdiv@divisor,c
  5464  0063E2  1E04               	comf	___awdiv@divisor+1,f,c
  5465  0063E4  B0D8               	btfsc	status,0,c
  5466  0063E6  2A04               	incf	___awdiv@divisor+1,f,c
  5467  0063E8  0E01               	movlw	1
  5468  0063EA  6E06               	movwf	___awdiv@sign,c
  5469  0063EC                     l2238:
  5470  0063EC  5002               	movf	___awdiv@dividend+1,w,c
  5471  0063EE  0A80               	xorlw	128
  5472  0063F0  6EF3               	movwf	prodl,c
  5473  0063F2  0E80               	movlw	128
  5474  0063F4  5CF3               	subwf	prodl,w,c
  5475  0063F6  0E00               	movlw	0
  5476  0063F8  B4D8               	btfsc	status,2,c
  5477  0063FA  5C01               	subwf	___awdiv@dividend,w,c
  5478  0063FC  B0D8               	btfsc	status,0,c
  5479  0063FE  D006               	goto	l2244
  5480  006400  6C01               	negf	___awdiv@dividend,c
  5481  006402  1E02               	comf	___awdiv@dividend+1,f,c
  5482  006404  B0D8               	btfsc	status,0,c
  5483  006406  2A02               	incf	___awdiv@dividend+1,f,c
  5484  006408  0E01               	movlw	1
  5485  00640A  1A06               	xorwf	___awdiv@sign,f,c
  5486  00640C                     l2244:
  5487  00640C  0E00               	movlw	0
  5488  00640E  6E08               	movwf	___awdiv@quotient+1,c
  5489  006410  0E00               	movlw	0
  5490  006412  6E07               	movwf	___awdiv@quotient,c
  5491  006414  5004               	movf	___awdiv@divisor+1,w,c
  5492  006416  1003               	iorwf	___awdiv@divisor,w,c
  5493  006418  B4D8               	btfsc	status,2,c
  5494  00641A  D01C               	goto	l2266
  5495  00641C  0E01               	movlw	1
  5496  00641E  6E05               	movwf	___awdiv@counter,c
  5497  006420  D004               	goto	l2252
  5498  006422                     l2250:
  5499  006422  90D8               	bcf	status,0,c
  5500  006424  3603               	rlcf	___awdiv@divisor,f,c
  5501  006426  3604               	rlcf	___awdiv@divisor+1,f,c
  5502  006428  2A05               	incf	___awdiv@counter,f,c
  5503  00642A                     l2252:
  5504  00642A  AE04               	btfss	___awdiv@divisor+1,7,c
  5505  00642C  D7FA               	goto	l2250
  5506  00642E                     l2254:
  5507  00642E  90D8               	bcf	status,0,c
  5508  006430  3607               	rlcf	___awdiv@quotient,f,c
  5509  006432  3608               	rlcf	___awdiv@quotient+1,f,c
  5510  006434  5003               	movf	___awdiv@divisor,w,c
  5511  006436  5C01               	subwf	___awdiv@dividend,w,c
  5512  006438  5004               	movf	___awdiv@divisor+1,w,c
  5513  00643A  5802               	subwfb	___awdiv@dividend+1,w,c
  5514  00643C  A0D8               	btfss	status,0,c
  5515  00643E  D005               	goto	l2262
  5516  006440  5003               	movf	___awdiv@divisor,w,c
  5517  006442  5E01               	subwf	___awdiv@dividend,f,c
  5518  006444  5004               	movf	___awdiv@divisor+1,w,c
  5519  006446  5A02               	subwfb	___awdiv@dividend+1,f,c
  5520  006448  8007               	bsf	___awdiv@quotient,0,c
  5521  00644A                     l2262:
  5522  00644A  90D8               	bcf	status,0,c
  5523  00644C  3204               	rrcf	___awdiv@divisor+1,f,c
  5524  00644E  3203               	rrcf	___awdiv@divisor,f,c
  5525  006450  2E05               	decfsz	___awdiv@counter,f,c
  5526  006452  D7ED               	goto	l2254
  5527  006454                     l2266:
  5528  006454  5006               	movf	___awdiv@sign,w,c
  5529  006456  B4D8               	btfsc	status,2,c
  5530  006458  D004               	goto	l2270
  5531  00645A  6C07               	negf	___awdiv@quotient,c
  5532  00645C  1E08               	comf	___awdiv@quotient+1,f,c
  5533  00645E  B0D8               	btfsc	status,0,c
  5534  006460  2A08               	incf	___awdiv@quotient+1,f,c
  5535  006462                     l2270:
  5536  006462  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5537  006466  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5538  00646A  0012               	return	
  5539  00646C                     __end_of___awdiv:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           postinc0	equ	0xFEE
  5548                           wreg	equ	0xFE8
  5549                           postinc1	equ	0xFE6
  5550                           postdec1	equ	0xFE5
  5551                           fsr1l	equ	0xFE1
  5552                           postinc2	equ	0xFDE
  5553                           postdec2	equ	0xFDD
  5554                           fsr2h	equ	0xFDA
  5555                           fsr2l	equ	0xFD9
  5556                           status	equ	0xFD8
  5557                           
  5558 ;; *************** function _PWM_generar *****************
  5559 ;; Defined at:
  5560 ;;		line 10 in file "PWM.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  duty            2   13[COMRAM] unsigned int 
  5563 ;;  fpwm            2   15[COMRAM] unsigned int 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  AuxCCPR2L       4   29[COMRAM] unsigned long 
  5566 ;;  PR2cal          4   25[COMRAM] unsigned long 
  5567 ;;  AuxCCP2CON      2   23[COMRAM] unsigned int 
  5568 ;;  prescalador     2   21[COMRAM] unsigned int 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;		None               void
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5578 ;;      Params:         4       0       0       0       0       0       0       0       0
  5579 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5580 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5581 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5582 ;;Total ram usage:       20 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    1
  5585 ;; This function calls:
  5586 ;;		___lldiv
  5587 ;;		___lmul
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text12
  5594  006B90                     __ptext12:
  5595                           	opt stack 0
  5596  006B90                     _PWM_generar:
  5597                           	opt stack 29
  5598                           
  5599                           ;PWM.c: 17: TRISCbits.RC1=0;
  5600                           
  5601                           ;incstack = 0
  5602  006B90  9294               	bcf	3988,1,c	;volatile
  5603                           
  5604                           ;PWM.c: 18: ANSELC=0;
  5605  006B92  0E00               	movlw	0
  5606  006B94  010F               	movlb	15	; () banked
  5607  006B96  6F5D               	movwf	93,b	;volatile
  5608                           
  5609                           ;PWM.c: 19: unsigned int prescalador=1;
  5610  006B98  0E00               	movlw	0
  5611  006B9A  6E17               	movwf	PWM_generar@prescalador+1,c
  5612  006B9C  0E01               	movlw	1
  5613  006B9E  6E16               	movwf	PWM_generar@prescalador,c
  5614                           
  5615                           ;PWM.c: 20: unsigned long PR2cal= 8000000;
  5616  006BA0  0E00               	movlw	0
  5617  006BA2  6E1A               	movwf	PWM_generar@PR2cal,c
  5618  006BA4  0E12               	movlw	18
  5619  006BA6  6E1B               	movwf	PWM_generar@PR2cal+1,c
  5620  006BA8  0E7A               	movlw	122
  5621  006BAA  6E1C               	movwf	PWM_generar@PR2cal+2,c
  5622  006BAC  0E00               	movlw	0
  5623  006BAE  6E1D               	movwf	PWM_generar@PR2cal+3,c
  5624                           
  5625                           ; BSR set to: 15
  5626                           ;PWM.c: 21: PR2cal=PR2cal/fpwm;
  5627  006BB0  C01A  F001         	movff	PWM_generar@PR2cal,___lldiv@dividend
  5628  006BB4  C01B  F002         	movff	PWM_generar@PR2cal+1,___lldiv@dividend+1
  5629  006BB8  C01C  F003         	movff	PWM_generar@PR2cal+2,___lldiv@dividend+2
  5630  006BBC  C01D  F004         	movff	PWM_generar@PR2cal+3,___lldiv@dividend+3
  5631  006BC0  C010  F005         	movff	PWM_generar@fpwm,___lldiv@divisor
  5632  006BC4  C011  F006         	movff	PWM_generar@fpwm+1,___lldiv@divisor+1
  5633  006BC8  6A07               	clrf	___lldiv@divisor+2,c
  5634  006BCA  6A08               	clrf	___lldiv@divisor+3,c
  5635  006BCC  ECC5  F030         	call	___lldiv	;wreg free
  5636  006BD0  C001  F01A         	movff	?___lldiv,PWM_generar@PR2cal
  5637  006BD4  C002  F01B         	movff	?___lldiv+1,PWM_generar@PR2cal+1
  5638  006BD8  C003  F01C         	movff	?___lldiv+2,PWM_generar@PR2cal+2
  5639  006BDC  C004  F01D         	movff	?___lldiv+3,PWM_generar@PR2cal+3
  5640                           
  5641                           ;PWM.c: 22: PR2cal=PR2cal/4;
  5642  006BE0  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  5643  006BE4  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  5644  006BE8  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  5645  006BEC  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  5646  006BF0  0E03               	movlw	3
  5647  006BF2  D005               	goto	u2130
  5648  006BF4                     u2135:
  5649  006BF4  90D8               	bcf	status,0,c
  5650  006BF6  3215               	rrcf	??_PWM_generar+3,f,c
  5651  006BF8  3214               	rrcf	??_PWM_generar+2,f,c
  5652  006BFA  3213               	rrcf	??_PWM_generar+1,f,c
  5653  006BFC  3212               	rrcf	??_PWM_generar,f,c
  5654  006BFE                     u2130:
  5655  006BFE  2EE8               	decfsz	wreg,f,c
  5656  006C00  D7F9               	goto	u2135
  5657  006C02  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  5658  006C06  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  5659  006C0A  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  5660  006C0E  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  5661                           
  5662                           ;PWM.c: 23: T2CON=0b00000000;
  5663  006C12  0E00               	movlw	0
  5664  006C14  6EBA               	movwf	4026,c	;volatile
  5665                           
  5666                           ;PWM.c: 24: while(PR2cal>256){
  5667  006C16  D028               	goto	l2686
  5668  006C18                     l2682:
  5669                           
  5670                           ;PWM.c: 25: prescalador=prescalador*4;
  5671  006C18  C016  F012         	movff	PWM_generar@prescalador,??_PWM_generar
  5672  006C1C  C017  F013         	movff	PWM_generar@prescalador+1,??_PWM_generar+1
  5673  006C20  90D8               	bcf	status,0,c
  5674  006C22  3612               	rlcf	??_PWM_generar,f,c
  5675  006C24  3613               	rlcf	??_PWM_generar+1,f,c
  5676  006C26  90D8               	bcf	status,0,c
  5677  006C28  3612               	rlcf	??_PWM_generar,f,c
  5678  006C2A  3613               	rlcf	??_PWM_generar+1,f,c
  5679  006C2C  C012  F016         	movff	??_PWM_generar,PWM_generar@prescalador
  5680  006C30  C013  F017         	movff	??_PWM_generar+1,PWM_generar@prescalador+1
  5681                           
  5682                           ;PWM.c: 26: T2CON++;
  5683  006C34  2ABA               	incf	4026,f,c	;volatile
  5684                           
  5685                           ;PWM.c: 27: PR2cal=PR2cal/4;
  5686  006C36  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  5687  006C3A  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  5688  006C3E  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  5689  006C42  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  5690  006C46  0E03               	movlw	3
  5691  006C48  D005               	goto	u2140
  5692  006C4A                     u2145:
  5693  006C4A  90D8               	bcf	status,0,c
  5694  006C4C  3215               	rrcf	??_PWM_generar+3,f,c
  5695  006C4E  3214               	rrcf	??_PWM_generar+2,f,c
  5696  006C50  3213               	rrcf	??_PWM_generar+1,f,c
  5697  006C52  3212               	rrcf	??_PWM_generar,f,c
  5698  006C54                     u2140:
  5699  006C54  2EE8               	decfsz	wreg,f,c
  5700  006C56  D7F9               	goto	u2145
  5701  006C58  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  5702  006C5C  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  5703  006C60  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  5704  006C64  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  5705  006C68                     l2686:
  5706  006C68  0E01               	movlw	1
  5707  006C6A  6E12               	movwf	??_PWM_generar& (0+255),c
  5708  006C6C  0E01               	movlw	1
  5709  006C6E  6E13               	movwf	(??_PWM_generar+1)& (0+255),c
  5710  006C70  0E00               	movlw	0
  5711  006C72  6E14               	movwf	(??_PWM_generar+2)& (0+255),c
  5712  006C74  0E00               	movlw	0
  5713  006C76  6E15               	movwf	(??_PWM_generar+3)& (0+255),c
  5714  006C78  5012               	movf	??_PWM_generar,w,c
  5715  006C7A  5C1A               	subwf	PWM_generar@PR2cal,w,c
  5716  006C7C  5013               	movf	??_PWM_generar+1,w,c
  5717  006C7E  581B               	subwfb	PWM_generar@PR2cal+1,w,c
  5718  006C80  5014               	movf	??_PWM_generar+2,w,c
  5719  006C82  581C               	subwfb	PWM_generar@PR2cal+2,w,c
  5720  006C84  5015               	movf	??_PWM_generar+3,w,c
  5721  006C86  581D               	subwfb	PWM_generar@PR2cal+3,w,c
  5722  006C88  B0D8               	btfsc	status,0,c
  5723  006C8A  D7C6               	goto	l2682
  5724                           
  5725                           ;PWM.c: 28: }
  5726                           ;PWM.c: 29: PR2cal--;
  5727  006C8C  061A               	decf	PWM_generar@PR2cal,f,c
  5728  006C8E  0E00               	movlw	0
  5729  006C90  5A1B               	subwfb	PWM_generar@PR2cal+1,f,c
  5730  006C92  5A1C               	subwfb	PWM_generar@PR2cal+2,f,c
  5731  006C94  5A1D               	subwfb	PWM_generar@PR2cal+3,f,c
  5732                           
  5733                           ;PWM.c: 30: PR2=PR2cal;
  5734  006C96  C01A  FFBB         	movff	PWM_generar@PR2cal,4027	;volatile
  5735                           
  5736                           ;PWM.c: 37: unsigned long AuxCCPR2L=PR2cal;
  5737  006C9A  C01A  F01E         	movff	PWM_generar@PR2cal,PWM_generar@AuxCCPR2L
  5738  006C9E  C01B  F01F         	movff	PWM_generar@PR2cal+1,PWM_generar@AuxCCPR2L+1
  5739  006CA2  C01C  F020         	movff	PWM_generar@PR2cal+2,PWM_generar@AuxCCPR2L+2
  5740  006CA6  C01D  F021         	movff	PWM_generar@PR2cal+3,PWM_generar@AuxCCPR2L+3
  5741                           
  5742                           ;PWM.c: 38: AuxCCPR2L++;
  5743  006CAA  0E01               	movlw	1
  5744  006CAC  261E               	addwf	PWM_generar@AuxCCPR2L,f,c
  5745  006CAE  0E00               	movlw	0
  5746  006CB0  221F               	addwfc	PWM_generar@AuxCCPR2L+1,f,c
  5747  006CB2  2220               	addwfc	PWM_generar@AuxCCPR2L+2,f,c
  5748  006CB4  2221               	addwfc	PWM_generar@AuxCCPR2L+3,f,c
  5749                           
  5750                           ;PWM.c: 39: AuxCCPR2L=AuxCCPR2L*duty;
  5751  006CB6  C00E  F001         	movff	PWM_generar@duty,___lmul@multiplier
  5752  006CBA  C00F  F002         	movff	PWM_generar@duty+1,___lmul@multiplier+1
  5753  006CBE  6A03               	clrf	___lmul@multiplier+2,c
  5754  006CC0  6A04               	clrf	___lmul@multiplier+3,c
  5755  006CC2  C01E  F005         	movff	PWM_generar@AuxCCPR2L,___lmul@multiplicand
  5756  006CC6  C01F  F006         	movff	PWM_generar@AuxCCPR2L+1,___lmul@multiplicand+1
  5757  006CCA  C020  F007         	movff	PWM_generar@AuxCCPR2L+2,___lmul@multiplicand+2
  5758  006CCE  C021  F008         	movff	PWM_generar@AuxCCPR2L+3,___lmul@multiplicand+3
  5759  006CD2  ECFA  F02E         	call	___lmul	;wreg free
  5760  006CD6  C001  F01E         	movff	?___lmul,PWM_generar@AuxCCPR2L
  5761  006CDA  C002  F01F         	movff	?___lmul+1,PWM_generar@AuxCCPR2L+1
  5762  006CDE  C003  F020         	movff	?___lmul+2,PWM_generar@AuxCCPR2L+2
  5763  006CE2  C004  F021         	movff	?___lmul+3,PWM_generar@AuxCCPR2L+3
  5764                           
  5765                           ;PWM.c: 40: AuxCCPR2L=AuxCCPR2L*4;
  5766  006CE6  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  5767  006CEA  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  5768  006CEE  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  5769  006CF2  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  5770  006CF6  0E02               	movlw	2
  5771  006CF8                     u2165:
  5772  006CF8  90D8               	bcf	status,0,c
  5773  006CFA  3612               	rlcf	??_PWM_generar,f,c
  5774  006CFC  3613               	rlcf	??_PWM_generar+1,f,c
  5775  006CFE  3614               	rlcf	??_PWM_generar+2,f,c
  5776  006D00  3615               	rlcf	??_PWM_generar+3,f,c
  5777  006D02  2EE8               	decfsz	wreg,f,c
  5778  006D04  D7F9               	goto	u2165
  5779  006D06  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  5780  006D0A  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  5781  006D0E  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  5782  006D12  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  5783                           
  5784                           ;PWM.c: 41: AuxCCPR2L=AuxCCPR2L/100;
  5785  006D16  C01E  F001         	movff	PWM_generar@AuxCCPR2L,___lldiv@dividend
  5786  006D1A  C01F  F002         	movff	PWM_generar@AuxCCPR2L+1,___lldiv@dividend+1
  5787  006D1E  C020  F003         	movff	PWM_generar@AuxCCPR2L+2,___lldiv@dividend+2
  5788  006D22  C021  F004         	movff	PWM_generar@AuxCCPR2L+3,___lldiv@dividend+3
  5789  006D26  0E64               	movlw	100
  5790  006D28  6E05               	movwf	___lldiv@divisor,c
  5791  006D2A  0E00               	movlw	0
  5792  006D2C  6E06               	movwf	___lldiv@divisor+1,c
  5793  006D2E  0E00               	movlw	0
  5794  006D30  6E07               	movwf	___lldiv@divisor+2,c
  5795  006D32  0E00               	movlw	0
  5796  006D34  6E08               	movwf	___lldiv@divisor+3,c
  5797  006D36  ECC5  F030         	call	___lldiv	;wreg free
  5798  006D3A  C001  F01E         	movff	?___lldiv,PWM_generar@AuxCCPR2L
  5799  006D3E  C002  F01F         	movff	?___lldiv+1,PWM_generar@AuxCCPR2L+1
  5800  006D42  C003  F020         	movff	?___lldiv+2,PWM_generar@AuxCCPR2L+2
  5801  006D46  C004  F021         	movff	?___lldiv+3,PWM_generar@AuxCCPR2L+3
  5802                           
  5803                           ;PWM.c: 42: unsigned int AuxCCP2CON= AuxCCPR2L;
  5804  006D4A  C01E  F018         	movff	PWM_generar@AuxCCPR2L,PWM_generar@AuxCCP2CON
  5805  006D4E  C01F  F019         	movff	PWM_generar@AuxCCPR2L+1,PWM_generar@AuxCCP2CON+1
  5806                           
  5807                           ;PWM.c: 43: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  5808  006D52  0E03               	movlw	3
  5809  006D54  1418               	andwf	PWM_generar@AuxCCP2CON,w,c
  5810  006D56  6E18               	movwf	PWM_generar@AuxCCP2CON,c
  5811  006D58  6A19               	clrf	PWM_generar@AuxCCP2CON+1,c
  5812                           
  5813                           ;PWM.c: 44: AuxCCP2CON= AuxCCP2CON*16;
  5814  006D5A  C018  F012         	movff	PWM_generar@AuxCCP2CON,??_PWM_generar
  5815  006D5E  C019  F013         	movff	PWM_generar@AuxCCP2CON+1,??_PWM_generar+1
  5816  006D62  3A12               	swapf	??_PWM_generar,f,c
  5817  006D64  3A13               	swapf	??_PWM_generar+1,f,c
  5818  006D66  0EF0               	movlw	240
  5819  006D68  1613               	andwf	??_PWM_generar+1,f,c
  5820  006D6A  5012               	movf	??_PWM_generar,w,c
  5821  006D6C  0B0F               	andlw	15
  5822  006D6E  1213               	iorwf	??_PWM_generar+1,f,c
  5823  006D70  0EF0               	movlw	240
  5824  006D72  1612               	andwf	??_PWM_generar,f,c
  5825  006D74  C012  F018         	movff	??_PWM_generar,PWM_generar@AuxCCP2CON
  5826  006D78  C013  F019         	movff	??_PWM_generar+1,PWM_generar@AuxCCP2CON+1
  5827                           
  5828                           ;PWM.c: 45: CCP2CON= 0b00001100;
  5829  006D7C  0E0C               	movlw	12
  5830  006D7E  6E97               	movwf	3991,c	;volatile
  5831                           
  5832                           ;PWM.c: 46: CCP2CON= CCP2CON|AuxCCP2CON;
  5833  006D80  5097               	movf	3991,w,c
  5834  006D82  1018               	iorwf	PWM_generar@AuxCCP2CON,w,c
  5835  006D84  6E97               	movwf	3991,c	;volatile
  5836                           
  5837                           ;PWM.c: 47: AuxCCPR2L=AuxCCPR2L/4;
  5838  006D86  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  5839  006D8A  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  5840  006D8E  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  5841  006D92  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  5842  006D96  0E03               	movlw	3
  5843  006D98  D005               	goto	u2170
  5844  006D9A                     u2175:
  5845  006D9A  90D8               	bcf	status,0,c
  5846  006D9C  3215               	rrcf	??_PWM_generar+3,f,c
  5847  006D9E  3214               	rrcf	??_PWM_generar+2,f,c
  5848  006DA0  3213               	rrcf	??_PWM_generar+1,f,c
  5849  006DA2  3212               	rrcf	??_PWM_generar,f,c
  5850  006DA4                     u2170:
  5851  006DA4  2EE8               	decfsz	wreg,f,c
  5852  006DA6  D7F9               	goto	u2175
  5853  006DA8  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  5854  006DAC  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  5855  006DB0  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  5856  006DB4  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  5857                           
  5858                           ;PWM.c: 48: CCPR2L=AuxCCPR2L;
  5859  006DB8  C01E  FF90         	movff	PWM_generar@AuxCCPR2L,3984	;volatile
  5860                           
  5861                           ;PWM.c: 49: T2CONbits.TMR2ON=1;
  5862  006DBC  84BA               	bsf	4026,2,c	;volatile
  5863                           
  5864                           ;PWM.c: 50: TMR2=0;
  5865  006DBE  0E00               	movlw	0
  5866  006DC0  6EBC               	movwf	4028,c	;volatile
  5867  006DC2  0012               	return	
  5868  006DC4                     __end_of_PWM_generar:
  5869                           	opt stack 0
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           prodh	equ	0xFF4
  5875                           prodl	equ	0xFF3
  5876                           postinc0	equ	0xFEE
  5877                           wreg	equ	0xFE8
  5878                           postinc1	equ	0xFE6
  5879                           postdec1	equ	0xFE5
  5880                           fsr1l	equ	0xFE1
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function ___lldiv *****************
  5888 ;; Defined at:
  5889 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  dividend        4    0[COMRAM] unsigned long 
  5892 ;;  divisor         4    4[COMRAM] unsigned long 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  quotient        4    8[COMRAM] unsigned long 
  5895 ;;  counter         1   12[COMRAM] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  4    0[COMRAM] unsigned long 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5905 ;;      Params:         8       0       0       0       0       0       0       0       0
  5906 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5908 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5909 ;;Total ram usage:       13 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_PWM_generar
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text13
  5919  00618A                     __ptext13:
  5920                           	opt stack 0
  5921  00618A                     ___lldiv:
  5922                           	opt stack 29
  5923                           
  5924                           ;incstack = 0
  5925  00618A  0E00               	movlw	0
  5926  00618C  6E09               	movwf	___lldiv@quotient,c
  5927  00618E  0E00               	movlw	0
  5928  006190  6E0A               	movwf	___lldiv@quotient+1,c
  5929  006192  0E00               	movlw	0
  5930  006194  6E0B               	movwf	___lldiv@quotient+2,c
  5931  006196  0E00               	movlw	0
  5932  006198  6E0C               	movwf	___lldiv@quotient+3,c
  5933  00619A  5008               	movf	___lldiv@divisor+3,w,c
  5934  00619C  1005               	iorwf	___lldiv@divisor,w,c
  5935  00619E  1006               	iorwf	___lldiv@divisor+1,w,c
  5936  0061A0  1007               	iorwf	___lldiv@divisor+2,w,c
  5937  0061A2  B4D8               	btfsc	status,2,c
  5938  0061A4  D02A               	goto	l814
  5939  0061A6  0E01               	movlw	1
  5940  0061A8  6E0D               	movwf	___lldiv@counter,c
  5941  0061AA  D006               	goto	l2486
  5942  0061AC                     l2484:
  5943  0061AC  90D8               	bcf	status,0,c
  5944  0061AE  3605               	rlcf	___lldiv@divisor,f,c
  5945  0061B0  3606               	rlcf	___lldiv@divisor+1,f,c
  5946  0061B2  3607               	rlcf	___lldiv@divisor+2,f,c
  5947  0061B4  3608               	rlcf	___lldiv@divisor+3,f,c
  5948  0061B6  2A0D               	incf	___lldiv@counter,f,c
  5949  0061B8                     l2486:
  5950  0061B8  AE08               	btfss	___lldiv@divisor+3,7,c
  5951  0061BA  D7F8               	goto	l2484
  5952  0061BC                     l2488:
  5953  0061BC  90D8               	bcf	status,0,c
  5954  0061BE  3609               	rlcf	___lldiv@quotient,f,c
  5955  0061C0  360A               	rlcf	___lldiv@quotient+1,f,c
  5956  0061C2  360B               	rlcf	___lldiv@quotient+2,f,c
  5957  0061C4  360C               	rlcf	___lldiv@quotient+3,f,c
  5958  0061C6  5005               	movf	___lldiv@divisor,w,c
  5959  0061C8  5C01               	subwf	___lldiv@dividend,w,c
  5960  0061CA  5006               	movf	___lldiv@divisor+1,w,c
  5961  0061CC  5802               	subwfb	___lldiv@dividend+1,w,c
  5962  0061CE  5007               	movf	___lldiv@divisor+2,w,c
  5963  0061D0  5803               	subwfb	___lldiv@dividend+2,w,c
  5964  0061D2  5008               	movf	___lldiv@divisor+3,w,c
  5965  0061D4  5804               	subwfb	___lldiv@dividend+3,w,c
  5966  0061D6  A0D8               	btfss	status,0,c
  5967  0061D8  D009               	goto	l2496
  5968  0061DA  5005               	movf	___lldiv@divisor,w,c
  5969  0061DC  5E01               	subwf	___lldiv@dividend,f,c
  5970  0061DE  5006               	movf	___lldiv@divisor+1,w,c
  5971  0061E0  5A02               	subwfb	___lldiv@dividend+1,f,c
  5972  0061E2  5007               	movf	___lldiv@divisor+2,w,c
  5973  0061E4  5A03               	subwfb	___lldiv@dividend+2,f,c
  5974  0061E6  5008               	movf	___lldiv@divisor+3,w,c
  5975  0061E8  5A04               	subwfb	___lldiv@dividend+3,f,c
  5976  0061EA  8009               	bsf	___lldiv@quotient,0,c
  5977  0061EC                     l2496:
  5978  0061EC  90D8               	bcf	status,0,c
  5979  0061EE  3208               	rrcf	___lldiv@divisor+3,f,c
  5980  0061F0  3207               	rrcf	___lldiv@divisor+2,f,c
  5981  0061F2  3206               	rrcf	___lldiv@divisor+1,f,c
  5982  0061F4  3205               	rrcf	___lldiv@divisor,f,c
  5983  0061F6  2E0D               	decfsz	___lldiv@counter,f,c
  5984  0061F8  D7E1               	goto	l2488
  5985  0061FA                     l814:
  5986  0061FA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5987  0061FE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5988  006202  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5989  006206  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5990  00620A  0012               	return	
  5991  00620C                     __end_of___lldiv:
  5992                           	opt stack 0
  5993                           tblptru	equ	0xFF8
  5994                           tblptrh	equ	0xFF7
  5995                           tblptrl	equ	0xFF6
  5996                           tablat	equ	0xFF5
  5997                           prodh	equ	0xFF4
  5998                           prodl	equ	0xFF3
  5999                           postinc0	equ	0xFEE
  6000                           wreg	equ	0xFE8
  6001                           postinc1	equ	0xFE6
  6002                           postdec1	equ	0xFE5
  6003                           fsr1l	equ	0xFE1
  6004                           postinc2	equ	0xFDE
  6005                           postdec2	equ	0xFDD
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _Lcd_Out2 *****************
  6011 ;; Defined at:
  6012 ;;		line 113 in file "LCD.h"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  y               1    wreg     unsigned char 
  6015 ;;  x               1    3[COMRAM] unsigned char 
  6016 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  6017 ;;		 -> STR_91(8), STR_90(10), STR_89(8), STR_88(10), 
  6018 ;;		 -> STR_87(10), STR_86(8), STR_85(10), STR_84(10), 
  6019 ;;		 -> STR_83(14), STR_82(7), STR_81(9), STR_80(7), 
  6020 ;;		 -> STR_79(9), STR_78(9), STR_77(7), STR_76(9), 
  6021 ;;		 -> STR_75(9), STR_74(12), STR_73(7), STR_72(2), 
  6022 ;;		 -> STR_71(4), STR_70(11), STR_69(12), STR_68(12), 
  6023 ;;		 -> STR_67(6), STR_66(5), STR_65(5), STR_64(5), 
  6024 ;;		 -> STR_63(6), STR_62(5), STR_61(5), STR_60(5), 
  6025 ;;		 -> STR_59(6), STR_58(5), STR_57(5), STR_56(5), 
  6026 ;;		 -> STR_55(6), STR_54(5), STR_53(5), STR_52(6), 
  6027 ;;		 -> STR_51(5), STR_50(5), STR_49(5), STR_48(5), 
  6028 ;;		 -> STR_47(5), STR_46(5), STR_45(5), STR_44(5), 
  6029 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(5), 
  6030 ;;		 -> STR_39(5), STR_38(5), STR_37(5), STR_36(5), 
  6031 ;;		 -> STR_35(5), STR_34(5), STR_33(5), STR_32(5), 
  6032 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  6033 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  6034 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  6035 ;;		 -> STR_19(5), STR_18(5), STR_17(5), STR_16(5), 
  6036 ;;		 -> STR_15(9), STR_14(14), STR_13(9), STR_12(9), 
  6037 ;;		 -> STR_11(14), STR_10(9), STR_9(14), STR_8(12), 
  6038 ;;		 -> STR_7(12), STR_6(12), STR_5(12), STR_4(12), 
  6039 ;;		 -> STR_3(7), STR_2(16), STR_1(11), 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  y               1    6[COMRAM] unsigned char 
  6042 ;;  data            1    7[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;		None               void
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6052 ;;      Params:         3       0       0       0       0       0       0       0       0
  6053 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6055 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        5 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    1
  6059 ;; This function calls:
  6060 ;;		_Lcd_Chr_CP
  6061 ;;		_Lcd_Cmd
  6062 ;; This function is called by:
  6063 ;;		_main
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text14
  6068  005F10                     __ptext14:
  6069                           	opt stack 0
  6070  005F10                     _Lcd_Out2:
  6071                           	opt stack 29
  6072                           
  6073                           ;incstack = 0
  6074                           ;Lcd_Out2@y stored from wreg
  6075  005F10  6E07               	movwf	Lcd_Out2@y,c
  6076                           
  6077                           ;LCD.h: 115: unsigned char data;
  6078                           ;LCD.h: 116: switch (y)
  6079  005F12  D00D               	goto	l2602
  6080  005F14                     l2592:
  6081  005F14  5004               	movf	Lcd_Out2@x,w,c
  6082  005F16  0F80               	addlw	128
  6083  005F18  D008               	goto	L20
  6084  005F1A                     l2594:
  6085  005F1A  5004               	movf	Lcd_Out2@x,w,c
  6086  005F1C  0FC0               	addlw	192
  6087  005F1E  D005               	goto	L20
  6088  005F20                     l2596:
  6089  005F20  5004               	movf	Lcd_Out2@x,w,c
  6090  005F22  0F94               	addlw	148
  6091  005F24  D002               	goto	L20
  6092  005F26                     l2598:
  6093  005F26  5004               	movf	Lcd_Out2@x,w,c
  6094  005F28  0FD4               	addlw	212
  6095  005F2A                     L20:
  6096  005F2A  6E08               	movwf	Lcd_Out2@data,c
  6097  005F2C  D00D               	goto	l2604
  6098  005F2E                     l2602:
  6099  005F2E  5007               	movf	Lcd_Out2@y,w,c
  6100                           
  6101                           ; Switch size 1, requested type "space"
  6102                           ; Number of cases is 4, Range of values is 1 to 4
  6103                           ; switch strategies available:
  6104                           ; Name         Instructions Cycles
  6105                           ; simple_byte           13     7 (average)
  6106                           ;	Chosen strategy is simple_byte
  6107  005F30  0A01               	xorlw	1	; case 1
  6108  005F32  B4D8               	btfsc	status,2,c
  6109  005F34  D7EF               	goto	l2592
  6110  005F36  0A03               	xorlw	3	; case 2
  6111  005F38  B4D8               	btfsc	status,2,c
  6112  005F3A  D7EF               	goto	l2594
  6113  005F3C  0A01               	xorlw	1	; case 3
  6114  005F3E  B4D8               	btfsc	status,2,c
  6115  005F40  D7EF               	goto	l2596
  6116  005F42  0A07               	xorlw	7	; case 4
  6117  005F44  B4D8               	btfsc	status,2,c
  6118  005F46  D7EF               	goto	l2598
  6119  005F48                     l2604:
  6120                           
  6121                           ;LCD.h: 124: Lcd_Cmd(data);
  6122  005F48  5008               	movf	Lcd_Out2@data,w,c
  6123  005F4A  ECB0  F033         	call	_Lcd_Cmd
  6124                           
  6125                           ;LCD.h: 125: while(*buffer)
  6126  005F4E  D00A               	goto	l2610
  6127  005F50                     l2606:
  6128                           
  6129                           ;LCD.h: 126: {
  6130                           ;LCD.h: 127: Lcd_Chr_CP(*buffer);
  6131  005F50  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6132  005F54  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6133  005F58                     	if	0	;tblptru may be non-zero
  6134  005F58                     	endif
  6135  005F58                     	if	0	;tblptru may be non-zero
  6136  005F58                     	endif
  6137  005F58  0008               	tblrd		*
  6138  005F5A  50F5               	movf	tablat,w,c
  6139  005F5C  EC44  F034         	call	_Lcd_Chr_CP
  6140                           
  6141                           ;LCD.h: 128: buffer++;
  6142  005F60  4A05               	infsnz	Lcd_Out2@buffer,f,c
  6143  005F62  2A06               	incf	Lcd_Out2@buffer+1,f,c
  6144  005F64                     l2610:
  6145  005F64  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6146  005F68  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6147  005F6C                     	if	0	;tblptru may be non-zero
  6148  005F6C                     	endif
  6149  005F6C                     	if	0	;tblptru may be non-zero
  6150  005F6C                     	endif
  6151  005F6C  0008               	tblrd		*
  6152  005F6E  50F5               	movf	tablat,w,c
  6153  005F70  0900               	iorlw	0
  6154  005F72  B4D8               	btfsc	status,2,c
  6155                           
  6156                           ;LCD.h: 129: }
  6157                           ;LCD.h: 130: return;
  6158  005F74  0012               	return	
  6159  005F76  D7EC               	goto	l2606
  6160  005F78                     __end_of_Lcd_Out2:
  6161                           	opt stack 0
  6162                           tblptru	equ	0xFF8
  6163                           tblptrh	equ	0xFF7
  6164                           tblptrl	equ	0xFF6
  6165                           tablat	equ	0xFF5
  6166                           prodh	equ	0xFF4
  6167                           prodl	equ	0xFF3
  6168                           postinc0	equ	0xFEE
  6169                           wreg	equ	0xFE8
  6170                           postinc1	equ	0xFE6
  6171                           postdec1	equ	0xFE5
  6172                           fsr1l	equ	0xFE1
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function _Lcd_Out *****************
  6180 ;; Defined at:
  6181 ;;		line 92 in file "LCD.h"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  y               1    wreg     unsigned char 
  6184 ;;  x               1    3[COMRAM] unsigned char 
  6185 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  6186 ;;		 -> main@cadena(20), 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  y               1    6[COMRAM] unsigned char 
  6189 ;;  data            1    7[COMRAM] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;		None               void
  6192 ;; Registers used:
  6193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6199 ;;      Params:         3       0       0       0       0       0       0       0       0
  6200 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6202 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:        5 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    1
  6206 ;; This function calls:
  6207 ;;		_Lcd_Chr_CP
  6208 ;;		_Lcd_Cmd
  6209 ;; This function is called by:
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text15
  6215  005E4A                     __ptext15:
  6216                           	opt stack 0
  6217  005E4A                     _Lcd_Out:
  6218                           	opt stack 29
  6219                           
  6220                           ;incstack = 0
  6221                           ;Lcd_Out@y stored from wreg
  6222  005E4A  6E07               	movwf	Lcd_Out@y,c
  6223                           
  6224                           ;LCD.h: 94: unsigned char data;
  6225                           ;LCD.h: 95: switch (y)
  6226  005E4C  D00D               	goto	l2580
  6227  005E4E                     l2570:
  6228  005E4E  5004               	movf	Lcd_Out@x,w,c
  6229  005E50  0F80               	addlw	128
  6230  005E52  D008               	goto	L23
  6231  005E54                     l2572:
  6232  005E54  5004               	movf	Lcd_Out@x,w,c
  6233  005E56  0FC0               	addlw	192
  6234  005E58  D005               	goto	L23
  6235  005E5A                     l2574:
  6236  005E5A  5004               	movf	Lcd_Out@x,w,c
  6237  005E5C  0F94               	addlw	148
  6238  005E5E  D002               	goto	L23
  6239  005E60                     l2576:
  6240  005E60  5004               	movf	Lcd_Out@x,w,c
  6241  005E62  0FD4               	addlw	212
  6242  005E64                     L23:
  6243  005E64  6E08               	movwf	Lcd_Out@data,c
  6244  005E66  D00D               	goto	l2582
  6245  005E68                     l2580:
  6246  005E68  5007               	movf	Lcd_Out@y,w,c
  6247                           
  6248                           ; Switch size 1, requested type "space"
  6249                           ; Number of cases is 4, Range of values is 1 to 4
  6250                           ; switch strategies available:
  6251                           ; Name         Instructions Cycles
  6252                           ; simple_byte           13     7 (average)
  6253                           ;	Chosen strategy is simple_byte
  6254  005E6A  0A01               	xorlw	1	; case 1
  6255  005E6C  B4D8               	btfsc	status,2,c
  6256  005E6E  D7EF               	goto	l2570
  6257  005E70  0A03               	xorlw	3	; case 2
  6258  005E72  B4D8               	btfsc	status,2,c
  6259  005E74  D7EF               	goto	l2572
  6260  005E76  0A01               	xorlw	1	; case 3
  6261  005E78  B4D8               	btfsc	status,2,c
  6262  005E7A  D7EF               	goto	l2574
  6263  005E7C  0A07               	xorlw	7	; case 4
  6264  005E7E  B4D8               	btfsc	status,2,c
  6265  005E80  D7EF               	goto	l2576
  6266  005E82                     l2582:
  6267                           
  6268                           ;LCD.h: 103: Lcd_Cmd(data);
  6269  005E82  5008               	movf	Lcd_Out@data,w,c
  6270  005E84  ECB0  F033         	call	_Lcd_Cmd
  6271                           
  6272                           ;LCD.h: 104: while(*buffer)
  6273  005E88  D009               	goto	l2588
  6274  005E8A                     l2584:
  6275                           
  6276                           ;LCD.h: 105: {
  6277                           ;LCD.h: 106: Lcd_Chr_CP(*buffer);
  6278  005E8A  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6279  005E8E  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6280  005E92  50DF               	movf	indf2,w,c
  6281  005E94  EC44  F034         	call	_Lcd_Chr_CP
  6282                           
  6283                           ;LCD.h: 107: buffer++;
  6284  005E98  4A05               	infsnz	Lcd_Out@buffer,f,c
  6285  005E9A  2A06               	incf	Lcd_Out@buffer+1,f,c
  6286  005E9C                     l2588:
  6287  005E9C  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6288  005EA0  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6289  005EA4  50DF               	movf	indf2,w,c
  6290  005EA6  B4D8               	btfsc	status,2,c
  6291                           
  6292                           ;LCD.h: 108: }
  6293                           ;LCD.h: 109: return;
  6294  005EA8  0012               	return	
  6295  005EAA  D7EF               	goto	l2584
  6296  005EAC                     __end_of_Lcd_Out:
  6297                           	opt stack 0
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodh	equ	0xFF4
  6303                           prodl	equ	0xFF3
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           postinc1	equ	0xFE6
  6307                           postdec1	equ	0xFE5
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           postdec2	equ	0xFDD
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function _Lcd_Chr_CP *****************
  6317 ;; Defined at:
  6318 ;;		line 134 in file "LCD.h"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  data            1    wreg     unsigned char 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  data            1    2[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;		None               void
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0
  6333 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6334 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6335 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6336 ;;Total ram usage:        3 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_Lcd_Out
  6342 ;;		_Lcd_Out2
  6343 ;;		_main
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text16
  6348  006888                     __ptext16:
  6349                           	opt stack 0
  6350  006888                     _Lcd_Chr_CP:
  6351                           	opt stack 29
  6352                           
  6353                           ;incstack = 0
  6354                           ;Lcd_Chr_CP@data stored from wreg
  6355  006888  6E03               	movwf	Lcd_Chr_CP@data,c
  6356                           
  6357                           ;LCD.h: 135: PORTDbits.RD2 = 0; PORTDbits.RD0 = 1;
  6358  00688A  9483               	bcf	3971,2,c	;volatile
  6359  00688C  8083               	bsf	3971,0,c	;volatile
  6360                           
  6361                           ;LCD.h: 136: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  6362  00688E  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  6363  006890  AE03               	btfss	Lcd_Chr_CP@data,7,c
  6364  006892  D001               	bra	u1755
  6365  006894  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6366  006896                     u1755:
  6367  006896  0E01               	movlw	1
  6368  006898  1601               	andwf	??_Lcd_Chr_CP,f,c
  6369  00689A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6370  00689C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6371  00689E  5083               	movf	3971,w,c	;volatile
  6372  0068A0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6373  0068A2  0B7F               	andlw	-129
  6374  0068A4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6375  0068A6  6E83               	movwf	3971,c	;volatile
  6376  0068A8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6377  0068AC  0E06               	movlw	6
  6378  0068AE  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6379  0068B0                     u1765:
  6380  0068B0  90D8               	bcf	status,0,c
  6381  0068B2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6382  0068B4  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6383  0068B6  D7FC               	goto	u1765
  6384  0068B8  0E01               	movlw	1
  6385  0068BA  1601               	andwf	??_Lcd_Chr_CP,f,c
  6386  0068BC  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6387  0068BE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6388  0068C0  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6389  0068C2  5083               	movf	3971,w,c	;volatile
  6390  0068C4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6391  0068C6  0BBF               	andlw	-65
  6392  0068C8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6393  0068CA  6E83               	movwf	3971,c	;volatile
  6394                           
  6395                           ;LCD.h: 137: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  6396  0068CC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6397  0068D0  0E05               	movlw	5
  6398  0068D2  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6399  0068D4                     u1775:
  6400  0068D4  90D8               	bcf	status,0,c
  6401  0068D6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6402  0068D8  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6403  0068DA  D7FC               	goto	u1775
  6404  0068DC  0E01               	movlw	1
  6405  0068DE  1601               	andwf	??_Lcd_Chr_CP,f,c
  6406  0068E0  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6407  0068E2  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6408  0068E4  5083               	movf	3971,w,c	;volatile
  6409  0068E6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6410  0068E8  0BDF               	andlw	-33
  6411  0068EA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6412  0068EC  6E83               	movwf	3971,c	;volatile
  6413  0068EE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6414  0068F2  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6415  0068F4  0E0F               	movlw	15
  6416  0068F6  1601               	andwf	??_Lcd_Chr_CP,f,c
  6417  0068F8  0E01               	movlw	1
  6418  0068FA  1601               	andwf	??_Lcd_Chr_CP,f,c
  6419  0068FC  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6420  0068FE  5083               	movf	3971,w,c	;volatile
  6421  006900  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6422  006902  0BEF               	andlw	-17
  6423  006904  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6424  006906  6E83               	movwf	3971,c	;volatile
  6425                           
  6426                           ;LCD.h: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6427  006908  0E06               	movlw	6
  6428  00690A                     u3447:
  6429  00690A  2EE8               	decfsz	wreg,f,c
  6430  00690C  D7FE               	goto	u3447
  6431  00690E  D000               	nop2		;nop
  6432                           
  6433                           ;LCD.h: 139: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6434  006910  8483               	bsf	3971,2,c	;volatile
  6435  006912  0E03               	movlw	3
  6436  006914                     u3457:
  6437  006914  2EE8               	decfsz	wreg,f,c
  6438  006916  D7FE               	goto	u3457
  6439  006918  F000               	nop	
  6440  00691A  9483               	bcf	3971,2,c	;volatile
  6441                           
  6442                           ;LCD.h: 140: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  6443  00691C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6444  006920  90D8               	bcf	status,0,c
  6445  006922  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6446  006924  90D8               	bcf	status,0,c
  6447  006926  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6448  006928  90D8               	bcf	status,0,c
  6449  00692A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6450  00692C  0E01               	movlw	1
  6451  00692E  1601               	andwf	??_Lcd_Chr_CP,f,c
  6452  006930  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6453  006932  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6454  006934  5083               	movf	3971,w,c	;volatile
  6455  006936  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6456  006938  0B7F               	andlw	-129
  6457  00693A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6458  00693C  6E83               	movwf	3971,c	;volatile
  6459  00693E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6460  006942  90D8               	bcf	status,0,c
  6461  006944  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6462  006946  90D8               	bcf	status,0,c
  6463  006948  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6464  00694A  0E01               	movlw	1
  6465  00694C  1601               	andwf	??_Lcd_Chr_CP,f,c
  6466  00694E  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6467  006950  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6468  006952  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6469  006954  5083               	movf	3971,w,c	;volatile
  6470  006956  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6471  006958  0BBF               	andlw	-65
  6472  00695A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6473  00695C  6E83               	movwf	3971,c	;volatile
  6474                           
  6475                           ;LCD.h: 141: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  6476  00695E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6477  006962  90D8               	bcf	status,0,c
  6478  006964  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6479  006966  0E01               	movlw	1
  6480  006968  1601               	andwf	??_Lcd_Chr_CP,f,c
  6481  00696A  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6482  00696C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6483  00696E  5083               	movf	3971,w,c	;volatile
  6484  006970  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6485  006972  0BDF               	andlw	-33
  6486  006974  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6487  006976  6E83               	movwf	3971,c	;volatile
  6488  006978  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6489  00697C  0E01               	movlw	1
  6490  00697E  1601               	andwf	??_Lcd_Chr_CP,f,c
  6491  006980  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6492  006982  5083               	movf	3971,w,c	;volatile
  6493  006984  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6494  006986  0BEF               	andlw	-17
  6495  006988  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6496  00698A  6E83               	movwf	3971,c	;volatile
  6497                           
  6498                           ;LCD.h: 142: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6499  00698C  0E06               	movlw	6
  6500  00698E                     u3467:
  6501  00698E  2EE8               	decfsz	wreg,f,c
  6502  006990  D7FE               	goto	u3467
  6503  006992  D000               	nop2		;nop
  6504                           
  6505                           ;LCD.h: 143: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6506  006994  8483               	bsf	3971,2,c	;volatile
  6507  006996  0E03               	movlw	3
  6508  006998                     u3477:
  6509  006998  2EE8               	decfsz	wreg,f,c
  6510  00699A  D7FE               	goto	u3477
  6511  00699C  F000               	nop	
  6512  00699E  9483               	bcf	3971,2,c	;volatile
  6513                           
  6514                           ;LCD.h: 144: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(8000000/4000000.0)));
  6515  0069A0  0E03               	movlw	3
  6516  0069A2                     u3487:
  6517  0069A2  2EE8               	decfsz	wreg,f,c
  6518  0069A4  D7FE               	goto	u3487
  6519  0069A6  F000               	nop	
  6520  0069A8  0E0F               	movlw	15
  6521  0069AA  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6522  0069AC  0E48               	movlw	72
  6523  0069AE                     u3497:
  6524  0069AE  2EE8               	decfsz	wreg,f,c
  6525  0069B0  D7FE               	goto	u3497
  6526  0069B2  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6527  0069B4  D7FC               	goto	u3497
  6528  0069B6  0012               	return	
  6529  0069B8                     __end_of_Lcd_Chr_CP:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           postinc0	equ	0xFEE
  6538                           wreg	equ	0xFE8
  6539                           postinc1	equ	0xFE6
  6540                           postdec1	equ	0xFE5
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function _Lcd_Init *****************
  6550 ;; Defined at:
  6551 ;;		line 48 in file "LCD.h"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  data            1    4[COMRAM] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0
  6566 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6567 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6568 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6569 ;;Total ram usage:        2 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    1
  6572 ;; This function calls:
  6573 ;;		_Lcd_Cmd
  6574 ;; This function is called by:
  6575 ;;		_main
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text17
  6580  006644                     __ptext17:
  6581                           	opt stack 0
  6582  006644                     _Lcd_Init:
  6583                           	opt stack 29
  6584                           
  6585                           ;LCD.h: 49: unsigned char data;
  6586                           ;LCD.h: 50: TRISDbits.TRISD7 = 0;
  6587                           
  6588                           ;incstack = 0
  6589  006644  9E95               	bcf	3989,7,c	;volatile
  6590                           
  6591                           ;LCD.h: 51: TRISDbits.TRISD6 = 0;
  6592  006646  9C95               	bcf	3989,6,c	;volatile
  6593                           
  6594                           ;LCD.h: 52: TRISDbits.TRISD5 = 0;
  6595  006648  9A95               	bcf	3989,5,c	;volatile
  6596                           
  6597                           ;LCD.h: 53: TRISDbits.TRISD4 = 0;
  6598  00664A  9895               	bcf	3989,4,c	;volatile
  6599                           
  6600                           ;LCD.h: 54: TRISDbits.TRISD2 = 0;
  6601  00664C  9495               	bcf	3989,2,c	;volatile
  6602                           
  6603                           ;LCD.h: 55: TRISDbits.TRISD0 = 0;
  6604  00664E  9095               	bcf	3989,0,c	;volatile
  6605                           
  6606                           ;LCD.h: 56: TRISDbits.TRISD1 = 0;
  6607  006650  9295               	bcf	3989,1,c	;volatile
  6608                           
  6609                           ;LCD.h: 57: PORTDbits.RD7 = 0;
  6610  006652  9E83               	bcf	3971,7,c	;volatile
  6611                           
  6612                           ;LCD.h: 58: PORTDbits.RD6 = 0;
  6613  006654  9C83               	bcf	3971,6,c	;volatile
  6614                           
  6615                           ;LCD.h: 59: PORTDbits.RD5 = 0;
  6616  006656  9A83               	bcf	3971,5,c	;volatile
  6617                           
  6618                           ;LCD.h: 60: PORTDbits.RD4 = 0;
  6619  006658  9883               	bcf	3971,4,c	;volatile
  6620                           
  6621                           ;LCD.h: 61: PORTDbits.RD2 = 0;
  6622  00665A  9483               	bcf	3971,2,c	;volatile
  6623                           
  6624                           ;LCD.h: 62: PORTDbits.RD0 = 0;
  6625  00665C  9083               	bcf	3971,0,c	;volatile
  6626                           
  6627                           ;LCD.h: 63: PORTDbits.RD1 = 0;
  6628  00665E  9283               	bcf	3971,1,c	;volatile
  6629                           
  6630                           ;LCD.h: 64: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6631  006660  0E0F               	movlw	15
  6632  006662  6E04               	movwf	??_Lcd_Init& (0+255),c
  6633  006664  0E48               	movlw	72
  6634  006666                     u3507:
  6635  006666  2EE8               	decfsz	wreg,f,c
  6636  006668  D7FE               	goto	u3507
  6637  00666A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6638  00666C  D7FC               	goto	u3507
  6639                           
  6640                           ;LCD.h: 65: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6641  00666E  0E0F               	movlw	15
  6642  006670  6E04               	movwf	??_Lcd_Init& (0+255),c
  6643  006672  0E48               	movlw	72
  6644  006674                     u3517:
  6645  006674  2EE8               	decfsz	wreg,f,c
  6646  006676  D7FE               	goto	u3517
  6647  006678  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6648  00667A  D7FC               	goto	u3517
  6649                           
  6650                           ;LCD.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6651  00667C  0E0F               	movlw	15
  6652  00667E  6E04               	movwf	??_Lcd_Init& (0+255),c
  6653  006680  0E48               	movlw	72
  6654  006682                     u3527:
  6655  006682  2EE8               	decfsz	wreg,f,c
  6656  006684  D7FE               	goto	u3527
  6657  006686  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6658  006688  D7FC               	goto	u3527
  6659                           
  6660                           ;LCD.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6661  00668A  0E0F               	movlw	15
  6662  00668C  6E04               	movwf	??_Lcd_Init& (0+255),c
  6663  00668E  0E48               	movlw	72
  6664  006690                     u3537:
  6665  006690  2EE8               	decfsz	wreg,f,c
  6666  006692  D7FE               	goto	u3537
  6667  006694  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6668  006696  D7FC               	goto	u3537
  6669                           
  6670                           ;LCD.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6671  006698  0E0F               	movlw	15
  6672  00669A  6E04               	movwf	??_Lcd_Init& (0+255),c
  6673  00669C  0E48               	movlw	72
  6674  00669E                     u3547:
  6675  00669E  2EE8               	decfsz	wreg,f,c
  6676  0066A0  D7FE               	goto	u3547
  6677  0066A2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6678  0066A4  D7FC               	goto	u3547
  6679                           
  6680                           ;LCD.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6681  0066A6  0E0F               	movlw	15
  6682  0066A8  6E04               	movwf	??_Lcd_Init& (0+255),c
  6683  0066AA  0E48               	movlw	72
  6684  0066AC                     u3557:
  6685  0066AC  2EE8               	decfsz	wreg,f,c
  6686  0066AE  D7FE               	goto	u3557
  6687  0066B0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6688  0066B2  D7FC               	goto	u3557
  6689                           
  6690                           ;LCD.h: 70: for(data = 1; data < 4; data ++)
  6691  0066B4  0E01               	movlw	1
  6692  0066B6  6E05               	movwf	Lcd_Init@data,c
  6693  0066B8  D01E               	goto	L24
  6694  0066BA                     l44:
  6695                           
  6696                           ;LCD.h: 71: {
  6697                           ;LCD.h: 72: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  6698  0066BA  9E83               	bcf	3971,7,c	;volatile
  6699  0066BC  9C83               	bcf	3971,6,c	;volatile
  6700  0066BE  8A83               	bsf	3971,5,c	;volatile
  6701  0066C0  8883               	bsf	3971,4,c	;volatile
  6702  0066C2  9483               	bcf	3971,2,c	;volatile
  6703                           
  6704                           ;LCD.h: 73: PORTDbits.RD0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  6705  0066C4  9083               	bcf	3971,0,c	;volatile
  6706  0066C6  9E83               	bcf	3971,7,c	;volatile
  6707  0066C8  9C83               	bcf	3971,6,c	;volatile
  6708  0066CA  8A83               	bsf	3971,5,c	;volatile
  6709  0066CC  8883               	bsf	3971,4,c	;volatile
  6710                           
  6711                           ;LCD.h: 74: PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  6712  0066CE  8483               	bsf	3971,2,c	;volatile
  6713  0066D0  9083               	bcf	3971,0,c	;volatile
  6714                           
  6715                           ;LCD.h: 75: _delay((unsigned long)((5)*(8000000/4000000.0)));
  6716  0066D2  0E03               	movlw	3
  6717  0066D4                     u3567:
  6718  0066D4  2EE8               	decfsz	wreg,f,c
  6719  0066D6  D7FE               	goto	u3567
  6720  0066D8  F000               	nop	
  6721                           
  6722                           ;LCD.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  6723  0066DA  9E83               	bcf	3971,7,c	;volatile
  6724  0066DC  9C83               	bcf	3971,6,c	;volatile
  6725  0066DE  8A83               	bsf	3971,5,c	;volatile
  6726  0066E0  8883               	bsf	3971,4,c	;volatile
  6727  0066E2  9483               	bcf	3971,2,c	;volatile
  6728                           
  6729                           ;LCD.h: 77: PORTDbits.RD0 = 0;
  6730  0066E4  9083               	bcf	3971,0,c	;volatile
  6731                           
  6732                           ;LCD.h: 78: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6733  0066E6  0E0F               	movlw	15
  6734  0066E8  6E04               	movwf	??_Lcd_Init& (0+255),c
  6735  0066EA  0E48               	movlw	72
  6736  0066EC                     u3577:
  6737  0066EC  2EE8               	decfsz	wreg,f,c
  6738  0066EE  D7FE               	goto	u3577
  6739  0066F0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6740  0066F2  D7FC               	goto	u3577
  6741  0066F4  2A05               	incf	Lcd_Init@data,f,c
  6742  0066F6                     L24:
  6743  0066F6  0E03               	movlw	3
  6744  0066F8  6405               	cpfsgt	Lcd_Init@data,c
  6745  0066FA  D7DF               	goto	l44
  6746                           
  6747                           ;LCD.h: 79: }
  6748                           ;LCD.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  6749  0066FC  9E83               	bcf	3971,7,c	;volatile
  6750  0066FE  9C83               	bcf	3971,6,c	;volatile
  6751  006700  8A83               	bsf	3971,5,c	;volatile
  6752  006702  9883               	bcf	3971,4,c	;volatile
  6753  006704  9483               	bcf	3971,2,c	;volatile
  6754  006706  9083               	bcf	3971,0,c	;volatile
  6755                           
  6756                           ;LCD.h: 81: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  6757  006708  9E83               	bcf	3971,7,c	;volatile
  6758  00670A  9C83               	bcf	3971,6,c	;volatile
  6759  00670C  8A83               	bsf	3971,5,c	;volatile
  6760  00670E  9883               	bcf	3971,4,c	;volatile
  6761  006710  8483               	bsf	3971,2,c	;volatile
  6762  006712  9083               	bcf	3971,0,c	;volatile
  6763                           
  6764                           ;LCD.h: 82: _delay((unsigned long)((5)*(8000000/4000000.0)));
  6765  006714  0E03               	movlw	3
  6766  006716                     u3587:
  6767  006716  2EE8               	decfsz	wreg,f,c
  6768  006718  D7FE               	goto	u3587
  6769  00671A  F000               	nop	
  6770                           
  6771                           ;LCD.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  6772  00671C  9E83               	bcf	3971,7,c	;volatile
  6773  00671E  9C83               	bcf	3971,6,c	;volatile
  6774  006720  8A83               	bsf	3971,5,c	;volatile
  6775  006722  9883               	bcf	3971,4,c	;volatile
  6776  006724  9483               	bcf	3971,2,c	;volatile
  6777  006726  9083               	bcf	3971,0,c	;volatile
  6778                           
  6779                           ;LCD.h: 84: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  6780  006728  0E0F               	movlw	15
  6781  00672A  6E04               	movwf	??_Lcd_Init& (0+255),c
  6782  00672C  0E48               	movlw	72
  6783  00672E                     u3597:
  6784  00672E  2EE8               	decfsz	wreg,f,c
  6785  006730  D7FE               	goto	u3597
  6786  006732  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  6787  006734  D7FC               	goto	u3597
  6788                           
  6789                           ;LCD.h: 85: data = 40; Lcd_Cmd(data);
  6790  006736  0E28               	movlw	40
  6791  006738  6E05               	movwf	Lcd_Init@data,c
  6792  00673A  5005               	movf	Lcd_Init@data,w,c
  6793  00673C  ECB0  F033         	call	_Lcd_Cmd
  6794                           
  6795                           ;LCD.h: 86: data = 16; Lcd_Cmd(data);
  6796  006740  0E10               	movlw	16
  6797  006742  6E05               	movwf	Lcd_Init@data,c
  6798  006744  5005               	movf	Lcd_Init@data,w,c
  6799  006746  ECB0  F033         	call	_Lcd_Cmd
  6800                           
  6801                           ;LCD.h: 87: data = 1; Lcd_Cmd(data);
  6802  00674A  0E01               	movlw	1
  6803  00674C  6E05               	movwf	Lcd_Init@data,c
  6804  00674E  5005               	movf	Lcd_Init@data,w,c
  6805  006750  ECB0  F033         	call	_Lcd_Cmd
  6806                           
  6807                           ;LCD.h: 88: data = 15; Lcd_Cmd(data);
  6808  006754  0E0F               	movlw	15
  6809  006756  6E05               	movwf	Lcd_Init@data,c
  6810  006758  5005               	movf	Lcd_Init@data,w,c
  6811  00675A  ECB0  F033         	call	_Lcd_Cmd
  6812  00675E  0012               	return	
  6813  006760                     __end_of_Lcd_Init:
  6814                           	opt stack 0
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           postinc1	equ	0xFE6
  6824                           postdec1	equ	0xFE5
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _Lcd_Cmd *****************
  6834 ;; Defined at:
  6835 ;;		line 148 in file "LCD.h"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  data            1    wreg     unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  data            1    2[COMRAM] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;		None               void
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6849 ;;      Params:         0       0       0       0       0       0       0       0       0
  6850 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6852 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6853 ;;Total ram usage:        3 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_Lcd_Init
  6859 ;;		_Lcd_Out
  6860 ;;		_Lcd_Out2
  6861 ;;		_lcd_goto
  6862 ;;		_main
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text18
  6867  006760                     __ptext18:
  6868                           	opt stack 0
  6869  006760                     _Lcd_Cmd:
  6870                           	opt stack 29
  6871                           
  6872                           ;incstack = 0
  6873                           ;Lcd_Cmd@data stored from wreg
  6874  006760  6E03               	movwf	Lcd_Cmd@data,c
  6875                           
  6876                           ;LCD.h: 149: PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  6877  006762  9483               	bcf	3971,2,c	;volatile
  6878  006764  9083               	bcf	3971,0,c	;volatile
  6879                           
  6880                           ;LCD.h: 150: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  6881  006766  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  6882  006768  AE03               	btfss	Lcd_Cmd@data,7,c
  6883  00676A  D001               	bra	u1725
  6884  00676C  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  6885  00676E                     u1725:
  6886  00676E  0E01               	movlw	1
  6887  006770  1601               	andwf	??_Lcd_Cmd,f,c
  6888  006772  3201               	rrcf	??_Lcd_Cmd,f,c
  6889  006774  3201               	rrcf	??_Lcd_Cmd,f,c
  6890  006776  5083               	movf	3971,w,c	;volatile
  6891  006778  1801               	xorwf	??_Lcd_Cmd,w,c
  6892  00677A  0B7F               	andlw	-129
  6893  00677C  1801               	xorwf	??_Lcd_Cmd,w,c
  6894  00677E  6E83               	movwf	3971,c	;volatile
  6895  006780  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6896  006784  0E06               	movlw	6
  6897  006786  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  6898  006788                     u1735:
  6899  006788  90D8               	bcf	status,0,c
  6900  00678A  3201               	rrcf	??_Lcd_Cmd,f,c
  6901  00678C  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  6902  00678E  D7FC               	goto	u1735
  6903  006790  0E01               	movlw	1
  6904  006792  1601               	andwf	??_Lcd_Cmd,f,c
  6905  006794  3A01               	swapf	??_Lcd_Cmd,f,c
  6906  006796  4601               	rlncf	??_Lcd_Cmd,f,c
  6907  006798  4601               	rlncf	??_Lcd_Cmd,f,c
  6908  00679A  5083               	movf	3971,w,c	;volatile
  6909  00679C  1801               	xorwf	??_Lcd_Cmd,w,c
  6910  00679E  0BBF               	andlw	-65
  6911  0067A0  1801               	xorwf	??_Lcd_Cmd,w,c
  6912  0067A2  6E83               	movwf	3971,c	;volatile
  6913                           
  6914                           ;LCD.h: 151: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  6915  0067A4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6916  0067A8  0E05               	movlw	5
  6917  0067AA  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  6918  0067AC                     u1745:
  6919  0067AC  90D8               	bcf	status,0,c
  6920  0067AE  3201               	rrcf	??_Lcd_Cmd,f,c
  6921  0067B0  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  6922  0067B2  D7FC               	goto	u1745
  6923  0067B4  0E01               	movlw	1
  6924  0067B6  1601               	andwf	??_Lcd_Cmd,f,c
  6925  0067B8  3A01               	swapf	??_Lcd_Cmd,f,c
  6926  0067BA  4601               	rlncf	??_Lcd_Cmd,f,c
  6927  0067BC  5083               	movf	3971,w,c	;volatile
  6928  0067BE  1801               	xorwf	??_Lcd_Cmd,w,c
  6929  0067C0  0BDF               	andlw	-33
  6930  0067C2  1801               	xorwf	??_Lcd_Cmd,w,c
  6931  0067C4  6E83               	movwf	3971,c	;volatile
  6932  0067C6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6933  0067CA  3A01               	swapf	??_Lcd_Cmd,f,c
  6934  0067CC  0E0F               	movlw	15
  6935  0067CE  1601               	andwf	??_Lcd_Cmd,f,c
  6936  0067D0  0E01               	movlw	1
  6937  0067D2  1601               	andwf	??_Lcd_Cmd,f,c
  6938  0067D4  3A01               	swapf	??_Lcd_Cmd,f,c
  6939  0067D6  5083               	movf	3971,w,c	;volatile
  6940  0067D8  1801               	xorwf	??_Lcd_Cmd,w,c
  6941  0067DA  0BEF               	andlw	-17
  6942  0067DC  1801               	xorwf	??_Lcd_Cmd,w,c
  6943  0067DE  6E83               	movwf	3971,c	;volatile
  6944                           
  6945                           ;LCD.h: 152: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6946  0067E0  0E06               	movlw	6
  6947  0067E2                     u3607:
  6948  0067E2  2EE8               	decfsz	wreg,f,c
  6949  0067E4  D7FE               	goto	u3607
  6950  0067E6  D000               	nop2		;nop
  6951                           
  6952                           ;LCD.h: 153: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6953  0067E8  8483               	bsf	3971,2,c	;volatile
  6954  0067EA  0E03               	movlw	3
  6955  0067EC                     u3617:
  6956  0067EC  2EE8               	decfsz	wreg,f,c
  6957  0067EE  D7FE               	goto	u3617
  6958  0067F0  F000               	nop	
  6959  0067F2  9483               	bcf	3971,2,c	;volatile
  6960                           
  6961                           ;LCD.h: 154: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  6962  0067F4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6963  0067F8  90D8               	bcf	status,0,c
  6964  0067FA  3201               	rrcf	??_Lcd_Cmd,f,c
  6965  0067FC  90D8               	bcf	status,0,c
  6966  0067FE  3201               	rrcf	??_Lcd_Cmd,f,c
  6967  006800  90D8               	bcf	status,0,c
  6968  006802  3201               	rrcf	??_Lcd_Cmd,f,c
  6969  006804  0E01               	movlw	1
  6970  006806  1601               	andwf	??_Lcd_Cmd,f,c
  6971  006808  3201               	rrcf	??_Lcd_Cmd,f,c
  6972  00680A  3201               	rrcf	??_Lcd_Cmd,f,c
  6973  00680C  5083               	movf	3971,w,c	;volatile
  6974  00680E  1801               	xorwf	??_Lcd_Cmd,w,c
  6975  006810  0B7F               	andlw	-129
  6976  006812  1801               	xorwf	??_Lcd_Cmd,w,c
  6977  006814  6E83               	movwf	3971,c	;volatile
  6978  006816  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6979  00681A  90D8               	bcf	status,0,c
  6980  00681C  3201               	rrcf	??_Lcd_Cmd,f,c
  6981  00681E  90D8               	bcf	status,0,c
  6982  006820  3201               	rrcf	??_Lcd_Cmd,f,c
  6983  006822  0E01               	movlw	1
  6984  006824  1601               	andwf	??_Lcd_Cmd,f,c
  6985  006826  3A01               	swapf	??_Lcd_Cmd,f,c
  6986  006828  4601               	rlncf	??_Lcd_Cmd,f,c
  6987  00682A  4601               	rlncf	??_Lcd_Cmd,f,c
  6988  00682C  5083               	movf	3971,w,c	;volatile
  6989  00682E  1801               	xorwf	??_Lcd_Cmd,w,c
  6990  006830  0BBF               	andlw	-65
  6991  006832  1801               	xorwf	??_Lcd_Cmd,w,c
  6992  006834  6E83               	movwf	3971,c	;volatile
  6993                           
  6994                           ;LCD.h: 155: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  6995  006836  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6996  00683A  90D8               	bcf	status,0,c
  6997  00683C  3201               	rrcf	??_Lcd_Cmd,f,c
  6998  00683E  0E01               	movlw	1
  6999  006840  1601               	andwf	??_Lcd_Cmd,f,c
  7000  006842  3A01               	swapf	??_Lcd_Cmd,f,c
  7001  006844  4601               	rlncf	??_Lcd_Cmd,f,c
  7002  006846  5083               	movf	3971,w,c	;volatile
  7003  006848  1801               	xorwf	??_Lcd_Cmd,w,c
  7004  00684A  0BDF               	andlw	-33
  7005  00684C  1801               	xorwf	??_Lcd_Cmd,w,c
  7006  00684E  6E83               	movwf	3971,c	;volatile
  7007  006850  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7008  006854  0E01               	movlw	1
  7009  006856  1601               	andwf	??_Lcd_Cmd,f,c
  7010  006858  3A01               	swapf	??_Lcd_Cmd,f,c
  7011  00685A  5083               	movf	3971,w,c	;volatile
  7012  00685C  1801               	xorwf	??_Lcd_Cmd,w,c
  7013  00685E  0BEF               	andlw	-17
  7014  006860  1801               	xorwf	??_Lcd_Cmd,w,c
  7015  006862  6E83               	movwf	3971,c	;volatile
  7016                           
  7017                           ;LCD.h: 156: _delay((unsigned long)((10)*(8000000/4000000.0)));;
  7018  006864  0E06               	movlw	6
  7019  006866                     u3627:
  7020  006866  2EE8               	decfsz	wreg,f,c
  7021  006868  D7FE               	goto	u3627
  7022  00686A  D000               	nop2		;nop
  7023                           
  7024                           ;LCD.h: 157: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7025  00686C  8483               	bsf	3971,2,c	;volatile
  7026  00686E  0E03               	movlw	3
  7027  006870                     u3637:
  7028  006870  2EE8               	decfsz	wreg,f,c
  7029  006872  D7FE               	goto	u3637
  7030  006874  F000               	nop	
  7031  006876  9483               	bcf	3971,2,c	;volatile
  7032                           
  7033                           ;LCD.h: 158: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7034  006878  0E0F               	movlw	15
  7035  00687A  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  7036  00687C  0E48               	movlw	72
  7037  00687E                     u3647:
  7038  00687E  2EE8               	decfsz	wreg,f,c
  7039  006880  D7FE               	goto	u3647
  7040  006882  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7041  006884  D7FC               	goto	u3647
  7042  006886  0012               	return	
  7043  006888                     __end_of_Lcd_Cmd:
  7044                           	opt stack 0
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           postinc0	equ	0xFEE
  7052                           wreg	equ	0xFE8
  7053                           postinc1	equ	0xFE6
  7054                           postdec1	equ	0xFE5
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function _Conv_Entero *****************
  7064 ;; Defined at:
  7065 ;;		line 13 in file "conversion.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  numero          4   14[COMRAM] long 
  7068 ;;  conv            2   18[COMRAM] PTR unsigned char 
  7069 ;;		 -> main@cadena(20), main@cad(20), 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  convTemp       21   25[COMRAM] unsigned char [21]
  7072 ;;  numeroReg       4   51[COMRAM] long 
  7073 ;;  punteroActua    2   49[COMRAM] PTR unsigned char 
  7074 ;;		 -> Conv_Entero@convTemp(21), 
  7075 ;;  num             2   46[COMRAM] int 
  7076 ;;  i               1   48[COMRAM] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  2   14[COMRAM] int 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7086 ;;      Params:         6       0       0       0       0       0       0       0       0
  7087 ;;      Locals:        30       0       0       0       0       0       0       0       0
  7088 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7089 ;;      Totals:        41       0       0       0       0       0       0       0       0
  7090 ;;Total ram usage:       41 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    1
  7093 ;; This function calls:
  7094 ;;		___aldiv
  7095 ;;		___almod
  7096 ;;		___lmul
  7097 ;; This function is called by:
  7098 ;;		_main
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text19
  7103  0069B8                     __ptext19:
  7104                           	opt stack 0
  7105  0069B8                     _Conv_Entero:
  7106                           	opt stack 29
  7107                           
  7108                           ;conversion.c: 15: char convTemp[21];
  7109                           ;conversion.c: 16: register char *punteroActual;
  7110                           ;conversion.c: 17: register int num=0;
  7111                           
  7112                           ;incstack = 0
  7113  0069B8  0E00               	movlw	0
  7114  0069BA  6E30               	movwf	Conv_Entero@num+1,c
  7115  0069BC  0E00               	movlw	0
  7116  0069BE  6E2F               	movwf	Conv_Entero@num,c
  7117                           
  7118                           ;conversion.c: 18: register char i=0;
  7119  0069C0  0E00               	movlw	0
  7120  0069C2  6E31               	movwf	Conv_Entero@i,c
  7121                           
  7122                           ;conversion.c: 19: register long long numeroReg = numero;
  7123  0069C4  C00F  F034         	movff	Conv_Entero@numero,Conv_Entero@numeroReg
  7124  0069C8  C010  F035         	movff	Conv_Entero@numero+1,Conv_Entero@numeroReg+1
  7125  0069CC  C011  F036         	movff	Conv_Entero@numero+2,Conv_Entero@numeroReg+2
  7126  0069D0  C012  F037         	movff	Conv_Entero@numero+3,Conv_Entero@numeroReg+3
  7127                           
  7128                           ;conversion.c: 21: punteroActual = &convTemp[21 - 1];
  7129  0069D4  0E00               	movlw	high (Conv_Entero@convTemp+20)
  7130  0069D6  6E33               	movwf	Conv_Entero@punteroActual+1,c
  7131  0069D8  0E2E               	movlw	low (Conv_Entero@convTemp+20)
  7132  0069DA  6E32               	movwf	Conv_Entero@punteroActual,c
  7133                           
  7134                           ;conversion.c: 22: *punteroActual = 0;
  7135  0069DC  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7136  0069E0  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7137  0069E4  0E00               	movlw	0
  7138  0069E6  6EDF               	movwf	indf2,c
  7139                           
  7140                           ;conversion.c: 24: if( numeroReg < 0)
  7141  0069E8  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7142  0069EA  0A80               	xorlw	128
  7143  0069EC  0F80               	addlw	128
  7144  0069EE  E108               	bnz	u2095
  7145  0069F0  0E00               	movlw	0
  7146  0069F2  5C36               	subwf	Conv_Entero@numeroReg+2,w,c
  7147  0069F4  E105               	bnz	u2095
  7148  0069F6  0E00               	movlw	0
  7149  0069F8  5C35               	subwf	Conv_Entero@numeroReg+1,w,c
  7150  0069FA  E102               	bnz	u2095
  7151  0069FC  0E00               	movlw	0
  7152  0069FE  5C34               	subwf	Conv_Entero@numeroReg,w,c
  7153  006A00                     u2095:
  7154  006A00  B0D8               	btfsc	status,0,c
  7155  006A02  D01A               	goto	l2644
  7156                           
  7157                           ;conversion.c: 25: {
  7158                           ;conversion.c: 26: numeroReg*=-1;
  7159  006A04  C034  F001         	movff	Conv_Entero@numeroReg,___lmul@multiplier
  7160  006A08  C035  F002         	movff	Conv_Entero@numeroReg+1,___lmul@multiplier+1
  7161  006A0C  C036  F003         	movff	Conv_Entero@numeroReg+2,___lmul@multiplier+2
  7162  006A10  C037  F004         	movff	Conv_Entero@numeroReg+3,___lmul@multiplier+3
  7163  006A14  0EFF               	movlw	255
  7164  006A16  6E05               	movwf	___lmul@multiplicand,c
  7165  006A18  0EFF               	movlw	255
  7166  006A1A  6E06               	movwf	___lmul@multiplicand+1,c
  7167  006A1C  0EFF               	movlw	255
  7168  006A1E  6E07               	movwf	___lmul@multiplicand+2,c
  7169  006A20  0EFF               	movlw	255
  7170  006A22  6E08               	movwf	___lmul@multiplicand+3,c
  7171  006A24  ECFA  F02E         	call	___lmul	;wreg free
  7172  006A28  C001  F034         	movff	?___lmul,Conv_Entero@numeroReg
  7173  006A2C  C002  F035         	movff	?___lmul+1,Conv_Entero@numeroReg+1
  7174  006A30  C003  F036         	movff	?___lmul+2,Conv_Entero@numeroReg+2
  7175  006A34  C004  F037         	movff	?___lmul+3,Conv_Entero@numeroReg+3
  7176  006A38                     l2644:
  7177                           
  7178                           ;conversion.c: 30: punteroActual--;
  7179  006A38  0632               	decf	Conv_Entero@punteroActual,f,c
  7180  006A3A  A0D8               	btfss	status,0,c
  7181  006A3C  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7182                           
  7183                           ;conversion.c: 31: num=numeroReg % 10;
  7184  006A3E  C034  F001         	movff	Conv_Entero@numeroReg,___almod@dividend
  7185  006A42  C035  F002         	movff	Conv_Entero@numeroReg+1,___almod@dividend+1
  7186  006A46  C036  F003         	movff	Conv_Entero@numeroReg+2,___almod@dividend+2
  7187  006A4A  C037  F004         	movff	Conv_Entero@numeroReg+3,___almod@dividend+3
  7188  006A4E  0E0A               	movlw	10
  7189  006A50  6E05               	movwf	___almod@divisor,c
  7190  006A52  0E00               	movlw	0
  7191  006A54  6E06               	movwf	___almod@divisor+1,c
  7192  006A56  0E00               	movlw	0
  7193  006A58  6E07               	movwf	___almod@divisor+2,c
  7194  006A5A  0E00               	movlw	0
  7195  006A5C  6E08               	movwf	___almod@divisor+3,c
  7196  006A5E  EC36  F032         	call	___almod	;wreg free
  7197  006A62  C001  F015         	movff	?___almod,??_Conv_Entero
  7198  006A66  C002  F016         	movff	?___almod+1,??_Conv_Entero+1
  7199  006A6A  C003  F017         	movff	?___almod+2,??_Conv_Entero+2
  7200  006A6E  C004  F018         	movff	?___almod+3,??_Conv_Entero+3
  7201  006A72  C015  F02F         	movff	??_Conv_Entero,Conv_Entero@num
  7202  006A76  C016  F030         	movff	??_Conv_Entero+1,Conv_Entero@num+1
  7203                           
  7204                           ;conversion.c: 33: *punteroActual = num + '0';
  7205  006A7A  502F               	movf	Conv_Entero@num,w,c
  7206  006A7C  0F30               	addlw	48
  7207  006A7E  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7208  006A82  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7209  006A86  6EDF               	movwf	indf2,c
  7210                           
  7211                           ;conversion.c: 34: } while(numeroReg /= 10);
  7212  006A88  C034  F001         	movff	Conv_Entero@numeroReg,___aldiv@dividend
  7213  006A8C  C035  F002         	movff	Conv_Entero@numeroReg+1,___aldiv@dividend+1
  7214  006A90  C036  F003         	movff	Conv_Entero@numeroReg+2,___aldiv@dividend+2
  7215  006A94  C037  F004         	movff	Conv_Entero@numeroReg+3,___aldiv@dividend+3
  7216  006A98  0E0A               	movlw	10
  7217  006A9A  6E05               	movwf	___aldiv@divisor,c
  7218  006A9C  0E00               	movlw	0
  7219  006A9E  6E06               	movwf	___aldiv@divisor+1,c
  7220  006AA0  0E00               	movlw	0
  7221  006AA2  6E07               	movwf	___aldiv@divisor+2,c
  7222  006AA4  0E00               	movlw	0
  7223  006AA6  6E08               	movwf	___aldiv@divisor+3,c
  7224  006AA8  ECA4  F032         	call	___aldiv	;wreg free
  7225  006AAC  C001  F034         	movff	?___aldiv,Conv_Entero@numeroReg
  7226  006AB0  C002  F035         	movff	?___aldiv+1,Conv_Entero@numeroReg+1
  7227  006AB4  C003  F036         	movff	?___aldiv+2,Conv_Entero@numeroReg+2
  7228  006AB8  C004  F037         	movff	?___aldiv+3,Conv_Entero@numeroReg+3
  7229  006ABC  5037               	movf	(Conv_Entero@numeroReg+3)& (0+255),w,c
  7230  006ABE  1034               	iorwf	Conv_Entero@numeroReg& (0+255),w,c
  7231  006AC0  1035               	iorwf	(Conv_Entero@numeroReg+1)& (0+255),w,c
  7232  006AC2  1036               	iorwf	(Conv_Entero@numeroReg+2)& (0+255),w,c
  7233  006AC4  A4D8               	btfss	status,2,c
  7234  006AC6  D7B8               	goto	l2644
  7235                           
  7236                           ;conversion.c: 36: if ( numero < 0)
  7237  006AC8  5012               	movf	Conv_Entero@numero+3,w,c
  7238  006ACA  0A80               	xorlw	128
  7239  006ACC  0F80               	addlw	128
  7240  006ACE  E108               	bnz	u2115
  7241  006AD0  0E00               	movlw	0
  7242  006AD2  5C11               	subwf	Conv_Entero@numero+2,w,c
  7243  006AD4  E105               	bnz	u2115
  7244  006AD6  0E00               	movlw	0
  7245  006AD8  5C10               	subwf	Conv_Entero@numero+1,w,c
  7246  006ADA  E102               	bnz	u2115
  7247  006ADC  0E00               	movlw	0
  7248  006ADE  5C0F               	subwf	Conv_Entero@numero,w,c
  7249  006AE0                     u2115:
  7250  006AE0  B0D8               	btfsc	status,0,c
  7251  006AE2  D009               	goto	l2658
  7252                           
  7253                           ;conversion.c: 37: {
  7254                           ;conversion.c: 38: punteroActual--;
  7255  006AE4  0632               	decf	Conv_Entero@punteroActual,f,c
  7256  006AE6  A0D8               	btfss	status,0,c
  7257  006AE8  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7258                           
  7259                           ;conversion.c: 39: *punteroActual = '-';
  7260  006AEA  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7261  006AEE  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7262  006AF2  0E2D               	movlw	45
  7263  006AF4  6EDF               	movwf	indf2,c
  7264  006AF6                     l2658:
  7265                           
  7266                           ;conversion.c: 40: }
  7267                           ;conversion.c: 42: numeroReg=convTemp+21-punteroActual;
  7268  006AF6  C032  F015         	movff	Conv_Entero@punteroActual,??_Conv_Entero
  7269  006AFA  C033  F016         	movff	Conv_Entero@punteroActual+1,??_Conv_Entero+1
  7270  006AFE  1E15               	comf	??_Conv_Entero,f,c
  7271  006B00  1E16               	comf	??_Conv_Entero+1,f,c
  7272  006B02  4A15               	infsnz	??_Conv_Entero,f,c
  7273  006B04  2A16               	incf	??_Conv_Entero+1,f,c
  7274  006B06  0E15               	movlw	21
  7275  006B08  2615               	addwf	??_Conv_Entero,f,c
  7276  006B0A  0E00               	movlw	0
  7277  006B0C  2216               	addwfc	??_Conv_Entero+1,f,c
  7278  006B0E  0E1A               	movlw	low Conv_Entero@convTemp
  7279  006B10  6E17               	movwf	(??_Conv_Entero+2)& (0+255),c
  7280  006B12  0E00               	movlw	high Conv_Entero@convTemp
  7281  006B14  6E18               	movwf	(??_Conv_Entero+3)& (0+255),c
  7282  006B16  5015               	movf	??_Conv_Entero,w,c
  7283  006B18  2617               	addwf	??_Conv_Entero+2,f,c
  7284  006B1A  5016               	movf	??_Conv_Entero+1,w,c
  7285  006B1C  2218               	addwfc	??_Conv_Entero+3,f,c
  7286  006B1E  C017  F034         	movff	??_Conv_Entero+2,Conv_Entero@numeroReg
  7287  006B22  C018  F035         	movff	??_Conv_Entero+3,Conv_Entero@numeroReg+1
  7288  006B26  0E00               	movlw	0
  7289  006B28  BE35               	btfsc	Conv_Entero@numeroReg+1,7,c
  7290  006B2A  0EFF               	movlw	-1
  7291  006B2C  6E36               	movwf	Conv_Entero@numeroReg+2,c
  7292  006B2E  6E37               	movwf	Conv_Entero@numeroReg+3,c
  7293                           
  7294                           ;conversion.c: 43: for (i = 0; i< numeroReg; i++)
  7295  006B30  0E00               	movlw	0
  7296  006B32  6E31               	movwf	Conv_Entero@i,c
  7297  006B34  D013               	goto	l2666
  7298  006B36                     l2662:
  7299                           
  7300                           ;conversion.c: 44: {
  7301                           ;conversion.c: 50: ((unsigned char *)conv)[i] = ((const unsigned char *)punteroActual)[i
      +                          ];
  7302  006B36  5031               	movf	Conv_Entero@i,w,c
  7303  006B38  0D01               	mullw	1
  7304  006B3A  50F3               	movf	prodl,w,c
  7305  006B3C  2432               	addwf	Conv_Entero@punteroActual,w,c
  7306  006B3E  6ED9               	movwf	fsr2l,c
  7307  006B40  50F4               	movf	prodh,w,c
  7308  006B42  2033               	addwfc	Conv_Entero@punteroActual+1,w,c
  7309  006B44  6EDA               	movwf	fsr2h,c
  7310  006B46  5031               	movf	Conv_Entero@i,w,c
  7311  006B48  0D01               	mullw	1
  7312  006B4A  50F3               	movf	prodl,w,c
  7313  006B4C  2413               	addwf	Conv_Entero@conv,w,c
  7314  006B4E  6EE1               	movwf	fsr1l,c
  7315  006B50  50F4               	movf	prodh,w,c
  7316  006B52  2014               	addwfc	Conv_Entero@conv+1,w,c
  7317  006B54  6EE2               	movwf	fsr1h,c
  7318  006B56  CFDF FFE7          	movff	indf2,indf1
  7319  006B5A  2A31               	incf	Conv_Entero@i,f,c
  7320  006B5C                     l2666:
  7321  006B5C  C031  F015         	movff	Conv_Entero@i,??_Conv_Entero
  7322  006B60  6A16               	clrf	(??_Conv_Entero+1)& (0+255),c
  7323  006B62  6A17               	clrf	(??_Conv_Entero+2)& (0+255),c
  7324  006B64  6A18               	clrf	(??_Conv_Entero+3)& (0+255),c
  7325  006B66  5018               	movf	??_Conv_Entero+3,w,c
  7326  006B68  0A80               	xorlw	128
  7327  006B6A  6E19               	movwf	(??_Conv_Entero+4)& (0+255),c
  7328  006B6C  5034               	movf	Conv_Entero@numeroReg,w,c
  7329  006B6E  5C15               	subwf	??_Conv_Entero,w,c
  7330  006B70  5035               	movf	Conv_Entero@numeroReg+1,w,c
  7331  006B72  5816               	subwfb	??_Conv_Entero+1,w,c
  7332  006B74  5036               	movf	Conv_Entero@numeroReg+2,w,c
  7333  006B76  5817               	subwfb	??_Conv_Entero+2,w,c
  7334  006B78  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7335  006B7A  0A80               	xorlw	128
  7336  006B7C  5819               	subwfb	(??_Conv_Entero+4)& (0+255),w,c
  7337  006B7E  A0D8               	btfss	status,0,c
  7338  006B80  D7DA               	goto	l2662
  7339                           
  7340                           ;conversion.c: 51: }
  7341                           ;conversion.c: 53: return numeroReg - 1;
  7342  006B82  0EFF               	movlw	255
  7343  006B84  2434               	addwf	Conv_Entero@numeroReg,w,c
  7344  006B86  6E0F               	movwf	?_Conv_Entero,c
  7345  006B88  0EFF               	movlw	255
  7346  006B8A  2035               	addwfc	Conv_Entero@numeroReg+1,w,c
  7347  006B8C  6E10               	movwf	?_Conv_Entero+1,c
  7348  006B8E  0012               	return	
  7349  006B90                     __end_of_Conv_Entero:
  7350                           	opt stack 0
  7351                           tblptru	equ	0xFF8
  7352                           tblptrh	equ	0xFF7
  7353                           tblptrl	equ	0xFF6
  7354                           tablat	equ	0xFF5
  7355                           prodh	equ	0xFF4
  7356                           prodl	equ	0xFF3
  7357                           postinc0	equ	0xFEE
  7358                           wreg	equ	0xFE8
  7359                           indf1	equ	0xFE7
  7360                           postinc1	equ	0xFE6
  7361                           postdec1	equ	0xFE5
  7362                           fsr1h	equ	0xFE2
  7363                           fsr1l	equ	0xFE1
  7364                           indf2	equ	0xFDF
  7365                           postinc2	equ	0xFDE
  7366                           postdec2	equ	0xFDD
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function ___lmul *****************
  7372 ;; Defined at:
  7373 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  multiplier      4    0[COMRAM] unsigned long 
  7376 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  product         4    8[COMRAM] unsigned long 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  4    0[COMRAM] unsigned long 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7388 ;;      Params:         8       0       0       0       0       0       0       0       0
  7389 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7391 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7392 ;;Total ram usage:       12 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_PWM_generar
  7398 ;;		_Conv_Entero
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text20
  7403  005DF4                     __ptext20:
  7404                           	opt stack 0
  7405  005DF4                     ___lmul:
  7406                           	opt stack 29
  7407                           
  7408                           ;incstack = 0
  7409  005DF4  0E00               	movlw	0
  7410  005DF6  6E09               	movwf	___lmul@product,c
  7411  005DF8  0E00               	movlw	0
  7412  005DFA  6E0A               	movwf	___lmul@product+1,c
  7413  005DFC  0E00               	movlw	0
  7414  005DFE  6E0B               	movwf	___lmul@product+2,c
  7415  005E00  0E00               	movlw	0
  7416  005E02  6E0C               	movwf	___lmul@product+3,c
  7417  005E04                     l2390:
  7418  005E04  A001               	btfss	___lmul@multiplier,0,c
  7419  005E06  D008               	goto	l2394
  7420  005E08  5005               	movf	___lmul@multiplicand,w,c
  7421  005E0A  2609               	addwf	___lmul@product,f,c
  7422  005E0C  5006               	movf	___lmul@multiplicand+1,w,c
  7423  005E0E  220A               	addwfc	___lmul@product+1,f,c
  7424  005E10  5007               	movf	___lmul@multiplicand+2,w,c
  7425  005E12  220B               	addwfc	___lmul@product+2,f,c
  7426  005E14  5008               	movf	___lmul@multiplicand+3,w,c
  7427  005E16  220C               	addwfc	___lmul@product+3,f,c
  7428  005E18                     l2394:
  7429  005E18  90D8               	bcf	status,0,c
  7430  005E1A  3605               	rlcf	___lmul@multiplicand,f,c
  7431  005E1C  3606               	rlcf	___lmul@multiplicand+1,f,c
  7432  005E1E  3607               	rlcf	___lmul@multiplicand+2,f,c
  7433  005E20  3608               	rlcf	___lmul@multiplicand+3,f,c
  7434  005E22  90D8               	bcf	status,0,c
  7435  005E24  3204               	rrcf	___lmul@multiplier+3,f,c
  7436  005E26  3203               	rrcf	___lmul@multiplier+2,f,c
  7437  005E28  3202               	rrcf	___lmul@multiplier+1,f,c
  7438  005E2A  3201               	rrcf	___lmul@multiplier,f,c
  7439  005E2C  5004               	movf	___lmul@multiplier+3,w,c
  7440  005E2E  1001               	iorwf	___lmul@multiplier,w,c
  7441  005E30  1002               	iorwf	___lmul@multiplier+1,w,c
  7442  005E32  1003               	iorwf	___lmul@multiplier+2,w,c
  7443  005E34  A4D8               	btfss	status,2,c
  7444  005E36  D7E6               	goto	l2390
  7445  005E38  C009  F001         	movff	___lmul@product,?___lmul
  7446  005E3C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7447  005E40  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7448  005E44  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7449  005E48  0012               	return	
  7450  005E4A                     __end_of___lmul:
  7451                           	opt stack 0
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           postinc0	equ	0xFEE
  7459                           wreg	equ	0xFE8
  7460                           indf1	equ	0xFE7
  7461                           postinc1	equ	0xFE6
  7462                           postdec1	equ	0xFE5
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           indf2	equ	0xFDF
  7466                           postinc2	equ	0xFDE
  7467                           postdec2	equ	0xFDD
  7468                           fsr2h	equ	0xFDA
  7469                           fsr2l	equ	0xFD9
  7470                           status	equ	0xFD8
  7471                           
  7472 ;; *************** function ___almod *****************
  7473 ;; Defined at:
  7474 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/almod.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  dividend        4    0[COMRAM] long 
  7477 ;;  divisor         4    4[COMRAM] long 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  sign            1    9[COMRAM] unsigned char 
  7480 ;;  counter         1    8[COMRAM] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  4    0[COMRAM] long 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7490 ;;      Params:         8       0       0       0       0       0       0       0       0
  7491 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7493 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7494 ;;Total ram usage:       10 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_Conv_Entero
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text21
  7504  00646C                     __ptext21:
  7505                           	opt stack 0
  7506  00646C                     ___almod:
  7507                           	opt stack 29
  7508                           
  7509                           ;incstack = 0
  7510  00646C  0E00               	movlw	0
  7511  00646E  6E0A               	movwf	___almod@sign,c
  7512  006470  5004               	movf	___almod@dividend+3,w,c
  7513  006472  0A80               	xorlw	128
  7514  006474  0F80               	addlw	128
  7515  006476  E108               	bnz	u1945
  7516  006478  0E00               	movlw	0
  7517  00647A  5C03               	subwf	___almod@dividend+2,w,c
  7518  00647C  E105               	bnz	u1945
  7519  00647E  0E00               	movlw	0
  7520  006480  5C02               	subwf	___almod@dividend+1,w,c
  7521  006482  E102               	bnz	u1945
  7522  006484  0E00               	movlw	0
  7523  006486  5C01               	subwf	___almod@dividend,w,c
  7524  006488                     u1945:
  7525  006488  B0D8               	btfsc	status,0,c
  7526  00648A  D00A               	goto	l2450
  7527  00648C  1E04               	comf	___almod@dividend+3,f,c
  7528  00648E  1E03               	comf	___almod@dividend+2,f,c
  7529  006490  1E02               	comf	___almod@dividend+1,f,c
  7530  006492  6C01               	negf	___almod@dividend,c
  7531  006494  0E00               	movlw	0
  7532  006496  2202               	addwfc	___almod@dividend+1,f,c
  7533  006498  2203               	addwfc	___almod@dividend+2,f,c
  7534  00649A  2204               	addwfc	___almod@dividend+3,f,c
  7535  00649C  0E01               	movlw	1
  7536  00649E  6E0A               	movwf	___almod@sign,c
  7537  0064A0                     l2450:
  7538  0064A0  5008               	movf	___almod@divisor+3,w,c
  7539  0064A2  0A80               	xorlw	128
  7540  0064A4  0F80               	addlw	128
  7541  0064A6  E108               	bnz	u1955
  7542  0064A8  0E00               	movlw	0
  7543  0064AA  5C07               	subwf	___almod@divisor+2,w,c
  7544  0064AC  E105               	bnz	u1955
  7545  0064AE  0E00               	movlw	0
  7546  0064B0  5C06               	subwf	___almod@divisor+1,w,c
  7547  0064B2  E102               	bnz	u1955
  7548  0064B4  0E00               	movlw	0
  7549  0064B6  5C05               	subwf	___almod@divisor,w,c
  7550  0064B8                     u1955:
  7551  0064B8  B0D8               	btfsc	status,0,c
  7552  0064BA  D008               	goto	l2454
  7553  0064BC  1E08               	comf	___almod@divisor+3,f,c
  7554  0064BE  1E07               	comf	___almod@divisor+2,f,c
  7555  0064C0  1E06               	comf	___almod@divisor+1,f,c
  7556  0064C2  6C05               	negf	___almod@divisor,c
  7557  0064C4  0E00               	movlw	0
  7558  0064C6  2206               	addwfc	___almod@divisor+1,f,c
  7559  0064C8  2207               	addwfc	___almod@divisor+2,f,c
  7560  0064CA  2208               	addwfc	___almod@divisor+3,f,c
  7561  0064CC                     l2454:
  7562  0064CC  5008               	movf	___almod@divisor+3,w,c
  7563  0064CE  1005               	iorwf	___almod@divisor,w,c
  7564  0064D0  1006               	iorwf	___almod@divisor+1,w,c
  7565  0064D2  1007               	iorwf	___almod@divisor+2,w,c
  7566  0064D4  B4D8               	btfsc	status,2,c
  7567  0064D6  D024               	goto	l2470
  7568  0064D8  0E01               	movlw	1
  7569  0064DA  6E09               	movwf	___almod@counter,c
  7570  0064DC  D006               	goto	l2460
  7571  0064DE                     l2458:
  7572  0064DE  90D8               	bcf	status,0,c
  7573  0064E0  3605               	rlcf	___almod@divisor,f,c
  7574  0064E2  3606               	rlcf	___almod@divisor+1,f,c
  7575  0064E4  3607               	rlcf	___almod@divisor+2,f,c
  7576  0064E6  3608               	rlcf	___almod@divisor+3,f,c
  7577  0064E8  2A09               	incf	___almod@counter,f,c
  7578  0064EA                     l2460:
  7579  0064EA  AE08               	btfss	___almod@divisor+3,7,c
  7580  0064EC  D7F8               	goto	l2458
  7581  0064EE                     l2462:
  7582  0064EE  5005               	movf	___almod@divisor,w,c
  7583  0064F0  5C01               	subwf	___almod@dividend,w,c
  7584  0064F2  5006               	movf	___almod@divisor+1,w,c
  7585  0064F4  5802               	subwfb	___almod@dividend+1,w,c
  7586  0064F6  5007               	movf	___almod@divisor+2,w,c
  7587  0064F8  5803               	subwfb	___almod@dividend+2,w,c
  7588  0064FA  5008               	movf	___almod@divisor+3,w,c
  7589  0064FC  5804               	subwfb	___almod@dividend+3,w,c
  7590  0064FE  A0D8               	btfss	status,0,c
  7591  006500  D008               	goto	l2466
  7592  006502  5005               	movf	___almod@divisor,w,c
  7593  006504  5E01               	subwf	___almod@dividend,f,c
  7594  006506  5006               	movf	___almod@divisor+1,w,c
  7595  006508  5A02               	subwfb	___almod@dividend+1,f,c
  7596  00650A  5007               	movf	___almod@divisor+2,w,c
  7597  00650C  5A03               	subwfb	___almod@dividend+2,f,c
  7598  00650E  5008               	movf	___almod@divisor+3,w,c
  7599  006510  5A04               	subwfb	___almod@dividend+3,f,c
  7600  006512                     l2466:
  7601  006512  90D8               	bcf	status,0,c
  7602  006514  3208               	rrcf	___almod@divisor+3,f,c
  7603  006516  3207               	rrcf	___almod@divisor+2,f,c
  7604  006518  3206               	rrcf	___almod@divisor+1,f,c
  7605  00651A  3205               	rrcf	___almod@divisor,f,c
  7606  00651C  2E09               	decfsz	___almod@counter,f,c
  7607  00651E  D7E7               	goto	l2462
  7608  006520                     l2470:
  7609  006520  500A               	movf	___almod@sign,w,c
  7610  006522  B4D8               	btfsc	status,2,c
  7611  006524  D008               	goto	l2474
  7612  006526  1E04               	comf	___almod@dividend+3,f,c
  7613  006528  1E03               	comf	___almod@dividend+2,f,c
  7614  00652A  1E02               	comf	___almod@dividend+1,f,c
  7615  00652C  6C01               	negf	___almod@dividend,c
  7616  00652E  0E00               	movlw	0
  7617  006530  2202               	addwfc	___almod@dividend+1,f,c
  7618  006532  2203               	addwfc	___almod@dividend+2,f,c
  7619  006534  2204               	addwfc	___almod@dividend+3,f,c
  7620  006536                     l2474:
  7621  006536  C001  F001         	movff	___almod@dividend,?___almod
  7622  00653A  C002  F002         	movff	___almod@dividend+1,?___almod+1
  7623  00653E  C003  F003         	movff	___almod@dividend+2,?___almod+2
  7624  006542  C004  F004         	movff	___almod@dividend+3,?___almod+3
  7625  006546  0012               	return	
  7626  006548                     __end_of___almod:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           postinc0	equ	0xFEE
  7635                           wreg	equ	0xFE8
  7636                           indf1	equ	0xFE7
  7637                           postinc1	equ	0xFE6
  7638                           postdec1	equ	0xFE5
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           postdec2	equ	0xFDD
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function ___aldiv *****************
  7649 ;; Defined at:
  7650 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/aldiv.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  dividend        4    0[COMRAM] long 
  7653 ;;  divisor         4    4[COMRAM] long 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  quotient        4   10[COMRAM] long 
  7656 ;;  sign            1    9[COMRAM] unsigned char 
  7657 ;;  counter         1    8[COMRAM] unsigned char 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  4    0[COMRAM] long 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7667 ;;      Params:         8       0       0       0       0       0       0       0       0
  7668 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7670 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:       14 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_Conv_Entero
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text22
  7681  006548                     __ptext22:
  7682                           	opt stack 0
  7683  006548                     ___aldiv:
  7684                           	opt stack 29
  7685                           
  7686                           ;incstack = 0
  7687  006548  0E00               	movlw	0
  7688  00654A  6E0A               	movwf	___aldiv@sign,c
  7689  00654C  5008               	movf	___aldiv@divisor+3,w,c
  7690  00654E  0A80               	xorlw	128
  7691  006550  0F80               	addlw	128
  7692  006552  E108               	bnz	u1885
  7693  006554  0E00               	movlw	0
  7694  006556  5C07               	subwf	___aldiv@divisor+2,w,c
  7695  006558  E105               	bnz	u1885
  7696  00655A  0E00               	movlw	0
  7697  00655C  5C06               	subwf	___aldiv@divisor+1,w,c
  7698  00655E  E102               	bnz	u1885
  7699  006560  0E00               	movlw	0
  7700  006562  5C05               	subwf	___aldiv@divisor,w,c
  7701  006564                     u1885:
  7702  006564  B0D8               	btfsc	status,0,c
  7703  006566  D00A               	goto	l2406
  7704  006568  1E08               	comf	___aldiv@divisor+3,f,c
  7705  00656A  1E07               	comf	___aldiv@divisor+2,f,c
  7706  00656C  1E06               	comf	___aldiv@divisor+1,f,c
  7707  00656E  6C05               	negf	___aldiv@divisor,c
  7708  006570  0E00               	movlw	0
  7709  006572  2206               	addwfc	___aldiv@divisor+1,f,c
  7710  006574  2207               	addwfc	___aldiv@divisor+2,f,c
  7711  006576  2208               	addwfc	___aldiv@divisor+3,f,c
  7712  006578  0E01               	movlw	1
  7713  00657A  6E0A               	movwf	___aldiv@sign,c
  7714  00657C                     l2406:
  7715  00657C  5004               	movf	___aldiv@dividend+3,w,c
  7716  00657E  0A80               	xorlw	128
  7717  006580  0F80               	addlw	128
  7718  006582  E108               	bnz	u1895
  7719  006584  0E00               	movlw	0
  7720  006586  5C03               	subwf	___aldiv@dividend+2,w,c
  7721  006588  E105               	bnz	u1895
  7722  00658A  0E00               	movlw	0
  7723  00658C  5C02               	subwf	___aldiv@dividend+1,w,c
  7724  00658E  E102               	bnz	u1895
  7725  006590  0E00               	movlw	0
  7726  006592  5C01               	subwf	___aldiv@dividend,w,c
  7727  006594                     u1895:
  7728  006594  B0D8               	btfsc	status,0,c
  7729  006596  D00A               	goto	l2412
  7730  006598  1E04               	comf	___aldiv@dividend+3,f,c
  7731  00659A  1E03               	comf	___aldiv@dividend+2,f,c
  7732  00659C  1E02               	comf	___aldiv@dividend+1,f,c
  7733  00659E  6C01               	negf	___aldiv@dividend,c
  7734  0065A0  0E00               	movlw	0
  7735  0065A2  2202               	addwfc	___aldiv@dividend+1,f,c
  7736  0065A4  2203               	addwfc	___aldiv@dividend+2,f,c
  7737  0065A6  2204               	addwfc	___aldiv@dividend+3,f,c
  7738  0065A8  0E01               	movlw	1
  7739  0065AA  1A0A               	xorwf	___aldiv@sign,f,c
  7740  0065AC                     l2412:
  7741  0065AC  0E00               	movlw	0
  7742  0065AE  6E0B               	movwf	___aldiv@quotient,c
  7743  0065B0  0E00               	movlw	0
  7744  0065B2  6E0C               	movwf	___aldiv@quotient+1,c
  7745  0065B4  0E00               	movlw	0
  7746  0065B6  6E0D               	movwf	___aldiv@quotient+2,c
  7747  0065B8  0E00               	movlw	0
  7748  0065BA  6E0E               	movwf	___aldiv@quotient+3,c
  7749  0065BC  5008               	movf	___aldiv@divisor+3,w,c
  7750  0065BE  1005               	iorwf	___aldiv@divisor,w,c
  7751  0065C0  1006               	iorwf	___aldiv@divisor+1,w,c
  7752  0065C2  1007               	iorwf	___aldiv@divisor+2,w,c
  7753  0065C4  B4D8               	btfsc	status,2,c
  7754  0065C6  D02A               	goto	l2434
  7755  0065C8  0E01               	movlw	1
  7756  0065CA  6E09               	movwf	___aldiv@counter,c
  7757  0065CC  D006               	goto	l2420
  7758  0065CE                     l2418:
  7759  0065CE  90D8               	bcf	status,0,c
  7760  0065D0  3605               	rlcf	___aldiv@divisor,f,c
  7761  0065D2  3606               	rlcf	___aldiv@divisor+1,f,c
  7762  0065D4  3607               	rlcf	___aldiv@divisor+2,f,c
  7763  0065D6  3608               	rlcf	___aldiv@divisor+3,f,c
  7764  0065D8  2A09               	incf	___aldiv@counter,f,c
  7765  0065DA                     l2420:
  7766  0065DA  AE08               	btfss	___aldiv@divisor+3,7,c
  7767  0065DC  D7F8               	goto	l2418
  7768  0065DE                     l2422:
  7769  0065DE  90D8               	bcf	status,0,c
  7770  0065E0  360B               	rlcf	___aldiv@quotient,f,c
  7771  0065E2  360C               	rlcf	___aldiv@quotient+1,f,c
  7772  0065E4  360D               	rlcf	___aldiv@quotient+2,f,c
  7773  0065E6  360E               	rlcf	___aldiv@quotient+3,f,c
  7774  0065E8  5005               	movf	___aldiv@divisor,w,c
  7775  0065EA  5C01               	subwf	___aldiv@dividend,w,c
  7776  0065EC  5006               	movf	___aldiv@divisor+1,w,c
  7777  0065EE  5802               	subwfb	___aldiv@dividend+1,w,c
  7778  0065F0  5007               	movf	___aldiv@divisor+2,w,c
  7779  0065F2  5803               	subwfb	___aldiv@dividend+2,w,c
  7780  0065F4  5008               	movf	___aldiv@divisor+3,w,c
  7781  0065F6  5804               	subwfb	___aldiv@dividend+3,w,c
  7782  0065F8  A0D8               	btfss	status,0,c
  7783  0065FA  D009               	goto	l2430
  7784  0065FC  5005               	movf	___aldiv@divisor,w,c
  7785  0065FE  5E01               	subwf	___aldiv@dividend,f,c
  7786  006600  5006               	movf	___aldiv@divisor+1,w,c
  7787  006602  5A02               	subwfb	___aldiv@dividend+1,f,c
  7788  006604  5007               	movf	___aldiv@divisor+2,w,c
  7789  006606  5A03               	subwfb	___aldiv@dividend+2,f,c
  7790  006608  5008               	movf	___aldiv@divisor+3,w,c
  7791  00660A  5A04               	subwfb	___aldiv@dividend+3,f,c
  7792  00660C  800B               	bsf	___aldiv@quotient,0,c
  7793  00660E                     l2430:
  7794  00660E  90D8               	bcf	status,0,c
  7795  006610  3208               	rrcf	___aldiv@divisor+3,f,c
  7796  006612  3207               	rrcf	___aldiv@divisor+2,f,c
  7797  006614  3206               	rrcf	___aldiv@divisor+1,f,c
  7798  006616  3205               	rrcf	___aldiv@divisor,f,c
  7799  006618  2E09               	decfsz	___aldiv@counter,f,c
  7800  00661A  D7E1               	goto	l2422
  7801  00661C                     l2434:
  7802  00661C  500A               	movf	___aldiv@sign,w,c
  7803  00661E  B4D8               	btfsc	status,2,c
  7804  006620  D008               	goto	l2438
  7805  006622  1E0E               	comf	___aldiv@quotient+3,f,c
  7806  006624  1E0D               	comf	___aldiv@quotient+2,f,c
  7807  006626  1E0C               	comf	___aldiv@quotient+1,f,c
  7808  006628  6C0B               	negf	___aldiv@quotient,c
  7809  00662A  0E00               	movlw	0
  7810  00662C  220C               	addwfc	___aldiv@quotient+1,f,c
  7811  00662E  220D               	addwfc	___aldiv@quotient+2,f,c
  7812  006630  220E               	addwfc	___aldiv@quotient+3,f,c
  7813  006632                     l2438:
  7814  006632  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  7815  006636  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  7816  00663A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  7817  00663E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  7818  006642  0012               	return	
  7819  006644                     __end_of___aldiv:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           postinc0	equ	0xFEE
  7828                           wreg	equ	0xFE8
  7829                           indf1	equ	0xFE7
  7830                           postinc1	equ	0xFE6
  7831                           postdec1	equ	0xFE5
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           tblptru	equ	0xFF8
  7841                           tblptrh	equ	0xFF7
  7842                           tblptrl	equ	0xFF6
  7843                           tablat	equ	0xFF5
  7844                           prodh	equ	0xFF4
  7845                           prodl	equ	0xFF3
  7846                           postinc0	equ	0xFEE
  7847                           wreg	equ	0xFE8
  7848                           indf1	equ	0xFE7
  7849                           postinc1	equ	0xFE6
  7850                           postdec1	equ	0xFE5
  7851                           fsr1h	equ	0xFE2
  7852                           fsr1l	equ	0xFE1
  7853                           indf2	equ	0xFDF
  7854                           postinc2	equ	0xFDE
  7855                           postdec2	equ	0xFDD
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860                           	psect	rparam
  7861  0000                     tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           postinc0	equ	0xFEE
  7868                           wreg	equ	0xFE8
  7869                           indf1	equ	0xFE7
  7870                           postinc1	equ	0xFE6
  7871                           postdec1	equ	0xFE5
  7872                           fsr1h	equ	0xFE2
  7873                           fsr1l	equ	0xFE1
  7874                           indf2	equ	0xFDF
  7875                           postinc2	equ	0xFDE
  7876                           postdec2	equ	0xFDD
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8


Data Sizes:
    Strings     395
    Constant    0
    Data        212
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      68
    BANK0           160     50     126
    BANK1           256      0     152
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Conv_Entero@conv	PTR unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), main@cad(BANK0[20]), 

    Conv_Entero@punteroActual	PTR unsigned char  size(2) Largest target is 21
		 -> Conv_Entero@convTemp(COMRAM[21]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_91(CODE[8]), STR_90(CODE[10]), STR_89(CODE[8]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[8]), STR_85(CODE[10]), STR_84(CODE[10]), 
		 -> STR_83(CODE[14]), STR_82(CODE[7]), STR_81(CODE[9]), STR_80(CODE[7]), 
		 -> STR_79(CODE[9]), STR_78(CODE[9]), STR_77(CODE[7]), STR_76(CODE[9]), 
		 -> STR_75(CODE[9]), STR_74(CODE[12]), STR_73(CODE[7]), STR_72(CODE[2]), 
		 -> STR_71(CODE[4]), STR_70(CODE[11]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[6]), STR_66(CODE[5]), STR_65(CODE[5]), STR_64(CODE[5]), 
		 -> STR_63(CODE[6]), STR_62(CODE[5]), STR_61(CODE[5]), STR_60(CODE[5]), 
		 -> STR_59(CODE[6]), STR_58(CODE[5]), STR_57(CODE[5]), STR_56(CODE[5]), 
		 -> STR_55(CODE[6]), STR_54(CODE[5]), STR_53(CODE[5]), STR_52(CODE[6]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[5]), STR_48(CODE[5]), 
		 -> STR_47(CODE[5]), STR_46(CODE[5]), STR_45(CODE[5]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), STR_32(CODE[5]), 
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[9]), STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> STR_11(CODE[14]), STR_10(CODE[9]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[11]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_SENO_GENERAR_1
    _main->_TRIAN_GENERAR_1
    _lcd_goto->_Lcd_Cmd
    _TRIAN_GENERAR_2->_PWM_1
    _TRIAN_GENERAR_1->_PWM_1
    _PWM_1->___awdiv
    _SENO_GENERAR_3->_PWM
    _SENO_GENERAR_2->_PWM
    _SENO_GENERAR_1->_PWM
    _PWM->___awdiv
    _PWM_generar->___lldiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Conv_Entero->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   23939
                                             60 COMRAM     1     1      0
                                              0 BANK0     50    50      0
                        _Conv_Entero
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                        _PWM_generar
                     _SENO_GENERAR_1
                     _SENO_GENERAR_2
                     _SENO_GENERAR_3
                    _TRIAN_GENERAR_1
                    _TRIAN_GENERAR_2
                             ___wmul
                           _lcd_goto
                              _tm_1s
 ---------------------------------------------------------------------------------
 (1) _tm_1s                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4     568
                                              3 COMRAM     7     3      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TRIAN_GENERAR_2                                     40    40      0    1167
                                             16 COMRAM    40    40      0
                              _PWM_1
 ---------------------------------------------------------------------------------
 (1) _TRIAN_GENERAR_1                                     48    48      0    1167
                                             16 COMRAM    44    44      0
                              _PWM_1
 ---------------------------------------------------------------------------------
 (2) _PWM_1                                                8     4      4    1075
                                              8 COMRAM     8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SENO_GENERAR_3                                      34    34      0    1167
                                             16 COMRAM    34    34      0
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _SENO_GENERAR_2                                      40    40      0    1167
                                             16 COMRAM    40    40      0
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _SENO_GENERAR_1                                      48    48      0    1167
                                             16 COMRAM    44    44      0
                                _PWM
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  8     4      4    1075
                                              8 COMRAM     8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _PWM_generar                                         20    16      4    1408
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3   12181
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     661
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Conv_Entero                                         41    35      6    2017
                                             14 COMRAM    41    35      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conv_Entero
     ___aldiv
     ___almod
     ___lmul
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM_generar
     ___lldiv
     ___lmul
   _SENO_GENERAR_1
     _PWM
       ___awdiv
   _SENO_GENERAR_2
     _PWM
       ___awdiv
   _SENO_GENERAR_3
     _PWM
       ___awdiv
   _TRIAN_GENERAR_1
     _PWM_1
       ___awdiv
   _TRIAN_GENERAR_2
     _PWM_1
       ___awdiv
   ___wmul
   _lcd_goto
     _Lcd_Cmd
   _tm_1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      98       8       59.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      7E       5       78.8%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     3D      44       1       71.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A       6        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri May 31 22:57:56 2019

                       _B 00CE                         _C 003E                         _D 0040  
                       _M 00D0                         _e 00D2                         _p 00D4  
                       _q 00D6                         _r 00D8                         _t 00DA  
                       _w 00DC                        l44 66BA              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000         PWM_generar@PR2cal 001A  
                     l115 6E4C                       l222 7E18                       l143 773E  
                     l216 7DE2                       l163 7774                       l157 7708  
                     l327 611A                       l175 795E                       l192 7B80  
                     l337 6184                       l169 7916                       l277 5FDC  
                     l198 7BB6                       l287 6046                       l297 60B0  
                     l814 61FA              __CFG_CPB$OFF 000000                       _PR2 000FBB  
            __CFG_CPD$OFF 000000                       _PWM 620C                       wreg 000FE8  
          _SENO_GENERAR_1 5F78            _SENO_GENERAR_2 5FE2            _SENO_GENERAR_3 604C  
            __CFG_LVP$OFF 000000                      ?_PWM 0009                      l3016 73D2  
                    l2250 6422                      l3202 7928                      l3114 76EC  
                    l3034 746A                      l2420 65DA                      l2412 65AC  
                    l2252 642A                      l2244 640C                      l3124 7724  
                    l3108 76D2                      l3052 7502                      l3220 7986  
                    l2430 660E                      l2422 65DE                      l2406 657C  
                    l2270 6462                      l2262 644A                      l2254 642E  
                    l2238 63EC                      l3150 77A2                      l3134 7758  
                    l3320 7B9A                      l3232 79DA                      l3208 7942  
                    l3160 77F2                      l3144 7790                      l3128 7734  
                    l3080 75EA                      l3152 77AE                      l2418 65CE  
                    l2434 661C                      l2450 64A0                      l2610 5F64  
                    l2602 5F2E                      l2266 6454                      l3330 7BD2  
                    l3314 7B76                      l3218 797A                      l3066 7576  
                    l2460 64EA                      l2604 5F48                      l2620 5DBA  
                    l3412 7D56                      l3308 7B62                      l3252 7A4E  
                    l3260 7A6C                      l2438 6632                      l2462 64EE  
                    l2470 6520                      l2454 64CC                      l2390 5E04  
                    l2606 5F50                      l2614 5DA8                      l3406 7D42  
                    l3414 7D60                      l3350 7C30                      l3094 765E  
                    l2720 5F90                      l2616 5DAE                      l2624 5DC2  
                    l3440 7DD8                      l3336 7BE4                      l3280 7AE0  
                    l3192 78FC                      l2474 6536                      l2466 6512  
                    l2458 64DE                      l2394 5E18                      l2570 5E4E  
                    l2618 5DB4                      l2626 5DEC                      l3434 7DC4  
                    l3258 7A62                      l3338 7BEE                      l2810 6E16  
                    l2644 6A38                      l2572 5E54                      l2580 5E68  
                    l2484 61AC                      l3196 790C                      l2900 7060  
                    l2662 6B36                      l2574 5E5A                      l2582 5E82  
                    l2486 61B8                      l3462 7E46                      l3446 7DFC  
                    l3286 7AF4                      l2910 7092                      l2902 706A  
                    l2584 5E8A                      l2576 5E60                      l2592 5F14  
                    l2496 61EC                      l2488 61BC                      l2736 5FFA  
                    l2752 6064                      l3456 7E34                      l3384 7CC4  
                    l3464 7E50                      l3288 7AFE                      l2912 709C  
                    l2904 7074                      l2920 70BE                      l2816 6E30  
                    l2666 6B5C                      l2658 6AF6                      l2594 5F1A  
                    l2682 6C18                      l3378 7CB0                      l3386 7CCE  
                    l2930 7116                      l2914 70A6                      l2906 707E  
                    l2922 70F8                      l2588 5E9C                      l2596 5F20  
                    l2916 70B0                      l2908 7088                      l2932 7120  
                    l2828 6E8E                      l2598 5F26                      l2686 6C68  
                    l2942 7168                      l2926 7106                      l2838 6ED8  
                    l2768 60CE                      l2784 6138                      l2880 7010  
                    l2848 6F26                      l2962 720A                      l2858 6F70  
                    l2980 72A2                      l2868 6FBE                      l2998 733A  
                    STR_1 7EF5                      STR_2 7E73                      STR_3 7F8C  
                    STR_4 7EAD                      STR_5 7EC5                      STR_6 7EDD  
                    STR_7 7ED1                      STR_8 7EDD                      STR_9 7E83  
                    u2130 6BFE                      u2115 6AE0                      u2140 6C54  
                    u2221 5FF0                      u2301 60C4                      u2135 6BF4  
                    u2145 6C4A                      u2170 6DA4                      u2165 6CF8  
                    u2181 5F86                      u2261 605A                      u2341 612E  
                    u2095 6A00                      u2175 6D9A                      u1725 676E  
                    u3317 6E26                      u1735 6788                      u1815 6280  
                    u3407 7BAC                      u3327 6E42                      u1745 67AC  
                    u1817 6282                      u3417 7DF2                      u3337 76E2  
                    u3507 6666                      u1755 6896                      u1835 62FE  
                    u3427 7E0E                      u3347 76FE                      u3517 6674  
                    u1765 68B0                      u1837 6300                      u3437 5D5C  
                    u3357 774E                      u3607 67E2                      u3527 6682  
                    u3447 690A                      u1775 68D4                      u1855 6312  
                    u3367 776A                      u1945 6488                      u3617 67EC  
                    u3537 6690                      u3457 6914                      u1857 6314  
                    u3377 7938                      u1955 64B8                      u3627 6866  
                    u3547 669E                      u3467 698E                      u1795 626C  
                    u3387 7954                      u1885 6564                      u3637 6870  
                    u3557 66AC                      u3477 6998                      u1797 626E  
                    u3397 7B90                      u1895 6594                      u3647 687E  
                    u3567 66D4                      u3487 69A2                      u3577 66EC  
                    u3497 69AE                      u3587 6716                      u3597 672E  
                    _TMR2 000FBC             PWM_1@calculos 000F               _PWM_generar 6B90  
                    _main 6DC4                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           __CFG_BORV$190 000000              lcd_goto@data 000A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_Lcd_Cmd 6888           __end_of_Lcd_Out 5EAC             __CFG_MCLRE$ON 000000  
            main@cantidad 00C7                _Lcd_Chr_CP 6888                     ??_PWM 000D  
          Lcd_Out2@buffer 0005       __end_of_Conv_Entero 6B90           __end_of___aldiv 6644  
         __end_of___almod 6548                     ?_main 0001           __end_of___awdiv 646C  
                   STR_10 7F6A                     STR_11 7E91                     STR_12 7F6A  
                   STR_20 7FCD                     STR_21 7FD7                     STR_13 7F7C  
                   STR_14 7E83                     STR_30 7FBE                     STR_22 7FA5  
                   STR_31 7FC3                     STR_23 7FB4                     STR_15 7F73  
                   STR_40 7FA5                     STR_24 7FB9                     STR_32 7FCD  
                   STR_16 7FAA                     STR_41 7FAF                     STR_25 7FC3  
                   STR_33 7FD7                     STR_17 7FAF                     STR_34 7FA5  
                   STR_42 7FB9                     STR_50 7FCD                     STR_26 7FCD  
                   STR_18 7FB9                     STR_35 7FAF                     STR_43 7FC3  
                   STR_27 7FD7                     STR_51 7FDC                     STR_19 7FC3  
                   STR_28 7FA5                     STR_36 7FB9                     STR_60 7FE1  
                   STR_44 7FD2                     STR_52 7F9F                     STR_29 7FAF  
                   STR_45 7FD7                     STR_61 7FE6                     STR_53 7FE6  
                   STR_37 7FC8                     STR_46 7FA5                     STR_38 7FCD  
                   STR_62 7FF5                     STR_54 7FF0                     STR_70 7F00  
                   STR_63 7F93                     STR_47 7FAF                     STR_39 7FD7  
                   STR_71 7FFA                     STR_55 7F93                     STR_72 7F97  
                   STR_48 7FB9                     STR_64 7FE1                     STR_80 7F51  
                   STR_56 7FE1                     STR_49 7FC3                     STR_65 7FE6  
                   STR_57 7FEB                     STR_73 7F85                     STR_81 7F61  
                   STR_66 7FF0                     STR_58 7FF0                     STR_82 7F63  
                   STR_90 7F33                     STR_74 7EB9                     STR_59 7F93  
                   STR_91 7F35                     STR_67 7F99                     STR_75 7F46  
                   STR_83 7E9F                     STR_68 7EC5                     STR_76 7F4F  
                   STR_84 7F15                     STR_77 7F3F                     STR_85 7F1F  
                   STR_69 7EE9                     STR_86 7F0D                     STR_78 7F3D  
                   STR_79 7F58                     STR_87 7F0B                     STR_88 7F29  
                   STR_89 7F21           __end_of___lldiv 620C           ___awdiv@divisor 0003  
                   _T2CON 000FBA    __end_of_SENO_GENERAR_1 5FE2    __end_of_SENO_GENERAR_2 604C  
  __end_of_SENO_GENERAR_3 60B6           ___awdiv@counter 0005                     _PORTA 000F80  
                   _TRISA 000F92                     _PWM_1 629E             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000       ___lmul@multiplicand 0005  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _tm_1s 5D3E                     main@A 00CD  
                   main@V 00C4                     main@X 00C9                     main@Z 00CB  
          __pbitbssCOMRAM 0220                     tablat 000FF5                     status 000FD8  
          __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000  
        __end_of_Lcd_Init 6760          __end_of_Lcd_Out2 5F78           __initialization 5EAC  
            __end_of_main 7E72                    ??_main 003D             __activetblptr 000002  
         ?_SENO_GENERAR_1 0001           ?_SENO_GENERAR_2 0001           ?_SENO_GENERAR_3 0001  
                  ?_PWM_1 0009            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
                  PWM@BIT 0220                    ?_tm_1s 0001                    _CCPR1L 000FBE  
                  _CCPR2L 000F90          ___awdiv@dividend 0001                    _ANSELA 000F5B  
                  _ANSELC 000F5D                    _ANSELD 000F5E            __CFG_WDTEN$OFF 000000  
                  _OSCCON 000FD3                 ??_Lcd_Cmd 0001                 ??_Lcd_Out 0007  
         _TRIAN_GENERAR_1 60B6           _TRIAN_GENERAR_2 6120            __CFG_XINST$OFF 000000  
             _Conv_Entero 69B8          __end_of_lcd_goto 5DF4           SENO_GENERAR_1@i 003B  
         SENO_GENERAR_2@i 0037           SENO_GENERAR_3@i 0031                    ___lmul 5DF4  
             ?_Lcd_Chr_CP 0001                 ??___aldiv 0009                 ??___almod 0009  
                  ___wmul 5D18                 ??___awdiv 0005            __CFG_STVREN$ON 000000  
               ??___lldiv 0009      PWM_generar@AuxCCPR2L 001E       SENO_GENERAR_1@F7362 0100  
     SENO_GENERAR_2@F7366 0150       SENO_GENERAR_3@F7369 0060                    clear_0 5EB2  
        ___awdiv@quotient 0007                    tm_1s@i 0002              __mediumconst 7E72  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
    __CFG_LS48MHZ$SYS24X4 000000                __accesstop 0060   __end_of__initialization 5F06  
           __end_of_PWM_1 6330            __pcstackCOMRAM 0001              __pidataBANK0 5D6A  
            __pidataBANK1 6330             __end_of_tm_1s 5D6A           __CFG_PCLKEN$OFF 000000  
                 ??_PWM_1 000D                 ?_Lcd_Init 0001                 ?_Lcd_Out2 0004  
 __end_of_TRIAN_GENERAR_1 6120   __end_of_TRIAN_GENERAR_2 618A                   ??_tm_1s 0001  
     __size_of_Lcd_Chr_CP 0130                __pbssBANK0 00CE              ?_PWM_generar 000E  
       __CFG_PLLSEL$PLL4X 000000                   ?___lmul 0001                   ?___wmul 0001  
                 _CCP2CON 000F97       TRIAN_GENERAR_1@seno 0013       TRIAN_GENERAR_2@seno 0013  
                 PWM@duty 000B            ___lmul@product 0009                ??_Lcd_Init 0004  
              ??_Lcd_Out2 0007                 ?_lcd_goto 0004                 PWM_1@duty 000B  
                 _Lcd_Cmd 6760                   _Lcd_Out 5E4A                _frecuencia 0042  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 6548  
                 ___almod 646C                   ___awdiv 63C8           __size_of___lmul 0056  
                 ___lldiv 618A           __size_of___wmul 0026          ??_SENO_GENERAR_1 0011  
        ??_SENO_GENERAR_2 0011          ??_SENO_GENERAR_3 0011                   __pcinit 5EAC  
   PWM_generar@AuxCCP2CON 0018                   __ramtop 0800                   __ptext0 6DC4  
                 __ptext1 5D3E                   __ptext2 5DA6                   __ptext3 5D18  
                 __ptext4 6120                   __ptext5 60B6                   __ptext6 629E  
                 __ptext7 604C                   __ptext8 5FE2                   __ptext9 5F78  
            __size_of_PWM 0092                 _T2CONbits 000FBA          ___aldiv@dividend 0001  
                 main@cad 009C                   main@fre 00C6                ??_lcd_goto 0008  
        ?_TRIAN_GENERAR_1 0001          ?_TRIAN_GENERAR_2 0001      end_of_initialization 5F06  
           __Lmediumconst 7E72           ___lldiv@divisor 0005           ___lldiv@counter 000D  
            ?_Conv_Entero 000F          ___aldiv@quotient 000B              ??_Lcd_Chr_CP 0001  
               Lcd_Out2@x 0004                 Lcd_Out2@y 0007                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE                 _PORTAbits 000F80           Conv_Entero@conv 0013  
               _PORTDbits 000F83                 _TRISCbits 000F94                 _TRISDbits 000F95  
      __end_of_Lcd_Chr_CP 69B8                main@cadena 00B0               _CCP1CONbits 000FBD  
    __size_of_PWM_generar 0234               PWM@calculos 000F            __end_of___lmul 5E4A  
          __end_of___wmul 5D3E       start_initialization 5EAC               __end_of_PWM 629E  
           Lcd_Out@buffer 0005         __size_of_Lcd_Init 011C         __size_of_Lcd_Out2 0068  
         __CFG_nLPBOR$OFF 000000                  ??___lmul 0009      Conv_Entero@numeroReg 0034  
                ??___wmul 0005               __pdataBANK0 0060               __pdataBANK1 0100  
      SENO_GENERAR_1@seno 0013        SENO_GENERAR_2@seno 0013        SENO_GENERAR_3@seno 0013  
             __pbssCOMRAM 003E             __pcstackBANK0 009C       __end_of__stringdata 7FFE  
         __CFG_nPWRTEN$ON 000000                  ?_Lcd_Cmd 0001         __size_of_lcd_goto 004E  
                ?_Lcd_Out 0004      TRIAN_GENERAR_1@F7362 0128      TRIAN_GENERAR_2@F7366 0174  
    TRIAN_GENERAR_3@F7369 007E             __pmediumconst 7E72                  ?___aldiv 0001  
                ?___almod 0001                  ?___awdiv 0001                  ?___lldiv 0001  
    __size_of_Conv_Entero 01D8          ___almod@dividend 0001                  PWM_1@BIT 0221  
  PWM_generar@prescalador 0016                  PWM@canal 0009            __size_of_PWM_1 0092  
          __size_of_tm_1s 002C           ___aldiv@divisor 0005           ___aldiv@counter 0009  
          ___wmul@product 0005                  Lcd_Out@x 0004          __CFG_WDTPS$32768 000000  
                Lcd_Out@y 0007            Conv_Entero@num 002F              Lcd_Init@data 0005  
             __stringdata 7E73         ___wmul@multiplier 0001                PWM_1@canal 0009  
               lcd_goto@x 0004                 lcd_goto@y 0006           PWM_generar@fpwm 0010  
         PWM_generar@duty 000E         __CFG_CFGPLLEN$OFF 000000              Lcd_Out2@data 0008  
                _Lcd_Init 6644                  _Lcd_Out2 5F10       Conv_Entero@convTemp 001A  
       ___lmul@multiplier 0001                 copy_data0 5EDA                 copy_data1 5EFA  
        __size_of_Lcd_Cmd 0128          __size_of_Lcd_Out 0062  __size_of_TRIAN_GENERAR_1 006A  
__size_of_TRIAN_GENERAR_2 006A                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000          __size_of___aldiv 00FC          __size_of___almod 00DC  
        __size_of___awdiv 00A4          __size_of___lldiv 0082            Lcd_Chr_CP@data 0003  
 __size_of_SENO_GENERAR_1 006A   __size_of_SENO_GENERAR_2 006A   __size_of_SENO_GENERAR_3 006A  
                __ptext10 620C                  __ptext11 63C8                  __ptext20 5DF4  
                __ptext12 6B90                  __ptext21 646C                  __ptext13 618A  
                __ptext22 6548                  __ptext14 5F10                  __ptext15 5E4A  
                __ptext16 6888                  __ptext17 6644                  __ptext18 6760  
                __ptext19 69B8                  _lcd_goto 5DA6           ___almod@divisor 0005  
         ___almod@counter 0009             ??_PWM_generar 0012               Lcd_Cmd@data 0003  
           __size_of_main 10AE                  main@cant 00C8               Lcd_Out@data 0008  
        TRIAN_GENERAR_1@i 003B          TRIAN_GENERAR_2@i 0037          ___lldiv@dividend 0001  
Conv_Entero@punteroActual 0032       __end_of_PWM_generar 6DC4              Conv_Entero@i 0031  
    __CFG_CPUDIV$NOCLKDIV 000000         ??_TRIAN_GENERAR_1 0011         ??_TRIAN_GENERAR_2 0011  
       Conv_Entero@numero 000F          ___lldiv@quotient 0009              ___aldiv@sign 000A  
      __CFG_FOSC$INTOSCIO 000000              ___almod@sign 000A             ??_Conv_Entero 0015  
